===== Access_Valid_1.whiley =====
checking: 13:int:arridx (%11, %12)
conjecture: 0 <= toInt(index) && toInt(index) < arraylen(l)
  looping thru 2 args of 13:int:arridx (%11, %12)
  looping thru 1 args of 11:Access_Valid_1:list:read (%0)
  looping thru 0 args of 0:Access_Valid_1:list:decl l
  looping thru 1 args of 12:int:read (%1)
  looping thru 0 args of 1:int:decl index
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 2 args of 7:any:call Access_Valid_1:index(%5, %6)
  looping thru 1 args of 5:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl l = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 8:int:const 1
checking: 15:bool:eq (%13, %14)
  looping thru 2 args of 15:bool:eq (%13, %14)
  looping thru 2 args of 13:any:call Access_Valid_1:index(%11, %12)
  looping thru 1 args of 11:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl l = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 12:int:const 1
  looping thru 0 args of 14:int:const 2
checking: 21:bool:eq (%19, %20)
  looping thru 2 args of 21:bool:eq (%19, %20)
  looping thru 2 args of 19:any:call Access_Valid_1:index(%17, %18)
  looping thru 1 args of 17:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl l = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 18:int:const 2
  looping thru 0 args of 20:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Access_Valid_2.whiley =====
checking: 13:int:arridx (%11, %12)
conjecture: 0 <= toInt(index) && toInt(index) < arraylen(l)
  looping thru 2 args of 13:int:arridx (%11, %12)
  looping thru 1 args of 11:Access_Valid_2:liststr:read (%0)
  looping thru 0 args of 0:Access_Valid_2:liststr:decl l
  looping thru 1 args of 12:int:read (%1)
  looping thru 0 args of 1:int:decl index
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 2 args of 7:any:call Access_Valid_2:index(%5, %6)
  looping thru 1 args of 5:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl l = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 8:int:const 1
checking: 15:bool:eq (%13, %14)
  looping thru 2 args of 15:bool:eq (%13, %14)
  looping thru 2 args of 13:any:call Access_Valid_2:index(%11, %12)
  looping thru 1 args of 11:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl l = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 12:int:const 1
  looping thru 0 args of 14:int:const 2
checking: 21:bool:eq (%19, %20)
  looping thru 2 args of 21:bool:eq (%19, %20)
  looping thru 2 args of 19:any:call Access_Valid_2:index(%17, %18)
  looping thru 1 args of 17:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl l = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 18:int:const 2
  looping thru 0 args of 20:int:const 3
checking: 29:bool:eq (%27, %28)
  looping thru 2 args of 29:bool:eq (%27, %28)
  looping thru 2 args of 27:any:call Access_Valid_2:index(%25, %26)
  looping thru 1 args of 25:int[]:read (%24)
  looping thru 1 args of 24:int[]:decl s = 23
  looping thru 0 args of 23:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 26:int:const 0
  looping thru 0 args of 28:int:const 72
checking: 35:bool:eq (%33, %34)
  looping thru 2 args of 35:bool:eq (%33, %34)
  looping thru 2 args of 33:any:call Access_Valid_2:index(%31, %32)
  looping thru 1 args of 31:int[]:read (%24)
  looping thru 1 args of 24:int[]:decl s = 23
  looping thru 0 args of 23:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 32:int:const 1
  looping thru 0 args of 34:int:const 101
checking: 41:bool:eq (%39, %40)
  looping thru 2 args of 41:bool:eq (%39, %40)
  looping thru 2 args of 39:any:call Access_Valid_2:index(%37, %38)
  looping thru 1 args of 37:int[]:read (%24)
  looping thru 1 args of 24:int[]:decl s = 23
  looping thru 0 args of 23:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 38:int:const 2
  looping thru 0 args of 40:int:const 108
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== AddressExpression_Valid_1.whiley =====
checking: 4:int:add (%2, %3)
  looping thru 2 args of 4:int:add (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl i
  looping thru 0 args of 3:int:const 1
wyboogie.NotImplementedYet: createConstant(&AddressExpression_Valid_1:suc():function(int)->(int)):function(int)->(int)
	at wyboogie.Wyil2Boogie.createConstant(Wyil2Boogie.java:1502)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:963)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== AddressExpression_Valid_2.whiley =====
mangle overloaded : function(bool)->(bool) to overloaded$2
checking: 4:int:add (%2, %3)
  looping thru 2 args of 4:int:add (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl a
  looping thru 0 args of 3:int:const 1
checking: 3:bool:not (%2)
  looping thru 1 args of 3:bool:not (%2)
  looping thru 1 args of 2:bool:read (%0)
  looping thru 0 args of 0:bool:decl a
wyboogie.NotImplementedYet: createConstant(&AddressExpression_Valid_2:overloaded():function(int)->(int)):function(int)->(int)
	at wyboogie.Wyil2Boogie.createConstant(Wyil2Boogie.java:1502)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:963)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== AddressExpression_Valid_3.whiley =====
checking: 5:int:add (%3, %4)
  looping thru 2 args of 5:int:add (%3, %4)
  looping thru 1 args of 3:int:read (%0)
  looping thru 0 args of 0:int:decl a
  looping thru 1 args of 4:int:read (%1)
  looping thru 0 args of 1:int:decl b
wyboogie.NotImplementedYet: createConstant(&AddressExpression_Valid_3:add():function(int,int)->(int)):function(int,int)->(int)
	at wyboogie.Wyil2Boogie.createConstant(Wyil2Boogie.java:1502)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:963)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== AddressExpression_Valid_4.whiley =====
mangle overloaded : function(bool,bool)->(bool) to overloaded$2
checking: 5:int:add (%3, %4)
  looping thru 2 args of 5:int:add (%3, %4)
  looping thru 1 args of 3:int:read (%0)
  looping thru 0 args of 0:int:decl a
  looping thru 1 args of 4:int:read (%1)
  looping thru 0 args of 1:int:decl b
checking: 5:bool:land (%3, %4)
  looping thru 1 args of 3:bool:read (%0)
  looping thru 0 args of 0:bool:decl a
  looping thru 1 args of 4:bool:read (%1)
  looping thru 0 args of 1:bool:decl b
wyboogie.NotImplementedYet: createConstant(&AddressExpression_Valid_4:overloaded():function(int,int)->(int)):function(int,int)->(int)
	at wyboogie.Wyil2Boogie.createConstant(Wyil2Boogie.java:1502)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:963)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Assume_Valid_1.whiley =====
checking: 18:bool:lt (%15, %17)
  looping thru 2 args of 18:bool:lt (%15, %17)
  looping thru 1 args of 15:int:read (%5)
  looping thru 1 args of 5:int:decl i = 4
  looping thru 0 args of 4:int:const 0
  looping thru 1 args of 17:int:arrlen (%16)
  looping thru 1 args of 16:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl list
assign 1 := 1
checking: 19:int:read (%3)
  looping thru 1 args of 19:int:read (%3)
  looping thru 1 args of 3:int:decl r = 2
  looping thru 0 args of 2:int:const 0
checking: 24:int:add (%20, %23)
  looping thru 2 args of 24:int:add (%20, %23)
  looping thru 1 args of 20:int:read (%3)
  looping thru 1 args of 3:int:decl r = 2
  looping thru 0 args of 2:int:const 0
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(list)
  looping thru 2 args of 23:int:arridx (%21, %22)
  looping thru 1 args of 21:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl list
  looping thru 1 args of 22:int:read (%5)
  looping thru 1 args of 5:int:decl i = 4
  looping thru 0 args of 4:int:const 0
checking: 28:bool:gteq (%26, %27)
  looping thru 2 args of 28:bool:gteq (%26, %27)
  looping thru 1 args of 26:int:read (%3)
  looping thru 1 args of 3:int:decl r = 2
  looping thru 0 args of 2:int:const 0
  looping thru 0 args of 27:int:const 0
assign 1 := 1
checking: 30:int:read (%5)
  looping thru 1 args of 30:int:read (%5)
  looping thru 1 args of 5:int:decl i = 4
  looping thru 0 args of 4:int:const 0
checking: 33:int:add (%31, %32)
  looping thru 2 args of 33:int:add (%31, %32)
  looping thru 1 args of 31:int:read (%5)
  looping thru 1 args of 5:int:decl i = 4
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 32:int:const 1
checking: 37:int:read (%3)
  looping thru 1 args of 37:int:read (%3)
  looping thru 1 args of 3:int:decl r = 2
  looping thru 0 args of 2:int:const 0
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:Assume_Valid_1:nat:read (%6)
  looping thru 1 args of 6:Assume_Valid_1:nat:decl rs = 5
  looping thru 1 args of 5:Assume_Valid_1:nat:call Assume_Valid_1:sum(%4)
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 2:int:const 2
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 8:int:const 6
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Assume_Valid_2.whiley =====
checking: 2:bool:eq (%0, %1)
  looping thru 2 args of 2:bool:eq (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== BoolAssign_Valid_1.whiley =====
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:bool:read (%1)
  looping thru 1 args of 1:bool:decl x = 0
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 3:bool:const true
assign 1 := 1
checking: 6:bool:read (%1)
  looping thru 1 args of 6:bool:read (%1)
  looping thru 1 args of 1:bool:decl x = 0
  looping thru 0 args of 0:bool:const true
checking: 7:bool:const false
  looping thru 0 args of 7:bool:const false
checking: 11:bool:eq (%9, %10)
  looping thru 2 args of 11:bool:eq (%9, %10)
  looping thru 1 args of 9:bool:read (%1)
  looping thru 1 args of 1:bool:decl x = 0
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 10:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== BoolAssign_Valid_2.whiley =====
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 4:bool:read (%1)
  looping thru 1 args of 1:bool:decl x = 0
  looping thru 0 args of 0:bool:const true
  looping thru 1 args of 5:bool:read (%1)
  looping thru 1 args of 1:bool:decl x = 0
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 7:bool:const true
checking: 14:bool:eq (%12, %13)
  looping thru 2 args of 14:bool:eq (%12, %13)
  looping thru 1 args of 10:bool:read (%1)
  looping thru 1 args of 1:bool:decl x = 0
  looping thru 0 args of 0:bool:const true
  looping thru 1 args of 11:bool:read (%3)
  looping thru 1 args of 3:bool:decl y = 2
  looping thru 0 args of 2:bool:const false
  looping thru 0 args of 13:bool:const false
checking: 20:bool:eq (%18, %19)
  looping thru 2 args of 20:bool:eq (%18, %19)
  looping thru 1 args of 16:bool:read (%3)
  looping thru 1 args of 3:bool:decl y = 2
  looping thru 0 args of 2:bool:const false
  looping thru 1 args of 17:bool:read (%1)
  looping thru 1 args of 1:bool:decl x = 0
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 19:bool:const false
checking: 26:bool:eq (%24, %25)
  looping thru 2 args of 26:bool:eq (%24, %25)
  looping thru 1 args of 22:bool:read (%3)
  looping thru 1 args of 3:bool:decl y = 2
  looping thru 0 args of 2:bool:const false
  looping thru 1 args of 23:bool:read (%3)
  looping thru 1 args of 3:bool:decl y = 2
  looping thru 0 args of 2:bool:const false
  looping thru 0 args of 25:bool:const false
checking: 29:bool:not (%28)
  looping thru 1 args of 29:bool:not (%28)
  looping thru 1 args of 28:bool:read (%3)
  looping thru 1 args of 3:bool:decl y = 2
  looping thru 0 args of 2:bool:const false
checking: 33:bool:not (%32)
  looping thru 1 args of 33:bool:not (%32)
  looping thru 1 args of 32:bool:not (%31)
  looping thru 1 args of 31:bool:read (%1)
  looping thru 1 args of 1:bool:decl x = 0
  looping thru 0 args of 0:bool:const true
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== BoolAssign_Valid_3.whiley =====
checking: 17:bool:read (%16)
  looping thru 1 args of 17:bool:read (%16)
  looping thru 1 args of 16:bool:decl a = 15
  looping thru 2 args of 15:bool:eq (%13, %14)
  looping thru 1 args of 13:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 14:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 18:int:const 1
  looping thru 0 args of 18:int:const 1
checking: 23:int:add (%21, %22)
  looping thru 2 args of 23:int:add (%21, %22)
  looping thru 1 args of 21:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 22:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 18:bool:not (%17)
  looping thru 1 args of 18:bool:not (%17)
  looping thru 1 args of 17:bool:read (%16)
  looping thru 1 args of 16:bool:decl a = 15
  looping thru 2 args of 15:bool:gteq (%13, %14)
  looping thru 1 args of 13:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 14:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 21:int:add (%19, %20)
  looping thru 2 args of 21:int:add (%19, %20)
  looping thru 1 args of 19:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 20:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 24:int:const 1
  looping thru 0 args of 24:int:const 1
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 2 args of 2:int:call BoolAssign_Valid_3:f(%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 3:int:const 1
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 2 args of 8:int:call BoolAssign_Valid_3:f(%6, %7)
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 9:int:const 1
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 2 args of 14:int:call BoolAssign_Valid_3:f(%12, %13)
  looping thru 0 args of 12:int:const 4
  looping thru 0 args of 13:int:const 345
  looping thru 0 args of 15:int:const 349
checking: 22:bool:eq (%20, %21)
  looping thru 2 args of 22:bool:eq (%20, %21)
  looping thru 2 args of 20:int:call BoolAssign_Valid_3:g(%18, %19)
  looping thru 0 args of 18:int:const 1
  looping thru 0 args of 19:int:const 1
  looping thru 0 args of 21:int:const 1
checking: 28:bool:eq (%26, %27)
  looping thru 2 args of 28:bool:eq (%26, %27)
  looping thru 2 args of 26:int:call BoolAssign_Valid_3:g(%24, %25)
  looping thru 0 args of 24:int:const 0
  looping thru 0 args of 25:int:const 0
  looping thru 0 args of 27:int:const 1
checking: 34:bool:eq (%32, %33)
  looping thru 2 args of 34:bool:eq (%32, %33)
  looping thru 2 args of 32:int:call BoolAssign_Valid_3:g(%30, %31)
  looping thru 0 args of 30:int:const 4
  looping thru 0 args of 31:int:const 345
  looping thru 0 args of 33:int:const 349
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== BoolAssign_Valid_4.whiley =====
checking: 7:bool:read (%6)
  looping thru 1 args of 7:bool:read (%6)
  looping thru 1 args of 6:bool:decl a = 5
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 4:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 8:int:const 1
  looping thru 0 args of 8:int:const 1
checking: 13:int:add (%11, %12)
  looping thru 2 args of 13:int:add (%11, %12)
  looping thru 1 args of 11:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 12:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 8:bool:not (%7)
  looping thru 1 args of 8:bool:not (%7)
  looping thru 1 args of 7:bool:read (%6)
  looping thru 1 args of 6:bool:decl a = 5
  looping thru 2 args of 5:bool:gteq (%3, %4)
  looping thru 1 args of 3:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 4:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 11:int:add (%9, %10)
  looping thru 2 args of 11:int:add (%9, %10)
  looping thru 1 args of 9:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 10:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 14:int:const 1
  looping thru 0 args of 14:int:const 1
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 2 args of 2:int:call BoolAssign_Valid_4:f(%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 3:int:const 1
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 2 args of 8:int:call BoolAssign_Valid_4:f(%6, %7)
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 9:int:const 1
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 2 args of 14:int:call BoolAssign_Valid_4:f(%12, %13)
  looping thru 0 args of 12:int:const 4
  looping thru 0 args of 13:int:const 345
  looping thru 0 args of 15:int:const 349
checking: 22:bool:eq (%20, %21)
  looping thru 2 args of 22:bool:eq (%20, %21)
  looping thru 2 args of 20:int:call BoolAssign_Valid_4:g(%18, %19)
  looping thru 0 args of 18:int:const 1
  looping thru 0 args of 19:int:const 1
  looping thru 0 args of 21:int:const 1
checking: 28:bool:eq (%26, %27)
  looping thru 2 args of 28:bool:eq (%26, %27)
  looping thru 2 args of 26:int:call BoolAssign_Valid_4:g(%24, %25)
  looping thru 0 args of 24:int:const 0
  looping thru 0 args of 25:int:const 0
  looping thru 0 args of 27:int:const 1
checking: 34:bool:eq (%32, %33)
  looping thru 2 args of 34:bool:eq (%32, %33)
  looping thru 2 args of 32:int:call BoolAssign_Valid_4:g(%30, %31)
  looping thru 0 args of 30:int:const 4
  looping thru 0 args of 31:int:const 345
  looping thru 0 args of 33:int:const 349
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== BoolAssign_Valid_5.whiley =====
checking: 17:bool:lt (%15, %16)
  looping thru 2 args of 17:bool:lt (%15, %16)
  looping thru 1 args of 15:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 16:int:read (%1)
  looping thru 0 args of 1:int:decl y
assign 1 := 1
checking: 18:bool:read (%14)
  looping thru 1 args of 18:bool:read (%14)
  looping thru 1 args of 14:bool:decl a = 13
  looping thru 0 args of 13:bool:const true
checking: 19:bool:const false
  looping thru 0 args of 19:bool:const false
checking: 24:bool:not (%23)
  looping thru 1 args of 24:bool:not (%23)
  looping thru 1 args of 23:bool:read (%14)
  looping thru 1 args of 14:bool:decl a = 13
  looping thru 0 args of 13:bool:const true
checking: 27:int:add (%25, %26)
  looping thru 2 args of 27:int:add (%25, %26)
  looping thru 1 args of 25:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 26:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 30:int:const 123
  looping thru 0 args of 30:int:const 123
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 2 args of 2:int:call BoolAssign_Valid_5:f(%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 3:int:const 123
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 2 args of 8:int:call BoolAssign_Valid_5:f(%6, %7)
  looping thru 0 args of 6:int:const 2
  looping thru 0 args of 7:int:const 1
  looping thru 0 args of 9:int:const 123
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 2 args of 14:int:call BoolAssign_Valid_5:f(%12, %13)
  looping thru 0 args of 12:int:const 1
  looping thru 0 args of 13:int:const 2
  looping thru 0 args of 15:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== BoolAssign_Valid_6.whiley =====
checking: 7:bool:lt (%5, %6)
  looping thru 2 args of 7:bool:lt (%5, %6)
  looping thru 1 args of 5:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 6:int:read (%1)
  looping thru 0 args of 1:int:decl y
assign 1 := 1
checking: 8:bool:read (%4)
  looping thru 1 args of 8:bool:read (%4)
  looping thru 1 args of 4:bool:decl a = 3
  looping thru 0 args of 3:bool:const true
checking: 9:bool:const false
  looping thru 0 args of 9:bool:const false
checking: 14:bool:not (%13)
  looping thru 1 args of 14:bool:not (%13)
  looping thru 1 args of 13:bool:read (%4)
  looping thru 1 args of 4:bool:decl a = 3
  looping thru 0 args of 3:bool:const true
checking: 17:int:add (%15, %16)
  looping thru 2 args of 17:int:add (%15, %16)
  looping thru 1 args of 15:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 16:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 20:int:const 123
  looping thru 0 args of 20:int:const 123
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 2 args of 2:int:call BoolAssign_Valid_6:f(%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 3:int:const 123
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 2 args of 8:int:call BoolAssign_Valid_6:f(%6, %7)
  looping thru 0 args of 6:int:const 2
  looping thru 0 args of 7:int:const 1
  looping thru 0 args of 9:int:const 123
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 2 args of 14:int:call BoolAssign_Valid_6:f(%12, %13)
  looping thru 0 args of 12:int:const 1
  looping thru 0 args of 13:int:const 2
  looping thru 0 args of 15:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== BoolFun_Valid_1.whiley =====
checking: 2:bool:read (%0)
  looping thru 1 args of 2:bool:read (%0)
  looping thru 0 args of 0:bool:decl b
checking: 3:bool:call BoolFun_Valid_1:f(%2)
  looping thru 1 args of 3:bool:call BoolFun_Valid_1:f(%2)
  looping thru 1 args of 2:bool:read (%1)
  looping thru 1 args of 1:bool:decl x = 0
  looping thru 0 args of 0:bool:const true
assign 1 := 1
checking: 5:bool:read (%1)
  looping thru 1 args of 5:bool:read (%1)
  looping thru 1 args of 1:bool:decl x = 0
  looping thru 0 args of 0:bool:const true
checking: 6:bool:const false
  looping thru 0 args of 6:bool:const false
checking: 10:bool:not (%9)
  looping thru 1 args of 10:bool:not (%9)
  looping thru 1 args of 9:bool:call BoolFun_Valid_1:f(%8)
  looping thru 1 args of 8:bool:read (%1)
  looping thru 1 args of 1:bool:decl x = 0
  looping thru 0 args of 0:bool:const true
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== BoolIfElse_Valid_1.whiley =====
checking: 2:bool:read (%0)
  looping thru 1 args of 2:bool:read (%0)
  looping thru 0 args of 0:bool:decl b
checking: 3:bool:const true
  looping thru 0 args of 3:bool:const true
checking: 6:bool:const false
  looping thru 0 args of 6:bool:const false
checking: 1:bool:call BoolIfElse_Valid_1:f(%0)
  looping thru 1 args of 1:bool:call BoolIfElse_Valid_1:f(%0)
  looping thru 0 args of 0:bool:const true
checking: 5:bool:not (%4)
  looping thru 1 args of 5:bool:not (%4)
  looping thru 1 args of 4:bool:call BoolIfElse_Valid_1:f(%3)
  looping thru 0 args of 3:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== BoolIfElse_Valid_2.whiley =====
checking: 2:bool:read (%0)
  looping thru 1 args of 2:bool:read (%0)
  looping thru 0 args of 0:bool:decl b
checking: 3:int:const 1
  looping thru 0 args of 3:int:const 1
checking: 6:int:const 0
  looping thru 0 args of 6:int:const 0
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call BoolIfElse_Valid_2:f(%0)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 2:int:const 1
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:call BoolIfElse_Valid_2:f(%5)
  looping thru 0 args of 5:bool:const false
  looping thru 0 args of 7:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== BoolList_Valid_1.whiley =====
checking: 10:bool:eq (%5, %9)
  looping thru 2 args of 10:bool:eq (%5, %9)
  looping thru 1 args of 5:bool[]:read (%4)
  looping thru 1 args of 4:bool[]:decl ls = 3
  looping thru 3 args of 3:bool[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const false
  looping thru 0 args of 2:bool:const true
  looping thru 3 args of 9:bool[]:arrinit (%6, %7, %8)
  looping thru 0 args of 6:bool:const true
  looping thru 0 args of 7:bool:const false
  looping thru 0 args of 8:bool:const true
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
conjecture: 0 <= 0 && 0 < arraylen(ls)
  looping thru 2 args of 14:bool:arridx (%12, %13)
  looping thru 1 args of 12:bool[]:read (%4)
  looping thru 1 args of 4:bool[]:decl ls = 3
  looping thru 3 args of 3:bool[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const false
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 13:int:const 0
  looping thru 0 args of 15:bool:const true
checking: 22:bool:eq (%20, %21)
  looping thru 2 args of 22:bool:eq (%20, %21)
conjecture: 0 <= 1 && 1 < arraylen(ls)
  looping thru 2 args of 20:bool:arridx (%18, %19)
  looping thru 1 args of 18:bool[]:read (%4)
  looping thru 1 args of 4:bool[]:decl ls = 3
  looping thru 3 args of 3:bool[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const false
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 19:int:const 1
  looping thru 0 args of 21:bool:const false
checking: 28:bool:eq (%26, %27)
  looping thru 2 args of 28:bool:eq (%26, %27)
conjecture: 0 <= 2 && 2 < arraylen(ls)
  looping thru 2 args of 26:bool:arridx (%24, %25)
  looping thru 1 args of 24:bool[]:read (%4)
  looping thru 1 args of 4:bool[]:decl ls = 3
  looping thru 3 args of 3:bool[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const false
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 25:int:const 2
  looping thru 0 args of 27:bool:const true
assign 1 := 1
checking: 32:bool:arridx (%30, %31)
conjecture: 0 <= 0 && 0 < arraylen(ls)
  looping thru 2 args of 32:bool:arridx (%30, %31)
  looping thru 1 args of 30:bool[]:read (%4)
  looping thru 1 args of 4:bool[]:decl ls = 3
  looping thru 3 args of 3:bool[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const false
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 31:int:const 0
checking: 33:bool:const false
  looping thru 0 args of 33:bool:const false
checking: 39:bool:eq (%37, %38)
  looping thru 2 args of 39:bool:eq (%37, %38)
conjecture: 0 <= 0 && 0 < arraylen(ls)
  looping thru 2 args of 37:bool:arridx (%35, %36)
  looping thru 1 args of 35:bool[]:read (%4)
  looping thru 1 args of 4:bool[]:decl ls = 3
  looping thru 3 args of 3:bool[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const false
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 36:int:const 0
  looping thru 0 args of 38:bool:const false
checking: 45:bool:eq (%43, %44)
  looping thru 2 args of 45:bool:eq (%43, %44)
conjecture: 0 <= 1 && 1 < arraylen(ls)
  looping thru 2 args of 43:bool:arridx (%41, %42)
  looping thru 1 args of 41:bool[]:read (%4)
  looping thru 1 args of 4:bool[]:decl ls = 3
  looping thru 3 args of 3:bool[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const false
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 42:int:const 1
  looping thru 0 args of 44:bool:const false
checking: 51:bool:eq (%49, %50)
  looping thru 2 args of 51:bool:eq (%49, %50)
conjecture: 0 <= 2 && 2 < arraylen(ls)
  looping thru 2 args of 49:bool:arridx (%47, %48)
  looping thru 1 args of 47:bool[]:read (%4)
  looping thru 1 args of 4:bool[]:decl ls = 3
  looping thru 3 args of 3:bool[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const false
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 48:int:const 2
  looping thru 0 args of 50:bool:const true
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== BoolList_Valid_2.whiley =====
checking: 20:bool:lt (%17, %19)
  looping thru 2 args of 20:bool:lt (%17, %19)
  looping thru 1 args of 17:int:read (%5)
  looping thru 1 args of 5:int:decl i = 4
  looping thru 0 args of 4:int:const 0
  looping thru 1 args of 19:int:arrlen (%18)
  looping thru 1 args of 18:bool[]:read (%0)
  looping thru 0 args of 0:bool[]:decl board
checking: 23:bool:call BoolList_Valid_2:isAlive(%21, %22)
  looping thru 2 args of 23:bool:call BoolList_Valid_2:isAlive(%21, %22)
  looping thru 1 args of 21:int:read (%5)
  looping thru 1 args of 5:int:decl i = 4
  looping thru 0 args of 4:int:const 0
  looping thru 1 args of 22:bool[]:read (%0)
  looping thru 0 args of 0:bool[]:decl board
assign 1 := 1
checking: 26:bool:arridx (%24, %25)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(nboard)
  looping thru 2 args of 26:bool:arridx (%24, %25)
  looping thru 1 args of 24:bool[]:read (%3)
  looping thru 1 args of 3:bool[]:decl nboard = 2
  looping thru 1 args of 2:bool[]:read (%0)
  looping thru 0 args of 0:bool[]:decl board
  looping thru 1 args of 25:int:read (%5)
  looping thru 1 args of 5:int:decl i = 4
  looping thru 0 args of 4:int:const 0
checking: 27:bool:const true
  looping thru 0 args of 27:bool:const true
assign 1 := 1
checking: 32:bool:arridx (%30, %31)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(nboard)
  looping thru 2 args of 32:bool:arridx (%30, %31)
  looping thru 1 args of 30:bool[]:read (%3)
  looping thru 1 args of 3:bool[]:decl nboard = 2
  looping thru 1 args of 2:bool[]:read (%0)
  looping thru 0 args of 0:bool[]:decl board
  looping thru 1 args of 31:int:read (%5)
  looping thru 1 args of 5:int:decl i = 4
  looping thru 0 args of 4:int:const 0
checking: 33:bool:const false
  looping thru 0 args of 33:bool:const false
assign 1 := 1
checking: 37:int:read (%5)
  looping thru 1 args of 37:int:read (%5)
  looping thru 1 args of 5:int:decl i = 4
  looping thru 0 args of 4:int:const 0
checking: 40:int:add (%38, %39)
  looping thru 2 args of 40:int:add (%38, %39)
  looping thru 1 args of 38:int:read (%5)
  looping thru 1 args of 5:int:decl i = 4
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 39:int:const 1
checking: 44:bool[]:read (%3)
  looping thru 1 args of 44:bool[]:read (%3)
  looping thru 1 args of 3:bool[]:decl nboard = 2
  looping thru 1 args of 2:bool[]:read (%0)
  looping thru 0 args of 0:bool[]:decl board
checking: 24:bool:land (%5, %23)
  looping thru 2 args of 5:bool:gt (%3, %4)
  looping thru 1 args of 3:int:read (%0)
  looping thru 0 args of 0:int:decl i
  looping thru 0 args of 4:int:const 0
  looping thru 2 args of 11:bool:lt (%8, %10)
  looping thru 2 args of 8:int:add (%6, %7)
  looping thru 1 args of 6:int:read (%0)
  looping thru 0 args of 0:int:decl i
  looping thru 0 args of 7:int:const 1
  looping thru 1 args of 10:int:arrlen (%9)
  looping thru 1 args of 9:bool[]:read (%1)
  looping thru 0 args of 1:bool[]:decl board
conjecture: 0 <= toInt(i) - 1 && toInt(i) - 1 < arraylen(board)
  looping thru 2 args of 16:bool:arridx (%12, %15)
  looping thru 1 args of 12:bool[]:read (%1)
  looping thru 0 args of 1:bool[]:decl board
  looping thru 2 args of 15:int:sub (%13, %14)
  looping thru 1 args of 13:int:read (%0)
  looping thru 0 args of 0:int:decl i
  looping thru 0 args of 14:int:const 1
conjecture: 0 <= toInt(i) + 1 && toInt(i) + 1 < arraylen(board)
  looping thru 2 args of 21:bool:arridx (%17, %20)
  looping thru 1 args of 17:bool[]:read (%1)
  looping thru 0 args of 1:bool[]:decl board
  looping thru 2 args of 20:int:add (%18, %19)
  looping thru 1 args of 18:int:read (%0)
  looping thru 0 args of 0:int:decl i
  looping thru 0 args of 19:int:const 1
checking: 25:bool:const true
  looping thru 0 args of 25:bool:const true
checking: 28:bool:const false
  looping thru 0 args of 28:bool:const false
checking: 18:bool:eq (%9, %17)
  looping thru 2 args of 18:bool:eq (%9, %17)
  looping thru 1 args of 9:bool[]:read (%8)
  looping thru 1 args of 8:bool[]:decl xs = 7
  looping thru 7 args of 7:bool[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const true
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 3:bool:const true
  looping thru 0 args of 4:bool:const true
  looping thru 0 args of 5:bool:const true
  looping thru 0 args of 6:bool:const true
  looping thru 7 args of 17:bool[]:arrinit (%10, %11, %12, %13, %14, %15, %16)
  looping thru 0 args of 10:bool:const true
  looping thru 0 args of 11:bool:const true
  looping thru 0 args of 12:bool:const true
  looping thru 0 args of 13:bool:const true
  looping thru 0 args of 14:bool:const true
  looping thru 0 args of 15:bool:const true
  looping thru 0 args of 16:bool:const true
assign 1 := 1
checking: 20:bool[]:read (%8)
  looping thru 1 args of 20:bool[]:read (%8)
  looping thru 1 args of 8:bool[]:decl xs = 7
  looping thru 7 args of 7:bool[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const true
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 3:bool:const true
  looping thru 0 args of 4:bool:const true
  looping thru 0 args of 5:bool:const true
  looping thru 0 args of 6:bool:const true
checking: 22:bool[]:call BoolList_Valid_2:play(%21)
  looping thru 1 args of 22:bool[]:call BoolList_Valid_2:play(%21)
  looping thru 1 args of 21:bool[]:read (%8)
  looping thru 1 args of 8:bool[]:decl xs = 7
  looping thru 7 args of 7:bool[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const true
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 3:bool:const true
  looping thru 0 args of 4:bool:const true
  looping thru 0 args of 5:bool:const true
  looping thru 0 args of 6:bool:const true
checking: 33:bool:eq (%24, %32)
  looping thru 2 args of 33:bool:eq (%24, %32)
  looping thru 1 args of 24:bool[]:read (%8)
  looping thru 1 args of 8:bool[]:decl xs = 7
  looping thru 7 args of 7:bool[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const true
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 3:bool:const true
  looping thru 0 args of 4:bool:const true
  looping thru 0 args of 5:bool:const true
  looping thru 0 args of 6:bool:const true
  looping thru 7 args of 32:bool[]:arrinit (%25, %26, %27, %28, %29, %30, %31)
  looping thru 0 args of 25:bool:const false
  looping thru 0 args of 26:bool:const true
  looping thru 0 args of 27:bool:const true
  looping thru 0 args of 28:bool:const true
  looping thru 0 args of 29:bool:const true
  looping thru 0 args of 30:bool:const true
  looping thru 0 args of 31:bool:const false
assign 1 := 1
checking: 35:bool[]:read (%8)
  looping thru 1 args of 35:bool[]:read (%8)
  looping thru 1 args of 8:bool[]:decl xs = 7
  looping thru 7 args of 7:bool[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const true
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 3:bool:const true
  looping thru 0 args of 4:bool:const true
  looping thru 0 args of 5:bool:const true
  looping thru 0 args of 6:bool:const true
checking: 37:bool[]:call BoolList_Valid_2:play(%36)
  looping thru 1 args of 37:bool[]:call BoolList_Valid_2:play(%36)
  looping thru 1 args of 36:bool[]:read (%8)
  looping thru 1 args of 8:bool[]:decl xs = 7
  looping thru 7 args of 7:bool[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const true
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 3:bool:const true
  looping thru 0 args of 4:bool:const true
  looping thru 0 args of 5:bool:const true
  looping thru 0 args of 6:bool:const true
checking: 48:bool:eq (%39, %47)
  looping thru 2 args of 48:bool:eq (%39, %47)
  looping thru 1 args of 39:bool[]:read (%8)
  looping thru 1 args of 8:bool[]:decl xs = 7
  looping thru 7 args of 7:bool[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const true
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 3:bool:const true
  looping thru 0 args of 4:bool:const true
  looping thru 0 args of 5:bool:const true
  looping thru 0 args of 6:bool:const true
  looping thru 7 args of 47:bool[]:arrinit (%40, %41, %42, %43, %44, %45, %46)
  looping thru 0 args of 40:bool:const false
  looping thru 0 args of 41:bool:const false
  looping thru 0 args of 42:bool:const true
  looping thru 0 args of 43:bool:const true
  looping thru 0 args of 44:bool:const true
  looping thru 0 args of 45:bool:const false
  looping thru 0 args of 46:bool:const false
assign 1 := 1
checking: 50:bool[]:read (%8)
  looping thru 1 args of 50:bool[]:read (%8)
  looping thru 1 args of 8:bool[]:decl xs = 7
  looping thru 7 args of 7:bool[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const true
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 3:bool:const true
  looping thru 0 args of 4:bool:const true
  looping thru 0 args of 5:bool:const true
  looping thru 0 args of 6:bool:const true
checking: 52:bool[]:call BoolList_Valid_2:play(%51)
  looping thru 1 args of 52:bool[]:call BoolList_Valid_2:play(%51)
  looping thru 1 args of 51:bool[]:read (%8)
  looping thru 1 args of 8:bool[]:decl xs = 7
  looping thru 7 args of 7:bool[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const true
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 3:bool:const true
  looping thru 0 args of 4:bool:const true
  looping thru 0 args of 5:bool:const true
  looping thru 0 args of 6:bool:const true
checking: 63:bool:eq (%54, %62)
  looping thru 2 args of 63:bool:eq (%54, %62)
  looping thru 1 args of 54:bool[]:read (%8)
  looping thru 1 args of 8:bool[]:decl xs = 7
  looping thru 7 args of 7:bool[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const true
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 3:bool:const true
  looping thru 0 args of 4:bool:const true
  looping thru 0 args of 5:bool:const true
  looping thru 0 args of 6:bool:const true
  looping thru 7 args of 62:bool[]:arrinit (%55, %56, %57, %58, %59, %60, %61)
  looping thru 0 args of 55:bool:const false
  looping thru 0 args of 56:bool:const false
  looping thru 0 args of 57:bool:const false
  looping thru 0 args of 58:bool:const true
  looping thru 0 args of 59:bool:const false
  looping thru 0 args of 60:bool:const false
  looping thru 0 args of 61:bool:const false
assign 1 := 1
checking: 65:bool[]:read (%8)
  looping thru 1 args of 65:bool[]:read (%8)
  looping thru 1 args of 8:bool[]:decl xs = 7
  looping thru 7 args of 7:bool[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const true
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 3:bool:const true
  looping thru 0 args of 4:bool:const true
  looping thru 0 args of 5:bool:const true
  looping thru 0 args of 6:bool:const true
checking: 67:bool[]:call BoolList_Valid_2:play(%66)
  looping thru 1 args of 67:bool[]:call BoolList_Valid_2:play(%66)
  looping thru 1 args of 66:bool[]:read (%8)
  looping thru 1 args of 8:bool[]:decl xs = 7
  looping thru 7 args of 7:bool[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const true
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 3:bool:const true
  looping thru 0 args of 4:bool:const true
  looping thru 0 args of 5:bool:const true
  looping thru 0 args of 6:bool:const true
checking: 78:bool:eq (%69, %77)
  looping thru 2 args of 78:bool:eq (%69, %77)
  looping thru 1 args of 69:bool[]:read (%8)
  looping thru 1 args of 8:bool[]:decl xs = 7
  looping thru 7 args of 7:bool[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const true
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 3:bool:const true
  looping thru 0 args of 4:bool:const true
  looping thru 0 args of 5:bool:const true
  looping thru 0 args of 6:bool:const true
  looping thru 7 args of 77:bool[]:arrinit (%70, %71, %72, %73, %74, %75, %76)
  looping thru 0 args of 70:bool:const false
  looping thru 0 args of 71:bool:const false
  looping thru 0 args of 72:bool:const false
  looping thru 0 args of 73:bool:const false
  looping thru 0 args of 74:bool:const false
  looping thru 0 args of 75:bool:const false
  looping thru 0 args of 76:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== BoolList_Valid_3.whiley =====
checking: 48:bool:lt (%46, %47)
  looping thru 2 args of 48:bool:lt (%46, %47)
  looping thru 1 args of 46:int:read (%20)
  looping thru 1 args of 20:int:decl i = 19
  looping thru 0 args of 19:int:const 0
  looping thru 0 args of 47:int:const 3
checking: 72:bool:lt (%70, %71)
  looping thru 2 args of 72:bool:lt (%70, %71)
  looping thru 1 args of 70:int:read (%50)
  looping thru 1 args of 50:int:decl j = 49
  looping thru 0 args of 49:int:const 0
  looping thru 0 args of 71:int:const 3
checking: 82:bool:arridx (%80, %81)
conjecture: 0 <= toInt(j) && toInt(j) < arraylen(toArray(board)[toInt(i)])
  looping thru 2 args of 82:bool:arridx (%80, %81)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(board)
  looping thru 2 args of 80:bool[]:arridx (%78, %79)
  looping thru 1 args of 78:BoolList_Valid_3:Board:read (%0)
  looping thru 0 args of 0:BoolList_Valid_3:Board:decl board
  looping thru 1 args of 79:int:read (%20)
  looping thru 1 args of 20:int:decl i = 19
  looping thru 0 args of 19:int:const 0
  looping thru 1 args of 81:int:read (%50)
  looping thru 1 args of 50:int:decl j = 49
  looping thru 0 args of 49:int:const 0
checking: 83:int:read (%77)
  looping thru 1 args of 83:int:read (%77)
  looping thru 1 args of 77:int:decl c = 76
  looping thru 3 args of 76:int:call BoolList_Valid_3:countLiving(%73, %74, %75)
  looping thru 1 args of 73:BoolList_Valid_3:Board:read (%0)
  looping thru 0 args of 0:BoolList_Valid_3:Board:decl board
  looping thru 1 args of 74:int:read (%20)
  looping thru 1 args of 20:int:decl i = 19
  looping thru 0 args of 19:int:const 0
  looping thru 1 args of 75:int:read (%50)
  looping thru 1 args of 50:int:decl j = 49
  looping thru 0 args of 49:int:const 0
wyboogie.NotImplementedYet: switch in 93::switch
	at wyboogie.Wyil2Boogie.writeSwitch(Wyil2Boogie.java:915)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:652)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeIf(Wyil2Boogie.java:827)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:626)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeWhile(Wyil2Boogie.java:881)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:641)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeWhile(Wyil2Boogie.java:881)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:641)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== BoolRecord_Valid_1.whiley =====
checking: 8:bool:eq (%4, %7)
  looping thru 2 args of 8:bool:eq (%4, %7)
  looping thru 1 args of 4:{int code,bool flag}:read (%3)
  looping thru 1 args of 3:{int code,bool flag}:decl x = 2
  looping thru 2 args of 2:{int code,bool flag}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:bool:const true
  looping thru 2 args of 7:{int code,bool flag}:recinit (%5, %6)
  looping thru 0 args of 5:int:const 0
  looping thru 0 args of 6:bool:const true
assign 1 := 1
checking: 11:bool:recfield %10 flag
  looping thru 1 args of 11:bool:recfield %10 flag
  looping thru 1 args of 10:{int code,bool flag}:read (%3)
  looping thru 1 args of 3:{int code,bool flag}:decl x = 2
  looping thru 2 args of 2:{int code,bool flag}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:bool:const true
checking: 12:bool:const false
  looping thru 0 args of 12:bool:const false
checking: 18:bool:eq (%14, %17)
  looping thru 2 args of 18:bool:eq (%14, %17)
  looping thru 1 args of 14:{int code,bool flag}:read (%3)
  looping thru 1 args of 3:{int code,bool flag}:decl x = 2
  looping thru 2 args of 2:{int code,bool flag}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:bool:const true
  looping thru 2 args of 17:{int code,bool flag}:recinit (%15, %16)
  looping thru 0 args of 15:int:const 0
  looping thru 0 args of 16:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== BoolRecord_Valid_2.whiley =====
checking: 5:bool:recfield %4 flag
  looping thru 1 args of 5:bool:recfield %4 flag
  looping thru 1 args of 4:{int code,bool flag}:read (%3)
  looping thru 1 args of 3:{int code,bool flag}:decl x = 2
  looping thru 2 args of 2:{int code,bool flag}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:bool:const true
checking: 6:bool:const true
  looping thru 0 args of 6:bool:const true
checking: 9:bool:const false
  looping thru 0 args of 9:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== BoolRequires_Valid_1.whiley =====
checking: 10:bool[]:read (%0)
  looping thru 1 args of 10:bool[]:read (%0)
  looping thru 0 args of 0:bool[]:decl x
checking: 5:bool:eq (%2, %4)
  looping thru 2 args of 5:bool:eq (%2, %4)
  looping thru 1 args of 2:bool[]:call BoolRequires_Valid_1:f(%1)
  looping thru 1 args of 1:bool[]:arrinit (%0)
  looping thru 0 args of 0:bool:const true
  looping thru 1 args of 4:bool[]:arrinit (%3)
  looping thru 0 args of 3:bool:const true
checking: 14:bool:eq (%10, %13)
  looping thru 2 args of 14:bool:eq (%10, %13)
  looping thru 1 args of 10:bool[]:call BoolRequires_Valid_1:f(%9)
  looping thru 2 args of 9:bool[]:arrinit (%7, %8)
  looping thru 0 args of 7:bool:const true
  looping thru 0 args of 8:bool:const false
  looping thru 2 args of 13:bool[]:arrinit (%11, %12)
  looping thru 0 args of 11:bool:const true
  looping thru 0 args of 12:bool:const false
checking: 25:bool:eq (%20, %24)
  looping thru 2 args of 25:bool:eq (%20, %24)
  looping thru 1 args of 20:bool[]:call BoolRequires_Valid_1:f(%19)
  looping thru 3 args of 19:bool[]:arrinit (%16, %17, %18)
  looping thru 0 args of 16:bool:const true
  looping thru 0 args of 17:bool:const false
  looping thru 0 args of 18:bool:const true
  looping thru 3 args of 24:bool[]:arrinit (%21, %22, %23)
  looping thru 0 args of 21:bool:const true
  looping thru 0 args of 22:bool:const false
  looping thru 0 args of 23:bool:const true
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== BoolReturn_Valid_1.whiley =====
checking: 1:bool:const false
  looping thru 0 args of 1:bool:const false
checking: 1:bool:not (%0)
  looping thru 1 args of 1:bool:not (%0)
  looping thru 0 args of 0:bool:call BoolReturn_Valid_1:pred()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Byte_Valid_1.whiley =====
MUTATED INPUT b : byte
checking: 17:bool:land (%11, %16)
  looping thru 2 args of 11:bool:lt (%9, %10)
  looping thru 1 args of 9:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
  looping thru 0 args of 10:int:const 8
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 2 args of 14:byte:band (%12, %13)
  looping thru 1 args of 12:byte:read (%0)
  looping thru 0 args of 0:byte:decl b
  looping thru 1 args of 13:byte:read (%5)
  looping thru 1 args of 5:byte:decl mask = 4
  looping thru 0 args of 4:byte:const 00000001b
  looping thru 1 args of 15:byte:read (%5)
  looping thru 1 args of 5:byte:decl mask = 4
  looping thru 0 args of 4:byte:const 00000001b
wyboogie.NotImplementedYet: bitwise operators not supported yet: band (%12, %13) in 14:byte:band (%12, %13)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1029)
	at wyboogie.Wyil2Boogie.writeEquality(Wyil2Boogie.java:1237)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1032)
	at wyboogie.Wyil2Boogie.infixOp(Wyil2Boogie.java:1079)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1053)
	at wyboogie.Wyil2Boogie.boolExpr(Wyil2Boogie.java:934)
	at wyboogie.Wyil2Boogie.writeWhile(Wyil2Boogie.java:874)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:641)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Byte_Valid_2.whiley =====
wyboogie.NotImplementedYet: bitwise operators not supported yet: bshl (%3, %4) in 5:byte:bshl (%3, %4)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1029)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Byte_Valid_3.whiley =====
wyboogie.NotImplementedYet: bitwise operators not supported yet: bshl (%3, %4) in 5:byte:bshl (%3, %4)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1029)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Byte_Valid_4.whiley =====
wyboogie.NotImplementedYet: bitwise operators not supported yet: bshl (%3, %4) in 5:byte:bshl (%3, %4)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1029)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Byte_Valid_5.whiley =====
MUTATED INPUT b : byte
MUTATED INPUT i : int
checking: 7:bool:gt (%5, %6)
  looping thru 2 args of 7:bool:gt (%5, %6)
  looping thru 1 args of 5:int:read (%1)
  looping thru 0 args of 1:int:decl i
  looping thru 0 args of 6:int:const 0
assign 1 := 1
checking: 8:byte:read (%0)
  looping thru 1 args of 8:byte:read (%0)
  looping thru 0 args of 0:byte:decl b
checking: 11:byte:bshl (%9, %10)
  looping thru 2 args of 11:byte:bshl (%9, %10)
  looping thru 1 args of 9:byte:read (%0)
  looping thru 0 args of 0:byte:decl b
  looping thru 0 args of 10:int:const 1
wyboogie.NotImplementedYet: bitwise operators not supported yet: bshl (%9, %10) in 11:byte:bshl (%9, %10)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1029)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:758)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeWhile(Wyil2Boogie.java:881)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:641)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Byte_Valid_6.whiley =====
MUTATED INPUT b : byte
MUTATED INPUT i : int
checking: 7:bool:gt (%5, %6)
  looping thru 2 args of 7:bool:gt (%5, %6)
  looping thru 1 args of 5:int:read (%1)
  looping thru 0 args of 1:int:decl i
  looping thru 0 args of 6:int:const 0
assign 1 := 1
checking: 8:byte:read (%0)
  looping thru 1 args of 8:byte:read (%0)
  looping thru 0 args of 0:byte:decl b
checking: 11:byte:bshr (%9, %10)
  looping thru 2 args of 11:byte:bshr (%9, %10)
  looping thru 1 args of 9:byte:read (%0)
  looping thru 0 args of 0:byte:decl b
  looping thru 0 args of 10:int:const 1
wyboogie.NotImplementedYet: bitwise operators not supported yet: bshr (%9, %10) in 11:byte:bshr (%9, %10)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1029)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:758)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeWhile(Wyil2Boogie.java:881)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:641)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Byte_Valid_7.whiley =====
wyboogie.NotImplementedYet: bitwise operators not supported yet: bshl (%3, %4) in 5:byte:bshl (%3, %4)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1029)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Byte_Valid_8.whiley =====
MUTATED INPUT b : byte
MUTATED INPUT i : int
checking: 7:bool:gt (%5, %6)
  looping thru 2 args of 7:bool:gt (%5, %6)
  looping thru 1 args of 5:int:read (%1)
  looping thru 0 args of 1:int:decl i
  looping thru 0 args of 6:int:const 0
assign 1 := 1
checking: 8:byte:read (%0)
  looping thru 1 args of 8:byte:read (%0)
  looping thru 0 args of 0:byte:decl b
checking: 11:byte:bshl (%9, %10)
  looping thru 2 args of 11:byte:bshl (%9, %10)
  looping thru 1 args of 9:byte:read (%0)
  looping thru 0 args of 0:byte:decl b
  looping thru 0 args of 10:int:const 1
wyboogie.NotImplementedYet: bitwise operators not supported yet: bshl (%9, %10) in 11:byte:bshl (%9, %10)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1029)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:758)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeWhile(Wyil2Boogie.java:881)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:641)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Byte_Valid_9.whiley =====
wyboogie.NotImplementedYet: bitwise operators not supported yet: bshl (%3, %4) in 5:byte:bshl (%3, %4)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1029)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Cast_Valid_5.whiley =====
checking: 34:int[]:const [1,2,4,8,16,32,64,128]
  looping thru 0 args of 34:int[]:const [1,2,4,8,16,32,64,128]
MUTATED INPUT b : byte
checking: 36:bool:lteq (%34, %35)
  looping thru 2 args of 36:bool:lteq (%34, %35)
  looping thru 1 args of 34:int:read (%14)
  looping thru 1 args of 14:int:decl i = 13
  looping thru 0 args of 13:int:const 0
  looping thru 0 args of 35:int:const 7
checking: 41:bool:eq (%39, %40)
  looping thru 2 args of 41:bool:eq (%39, %40)
  looping thru 2 args of 39:byte:band (%37, %38)
  looping thru 1 args of 37:byte:read (%0)
  looping thru 0 args of 0:byte:decl b
  looping thru 0 args of 38:byte:const 00000001b
  looping thru 0 args of 40:byte:const 00000001b
wyboogie.NotImplementedYet: bitwise operators not supported yet: band (%37, %38) in 39:byte:band (%37, %38)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1029)
	at wyboogie.Wyil2Boogie.writeEquality(Wyil2Boogie.java:1237)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1032)
	at wyboogie.Wyil2Boogie.boolExpr(Wyil2Boogie.java:934)
	at wyboogie.Wyil2Boogie.writeIf(Wyil2Boogie.java:826)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:626)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeWhile(Wyil2Boogie.java:881)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:641)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Coercion_Valid_2.whiley =====
checking: 2:int[]:read (%0)
  looping thru 1 args of 2:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl x
checking: 14:bool:eq (%1, %13)
  looping thru 2 args of 14:bool:eq (%1, %13)
  looping thru 1 args of 1:int[]:call Coercion_Valid_2:f(%0)
  looping thru 0 args of 0:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 11 args of 13:int[]:arrinit (%2, %3, %4, %5, %6, %7, %8, %9, %10, %11, %12)
  looping thru 0 args of 2:int:const 72
  looping thru 0 args of 3:int:const 101
  looping thru 0 args of 4:int:const 108
  looping thru 0 args of 5:int:const 108
  looping thru 0 args of 6:int:const 111
  looping thru 0 args of 7:int:const 32
  looping thru 0 args of 8:int:const 87
  looping thru 0 args of 9:int:const 111
  looping thru 0 args of 10:int:const 114
  looping thru 0 args of 11:int:const 108
  looping thru 0 args of 12:int:const 100
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Coercion_Valid_3.whiley =====
checking: 3:int:castt (%2)
  looping thru 1 args of 3:int:castt (%2)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call Coercion_Valid_3:f(%0)
  looping thru 0 args of 0:int:const 72
  looping thru 0 args of 2:int:const 72
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Coercion_Valid_7.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:bool|int:read (%0)
  looping thru 0 args of 0:bool|int:decl x
  looping thru 0 args of 3:type:const int
checking: 7:int:read (%4)
  looping thru 1 args of 7:int:read (%4)
  looping thru 1 args of 4:int:alias (%0)
  looping thru 0 args of 0:bool|int:decl x
checking: 10:int:const 1
  looping thru 0 args of 10:int:const 1
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call Coercion_Valid_7:f(%0)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 2:int:const 1
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:call Coercion_Valid_7:f(%5)
  looping thru 0 args of 5:int:const 123
  looping thru 0 args of 7:int:const 123
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Coercion_Valid_8.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:Coercion_Valid_8:Expr:read (%0)
  looping thru 0 args of 0:Coercion_Valid_8:Expr:decl x
  looping thru 0 args of 3:type:const Coercion_Valid_8:Expr[]
checking: 8:int:arrlen (%7)
  looping thru 1 args of 8:int:arrlen (%7)
  looping thru 1 args of 7:X<X|int[]>:read (%4)
  looping thru 1 args of 4:X<X|int[]>:alias (%0)
  looping thru 0 args of 0:Coercion_Valid_8:Expr:decl x
checking: 11:Coercion_Valid_8:Expr:read (%5)
  looping thru 1 args of 11:Coercion_Valid_8:Expr:read (%5)
  looping thru 1 args of 5:Coercion_Valid_8:Expr:alias (%0)
  looping thru 0 args of 0:Coercion_Valid_8:Expr:decl x
checking: 6:bool:eq (%4, %5)
  looping thru 2 args of 6:bool:eq (%4, %5)
  looping thru 1 args of 4:int:call Coercion_Valid_8:f(%3)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 5:int:const 3
checking: 11:bool:eq (%9, %10)
  looping thru 2 args of 11:bool:eq (%9, %10)
  looping thru 1 args of 9:int:call Coercion_Valid_8:f(%8)
  looping thru 0 args of 8:int:const 1
  looping thru 0 args of 10:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Coercion_Valid_9.whiley =====
checking: 3:int:recfield %2 data
  looping thru 1 args of 3:int:recfield %2 data
  looping thru 1 args of 2:Coercion_Valid_9:Link:read (%0)
  looping thru 0 args of 0:Coercion_Valid_9:Link:decl l
checking: 4:int:call Coercion_Valid_9:sum(%3)
  looping thru 1 args of 4:int:call Coercion_Valid_9:sum(%3)
  looping thru 1 args of 3:Coercion_Valid_9:Link:castt (%2)
  looping thru 1 args of 2:Coercion_Valid_9:BigLink:read (%0)
  looping thru 0 args of 0:Coercion_Valid_9:BigLink:decl l
checking: 7:bool:eq (%5, %6)
  looping thru 2 args of 7:bool:eq (%5, %6)
  looping thru 1 args of 5:int:call Coercion_Valid_9:sum2(%4)
  looping thru 1 args of 4:{int code,int data}:read (%3)
  looping thru 1 args of 3:Coercion_Valid_9:BigLink:decl l = 2
  looping thru 2 args of 2:{int code,int data}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 99
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 6:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Complex_Valid_1.whiley =====
checking: 22:bool:lt (%20, %21)
  looping thru 2 args of 22:bool:lt (%20, %21)
  looping thru 1 args of 20:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 21:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 23:int:const 1
  looping thru 0 args of 23:int:const 1
checking: 27:int:neg (%26)
  looping thru 1 args of 27:int:neg (%26)
  looping thru 0 args of 26:int:const 1
checking: 14:bool:lor (%8, %13)
  looping thru 2 args of 8:bool:neq (%5, %7)
  looping thru 1 args of 5:Complex_Valid_1:RowCol:recfield %4 row
  looping thru 1 args of 4:Complex_Valid_1:Pos:read (%0)
  looping thru 0 args of 0:Complex_Valid_1:Pos:decl from
  looping thru 1 args of 7:Complex_Valid_1:RowCol:recfield %6 row
  looping thru 1 args of 6:Complex_Valid_1:Pos:read (%1)
  looping thru 0 args of 1:Complex_Valid_1:Pos:decl to
wyboogie.NotImplementedYet: comparison of void intersection type: Complex_Valid_1:RowCol and Complex_Valid_1:RowCol in 8:bool:neq (%5, %7)
	at wyboogie.Wyil2Boogie.writeEquality(Wyil2Boogie.java:1234)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1035)
	at wyboogie.AssertionGenerator.expr(AssertionGenerator.java:37)
	at wyboogie.AssertionGenerator.check(AssertionGenerator.java:159)
	at wyboogie.AssertionGenerator.checkPredicate(AssertionGenerator.java:60)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:625)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Complex_Valid_2.whiley =====
checking: 41:bool:lt (%38, %40)
  looping thru 2 args of 41:bool:lt (%38, %40)
  looping thru 1 args of 38:int:read (%22)
  looping thru 1 args of 22:int:decl i = 21
  looping thru 0 args of 21:int:const 0
  looping thru 1 args of 40:int:arrlen (%39)
  looping thru 1 args of 39:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
assign 1 := 1
checking: 44:int:arridx (%42, %43)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(rs)
  looping thru 2 args of 44:int:arridx (%42, %43)
  looping thru 1 args of 42:int[]:read (%20)
  looping thru 1 args of 20:int[]:decl rs = 19
  looping thru 2 args of 19:int[]:arrgen (%17, %18)
  looping thru 0 args of 17:int:const 0
  looping thru 1 args of 18:int:read (%16)
  looping thru 1 args of 16:int:decl count = 15
  looping thru 2 args of 15:int:add (%12, %14)
  looping thru 1 args of 12:int:arrlen (%11)
  looping thru 1 args of 11:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 14:int:arrlen (%13)
  looping thru 1 args of 13:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl ys
  looping thru 1 args of 43:int:read (%22)
  looping thru 1 args of 22:int:decl i = 21
  looping thru 0 args of 21:int:const 0
checking: 47:int:arridx (%45, %46)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 47:int:arridx (%45, %46)
  looping thru 1 args of 45:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 46:int:read (%22)
  looping thru 1 args of 22:int:decl i = 21
  looping thru 0 args of 21:int:const 0
assign 1 := 1
checking: 49:int:read (%22)
  looping thru 1 args of 49:int:read (%22)
  looping thru 1 args of 22:int:decl i = 21
  looping thru 0 args of 21:int:const 0
checking: 52:int:add (%50, %51)
  looping thru 2 args of 52:int:add (%50, %51)
  looping thru 1 args of 50:int:read (%22)
  looping thru 1 args of 22:int:decl i = 21
  looping thru 0 args of 21:int:const 0
  looping thru 0 args of 51:int:const 1
checking: 71:bool:lt (%68, %70)
  looping thru 2 args of 71:bool:lt (%68, %70)
  looping thru 1 args of 68:int:read (%57)
  looping thru 1 args of 57:int:decl j = 56
  looping thru 0 args of 56:int:const 0
  looping thru 1 args of 70:int:arrlen (%69)
  looping thru 1 args of 69:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl ys
assign 1 := 1
checking: 76:int:arridx (%72, %75)
conjecture: 0 <= toInt(j) + toInt(i) && toInt(j) + toInt(i) < arraylen(rs)
  looping thru 2 args of 76:int:arridx (%72, %75)
  looping thru 1 args of 72:int[]:read (%20)
  looping thru 1 args of 20:int[]:decl rs = 19
  looping thru 2 args of 19:int[]:arrgen (%17, %18)
  looping thru 0 args of 17:int:const 0
  looping thru 1 args of 18:int:read (%16)
  looping thru 1 args of 16:int:decl count = 15
  looping thru 2 args of 15:int:add (%12, %14)
  looping thru 1 args of 12:int:arrlen (%11)
  looping thru 1 args of 11:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 14:int:arrlen (%13)
  looping thru 1 args of 13:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl ys
  looping thru 2 args of 75:int:add (%73, %74)
  looping thru 1 args of 73:int:read (%57)
  looping thru 1 args of 57:int:decl j = 56
  looping thru 0 args of 56:int:const 0
  looping thru 1 args of 74:int:read (%22)
  looping thru 1 args of 22:int:decl i = 21
  looping thru 0 args of 21:int:const 0
checking: 79:int:arridx (%77, %78)
conjecture: 0 <= toInt(j) && toInt(j) < arraylen(ys)
  looping thru 2 args of 79:int:arridx (%77, %78)
  looping thru 1 args of 77:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl ys
  looping thru 1 args of 78:int:read (%57)
  looping thru 1 args of 57:int:decl j = 56
  looping thru 0 args of 56:int:const 0
assign 1 := 1
checking: 81:int:read (%57)
  looping thru 1 args of 81:int:read (%57)
  looping thru 1 args of 57:int:decl j = 56
  looping thru 0 args of 56:int:const 0
checking: 84:int:add (%82, %83)
  looping thru 2 args of 84:int:add (%82, %83)
  looping thru 1 args of 82:int:read (%57)
  looping thru 1 args of 57:int:decl j = 56
  looping thru 0 args of 56:int:const 0
  looping thru 0 args of 83:int:const 1
checking: 88:int[]:read (%20)
  looping thru 1 args of 88:int[]:read (%20)
  looping thru 1 args of 20:int[]:decl rs = 19
  looping thru 2 args of 19:int[]:arrgen (%17, %18)
  looping thru 0 args of 17:int:const 0
  looping thru 1 args of 18:int:read (%16)
  looping thru 1 args of 16:int:decl count = 15
  looping thru 2 args of 15:int:add (%12, %14)
  looping thru 1 args of 12:int:arrlen (%11)
  looping thru 1 args of 11:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 14:int:arrlen (%13)
  looping thru 1 args of 13:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl ys
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:Complex_Valid_2:Move:read (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
  looping thru 0 args of 3:type:const Complex_Valid_2:SingleTake
assign 1 := 1
checking: 15:int[]:read (%14)
  looping thru 1 args of 15:int[]:read (%14)
  looping thru 1 args of 14:Complex_Valid_2:string:decl tmp = 13
  looping thru 2 args of 13:int[]:call Complex_Valid_2:append(%9, %12)
  looping thru 1 args of 9:Complex_Valid_2:string:call Complex_Valid_2:piece2str(%8)
  looping thru 1 args of 8:{bool colour,int kind}:recfield %7 piece
  looping thru 1 args of 7:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:read (%4)
  looping thru 1 args of 4:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
  looping thru 1 args of 12:Complex_Valid_2:string:call Complex_Valid_2:pos2str(%11)
  looping thru 1 args of 11:{int col,int row}:recfield %10 from
  looping thru 1 args of 10:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:read (%4)
  looping thru 1 args of 4:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
checking: 18:int[]:call Complex_Valid_2:append(%16, %17)
  looping thru 2 args of 18:int[]:call Complex_Valid_2:append(%16, %17)
  looping thru 1 args of 16:int[]:read (%14)
  looping thru 1 args of 14:Complex_Valid_2:string:decl tmp = 13
  looping thru 2 args of 13:int[]:call Complex_Valid_2:append(%9, %12)
  looping thru 1 args of 9:Complex_Valid_2:string:call Complex_Valid_2:piece2str(%8)
  looping thru 1 args of 8:{bool colour,int kind}:recfield %7 piece
  looping thru 1 args of 7:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:read (%4)
  looping thru 1 args of 4:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
  looping thru 1 args of 12:Complex_Valid_2:string:call Complex_Valid_2:pos2str(%11)
  looping thru 1 args of 11:{int col,int row}:recfield %10 from
  looping thru 1 args of 10:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:read (%4)
  looping thru 1 args of 4:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
  looping thru 0 args of 17:int[]:const [120]
assign 1 := 1
checking: 20:int[]:read (%14)
  looping thru 1 args of 20:int[]:read (%14)
  looping thru 1 args of 14:Complex_Valid_2:string:decl tmp = 13
  looping thru 2 args of 13:int[]:call Complex_Valid_2:append(%9, %12)
  looping thru 1 args of 9:Complex_Valid_2:string:call Complex_Valid_2:piece2str(%8)
  looping thru 1 args of 8:{bool colour,int kind}:recfield %7 piece
  looping thru 1 args of 7:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:read (%4)
  looping thru 1 args of 4:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
  looping thru 1 args of 12:Complex_Valid_2:string:call Complex_Valid_2:pos2str(%11)
  looping thru 1 args of 11:{int col,int row}:recfield %10 from
  looping thru 1 args of 10:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:read (%4)
  looping thru 1 args of 4:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
checking: 25:int[]:call Complex_Valid_2:append(%21, %24)
  looping thru 2 args of 25:int[]:call Complex_Valid_2:append(%21, %24)
  looping thru 1 args of 21:int[]:read (%14)
  looping thru 1 args of 14:Complex_Valid_2:string:decl tmp = 13
  looping thru 2 args of 13:int[]:call Complex_Valid_2:append(%9, %12)
  looping thru 1 args of 9:Complex_Valid_2:string:call Complex_Valid_2:piece2str(%8)
  looping thru 1 args of 8:{bool colour,int kind}:recfield %7 piece
  looping thru 1 args of 7:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:read (%4)
  looping thru 1 args of 4:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
  looping thru 1 args of 12:Complex_Valid_2:string:call Complex_Valid_2:pos2str(%11)
  looping thru 1 args of 11:{int col,int row}:recfield %10 from
  looping thru 1 args of 10:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:read (%4)
  looping thru 1 args of 4:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
  looping thru 1 args of 24:Complex_Valid_2:string:call Complex_Valid_2:piece2str(%23)
  looping thru 1 args of 23:{bool colour,int kind}:recfield %22 taken
  looping thru 1 args of 22:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:read (%4)
  looping thru 1 args of 4:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
checking: 31:int[]:call Complex_Valid_2:append(%27, %30)
  looping thru 2 args of 31:int[]:call Complex_Valid_2:append(%27, %30)
  looping thru 1 args of 27:int[]:read (%14)
  looping thru 1 args of 14:Complex_Valid_2:string:decl tmp = 13
  looping thru 2 args of 13:int[]:call Complex_Valid_2:append(%9, %12)
  looping thru 1 args of 9:Complex_Valid_2:string:call Complex_Valid_2:piece2str(%8)
  looping thru 1 args of 8:{bool colour,int kind}:recfield %7 piece
  looping thru 1 args of 7:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:read (%4)
  looping thru 1 args of 4:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
  looping thru 1 args of 12:Complex_Valid_2:string:call Complex_Valid_2:pos2str(%11)
  looping thru 1 args of 11:{int col,int row}:recfield %10 from
  looping thru 1 args of 10:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:read (%4)
  looping thru 1 args of 4:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
  looping thru 1 args of 30:Complex_Valid_2:string:call Complex_Valid_2:pos2str(%29)
  looping thru 1 args of 29:{int col,int row}:recfield %28 to
  looping thru 1 args of 28:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:read (%4)
  looping thru 1 args of 4:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
checking: 38:bool:istype (%34, %35)
  looping thru 2 args of 38:bool:istype (%34, %35)
  looping thru 1 args of 34:Complex_Valid_2:Move:read (%5)
  looping thru 1 args of 5:Complex_Valid_2:Move:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
  looping thru 0 args of 35:type:const Complex_Valid_2:SingleMove
assign 1 := 1
checking: 47:int[]:read (%46)
  looping thru 1 args of 47:int[]:read (%46)
  looping thru 1 args of 46:Complex_Valid_2:string:decl tmp = 45
  looping thru 2 args of 45:int[]:call Complex_Valid_2:append(%41, %44)
  looping thru 1 args of 41:Complex_Valid_2:string:call Complex_Valid_2:piece2str(%40)
  looping thru 1 args of 40:{bool colour,int kind}:recfield %39 piece
  looping thru 1 args of 39:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:read (%36)
  looping thru 1 args of 36:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:alias (%5)
  looping thru 1 args of 5:Complex_Valid_2:Move:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
  looping thru 1 args of 44:Complex_Valid_2:string:call Complex_Valid_2:pos2str(%43)
  looping thru 1 args of 43:{int col,int row}:recfield %42 from
  looping thru 1 args of 42:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:read (%36)
  looping thru 1 args of 36:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:alias (%5)
  looping thru 1 args of 5:Complex_Valid_2:Move:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
checking: 50:int[]:call Complex_Valid_2:append(%48, %49)
  looping thru 2 args of 50:int[]:call Complex_Valid_2:append(%48, %49)
  looping thru 1 args of 48:int[]:read (%46)
  looping thru 1 args of 46:Complex_Valid_2:string:decl tmp = 45
  looping thru 2 args of 45:int[]:call Complex_Valid_2:append(%41, %44)
  looping thru 1 args of 41:Complex_Valid_2:string:call Complex_Valid_2:piece2str(%40)
  looping thru 1 args of 40:{bool colour,int kind}:recfield %39 piece
  looping thru 1 args of 39:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:read (%36)
  looping thru 1 args of 36:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:alias (%5)
  looping thru 1 args of 5:Complex_Valid_2:Move:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
  looping thru 1 args of 44:Complex_Valid_2:string:call Complex_Valid_2:pos2str(%43)
  looping thru 1 args of 43:{int col,int row}:recfield %42 from
  looping thru 1 args of 42:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:read (%36)
  looping thru 1 args of 36:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:alias (%5)
  looping thru 1 args of 5:Complex_Valid_2:Move:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
  looping thru 0 args of 49:int[]:const [45]
checking: 56:int[]:call Complex_Valid_2:append(%52, %55)
  looping thru 2 args of 56:int[]:call Complex_Valid_2:append(%52, %55)
  looping thru 1 args of 52:int[]:read (%46)
  looping thru 1 args of 46:Complex_Valid_2:string:decl tmp = 45
  looping thru 2 args of 45:int[]:call Complex_Valid_2:append(%41, %44)
  looping thru 1 args of 41:Complex_Valid_2:string:call Complex_Valid_2:piece2str(%40)
  looping thru 1 args of 40:{bool colour,int kind}:recfield %39 piece
  looping thru 1 args of 39:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:read (%36)
  looping thru 1 args of 36:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:alias (%5)
  looping thru 1 args of 5:Complex_Valid_2:Move:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
  looping thru 1 args of 44:Complex_Valid_2:string:call Complex_Valid_2:pos2str(%43)
  looping thru 1 args of 43:{int col,int row}:recfield %42 from
  looping thru 1 args of 42:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:read (%36)
  looping thru 1 args of 36:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:alias (%5)
  looping thru 1 args of 5:Complex_Valid_2:Move:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
  looping thru 1 args of 55:Complex_Valid_2:string:call Complex_Valid_2:pos2str(%54)
  looping thru 1 args of 54:{int col,int row}:recfield %53 to
  looping thru 1 args of 53:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:read (%36)
  looping thru 1 args of 36:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:alias (%5)
  looping thru 1 args of 5:Complex_Valid_2:Move:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
checking: 63:bool:istype (%59, %60)
  looping thru 2 args of 63:bool:istype (%59, %60)
  looping thru 1 args of 59:Complex_Valid_2:Move:read (%37)
  looping thru 1 args of 37:Complex_Valid_2:Move:alias (%5)
  looping thru 1 args of 5:Complex_Valid_2:Move:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
  looping thru 0 args of 60:type:const Complex_Valid_2:CastleMove
checking: 65:bool:recfield %64 kingSide
  looping thru 1 args of 65:bool:recfield %64 kingSide
  looping thru 1 args of 64:{bool isWhite,bool kingSide}:read (%61)
  looping thru 1 args of 61:{bool isWhite,bool kingSide}:alias (%37)
  looping thru 1 args of 37:Complex_Valid_2:Move:alias (%5)
  looping thru 1 args of 5:Complex_Valid_2:Move:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
checking: 66:int[]:const [79,45,79]
  looping thru 0 args of 66:int[]:const [79,45,79]
checking: 69:int[]:const [79,45,79,45,79]
  looping thru 0 args of 69:int[]:const [79,45,79,45,79]
checking: 78:bool:istype (%74, %75)
  looping thru 2 args of 78:bool:istype (%74, %75)
  looping thru 1 args of 74:Complex_Valid_2:Move:read (%62)
  looping thru 1 args of 62:Complex_Valid_2:Move:alias (%37)
  looping thru 1 args of 37:Complex_Valid_2:Move:alias (%5)
  looping thru 1 args of 5:Complex_Valid_2:Move:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
  looping thru 0 args of 75:type:const Complex_Valid_2:CheckMove
checking: 83:int[]:call Complex_Valid_2:append(%81, %82)
  looping thru 2 args of 83:int[]:call Complex_Valid_2:append(%81, %82)
  looping thru 1 args of 81:Complex_Valid_2:string:call Complex_Valid_2:move2str(%80)
  looping thru 1 args of 80:X<{X check}|{bool isWhite,bool kingSide}|{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}|{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}>:recfield %79 check
  looping thru 1 args of 79:X<{X|{bool isWhite,bool kingSide}|{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}|{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to} check}>:read (%76)
  looping thru 1 args of 76:X<{X|{bool isWhite,bool kingSide}|{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}|{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to} check}>:alias (%62)
  looping thru 1 args of 62:Complex_Valid_2:Move:alias (%37)
  looping thru 1 args of 37:Complex_Valid_2:Move:alias (%5)
  looping thru 1 args of 5:Complex_Valid_2:Move:alias (%0)
  looping thru 0 args of 0:Complex_Valid_2:Move:decl m
  looping thru 0 args of 82:int[]:const [43]
checking: 86:void[]:const []
  looping thru 0 args of 86:void[]:const []
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:Complex_Valid_2:PieceKind:recfield %2 kind
  looping thru 1 args of 2:Complex_Valid_2:Piece:read (%0)
  looping thru 0 args of 0:Complex_Valid_2:Piece:decl p
  looping thru 0 args of 4:int:const 0
checking: 6:void[]:const []
  looping thru 0 args of 6:void[]:const []
checking: 13:int[]:arrinit (%12)
  looping thru 1 args of 13:int[]:arrinit (%12)
conjecture: 0 <= toInt(toRecord(p)[$kind]) && toInt(toRecord(p)[$kind]) < arraylen(fromArray(arrayconst(fromInt(80))[1 := fromInt(78)][2 := fromInt(66)][3 := fromInt(82)][4 := fromInt(81)][5 := fromInt(75)], 6))
  looping thru 2 args of 12:int:arridx (%9, %11)
  looping thru 0 args of 9:int[]:const [80,78,66,82,81,75]
  looping thru 1 args of 11:Complex_Valid_2:PieceKind:recfield %10 kind
  looping thru 1 args of 10:Complex_Valid_2:Piece:read (%0)
  looping thru 0 args of 0:Complex_Valid_2:Piece:decl p
checking: 10:int[]:arrinit (%5, %9)
  looping thru 2 args of 10:int[]:arrinit (%5, %9)
  looping thru 2 args of 5:int:add (%2, %4)
  looping thru 0 args of 2:int:const 97
  looping thru 1 args of 4:Complex_Valid_2:RowCol:recfield %3 col
  looping thru 1 args of 3:Complex_Valid_2:Pos:read (%0)
  looping thru 0 args of 0:Complex_Valid_2:Pos:decl p
  looping thru 2 args of 9:int:add (%6, %8)
  looping thru 0 args of 6:int:const 49
  looping thru 1 args of 8:Complex_Valid_2:RowCol:recfield %7 row
  looping thru 1 args of 7:Complex_Valid_2:Pos:read (%0)
  looping thru 0 args of 0:Complex_Valid_2:Pos:decl p
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:Complex_Valid_2:string:call Complex_Valid_2:move2str(%5)
  looping thru 1 args of 5:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:read (%4)
  looping thru 1 args of 4:Complex_Valid_2:Move:decl m = 3
  looping thru 3 args of 3:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:recinit (%0, %1, %2)
  looping thru 0 args of 0:{int col,int row}:const {col:=0,row:=1}
  looping thru 0 args of 1:{bool colour,int kind}:const {colour:=true,kind:=0}
  looping thru 0 args of 2:{int col,int row}:const {col:=0,row:=0}
  looping thru 0 args of 7:int[]:const [97,50,45,97,49]
assign 1 := 1
checking: 10:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:read (%4)
  looping thru 1 args of 10:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:read (%4)
  looping thru 1 args of 4:Complex_Valid_2:Move:decl m = 3
  looping thru 3 args of 3:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:recinit (%0, %1, %2)
  looping thru 0 args of 0:{int col,int row}:const {col:=0,row:=1}
  looping thru 0 args of 1:{bool colour,int kind}:const {colour:=true,kind:=0}
  looping thru 0 args of 2:{int col,int row}:const {col:=0,row:=0}
checking: 14:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:recinit (%11, %12, %13)
  looping thru 3 args of 14:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:recinit (%11, %12, %13)
  looping thru 0 args of 11:{int col,int row}:const {col:=0,row:=1}
  looping thru 0 args of 12:{bool colour,int kind}:const {colour:=true,kind:=1}
  looping thru 0 args of 13:{int col,int row}:const {col:=0,row:=0}
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:Complex_Valid_2:string:call Complex_Valid_2:move2str(%16)
  looping thru 1 args of 16:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:read (%4)
  looping thru 1 args of 4:Complex_Valid_2:Move:decl m = 3
  looping thru 3 args of 3:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:recinit (%0, %1, %2)
  looping thru 0 args of 0:{int col,int row}:const {col:=0,row:=1}
  looping thru 0 args of 1:{bool colour,int kind}:const {colour:=true,kind:=0}
  looping thru 0 args of 2:{int col,int row}:const {col:=0,row:=0}
  looping thru 0 args of 18:int[]:const [78,97,50,45,97,49]
assign 1 := 1
checking: 21:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:read (%4)
  looping thru 1 args of 21:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:read (%4)
  looping thru 1 args of 4:Complex_Valid_2:Move:decl m = 3
  looping thru 3 args of 3:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:recinit (%0, %1, %2)
  looping thru 0 args of 0:{int col,int row}:const {col:=0,row:=1}
  looping thru 0 args of 1:{bool colour,int kind}:const {colour:=true,kind:=0}
  looping thru 0 args of 2:{int col,int row}:const {col:=0,row:=0}
checking: 26:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:recinit (%22, %23, %24, %25)
  looping thru 4 args of 26:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:recinit (%22, %23, %24, %25)
  looping thru 0 args of 22:{int col,int row}:const {col:=0,row:=1}
  looping thru 0 args of 23:{bool colour,int kind}:const {colour:=true,kind:=4}
  looping thru 0 args of 24:{bool colour,int kind}:const {colour:=false,kind:=5}
  looping thru 0 args of 25:{int col,int row}:const {col:=0,row:=0}
checking: 31:bool:eq (%29, %30)
  looping thru 2 args of 31:bool:eq (%29, %30)
  looping thru 1 args of 29:Complex_Valid_2:string:call Complex_Valid_2:move2str(%28)
  looping thru 1 args of 28:{{int col,int row} from,{bool colour,int kind} piece,{bool colour,int kind} taken,{int col,int row} to}:read (%4)
  looping thru 1 args of 4:Complex_Valid_2:Move:decl m = 3
  looping thru 3 args of 3:{{int col,int row} from,{bool colour,int kind} piece,{int col,int row} to}:recinit (%0, %1, %2)
  looping thru 0 args of 0:{int col,int row}:const {col:=0,row:=1}
  looping thru 0 args of 1:{bool colour,int kind}:const {colour:=true,kind:=0}
  looping thru 0 args of 2:{int col,int row}:const {col:=0,row:=0}
  looping thru 0 args of 30:int[]:const [81,97,50,120,75,97,49]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Complex_Valid_2.bpl(189,9): Error BP5003: A postcondition might not hold on this return path.
Complex_Valid_2.bpl(180,5): Related location: This is the postcondition that might not hold.
Execution trace:
    Complex_Valid_2.bpl(184,5): anon0
    Complex_Valid_2.bpl(185,13): anon11_Then

Boogie program verifier finished with 4 verified, 1 error
===== Complex_Valid_3.whiley =====
Error compiling Complex_Valid_3.whiley
./Complex_Valid_3.whiley:9: record required, got: X<null|{int item,X left,X right}>
    (tree != null && tree.left != null ==> tree.left.item < tree.item) &&
                                           ^^^^^^^^^^^^^^

===== Complex_Valid_4.whiley =====
checking: 1:null:const null
  looping thru 0 args of 1:null:const null
MUTATED INPUT tree : Complex_Valid_4:BTree
MUTATED INPUT tree : Complex_Valid_4:BTree
MUTATED INPUT tree : Complex_Valid_4:BTree
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:Complex_Valid_4:BTree:read (%0)
  looping thru 0 args of 0:Complex_Valid_4:BTree:decl tree
  looping thru 0 args of 4:null:const null
assign 1 := 1
checking: 6:null:read (%0)
  looping thru 1 args of 6:null:read (%0)
  looping thru 0 args of 0:Complex_Valid_4:BTree:decl tree
checking: 10:{int item,null left,null right}:recinit (%7, %8, %9)
  looping thru 3 args of 10:{int item,null left,null right}:recinit (%7, %8, %9)
  looping thru 1 args of 7:int:read (%1)
  looping thru 0 args of 1:int:decl item
  looping thru 0 args of 8:null:const null
  looping thru 0 args of 9:null:const null
checking: 16:bool:lt (%13, %15)
  looping thru 2 args of 16:bool:lt (%13, %15)
  looping thru 1 args of 13:int:read (%1)
  looping thru 0 args of 1:int:decl item
  looping thru 1 args of 15:int:recfield %14 item
  looping thru 1 args of 14:Complex_Valid_4:BTree:read (%0)
  looping thru 0 args of 0:Complex_Valid_4:BTree:decl tree
assign 1 := 1
checking: 18:X<null|{int item,X left,X right}>:recfield %17 left
  looping thru 1 args of 18:X<null|{int item,X left,X right}>:recfield %17 left
  looping thru 1 args of 17:Complex_Valid_4:BTree:read (%0)
  looping thru 0 args of 0:Complex_Valid_4:BTree:decl tree
checking: 22:Complex_Valid_4:BTree:call Complex_Valid_4:add(%20, %21)
  looping thru 2 args of 22:Complex_Valid_4:BTree:call Complex_Valid_4:add(%20, %21)
  looping thru 1 args of 20:X<null|{int item,X left,X right}>:recfield %19 left
  looping thru 1 args of 19:Complex_Valid_4:BTree:read (%0)
  looping thru 0 args of 0:Complex_Valid_4:BTree:decl tree
  looping thru 1 args of 21:int:read (%1)
  looping thru 0 args of 1:int:decl item
assign 1 := 1
checking: 26:X<null|{int item,X left,X right}>:recfield %25 right
  looping thru 1 args of 26:X<null|{int item,X left,X right}>:recfield %25 right
  looping thru 1 args of 25:Complex_Valid_4:BTree:read (%0)
  looping thru 0 args of 0:Complex_Valid_4:BTree:decl tree
checking: 30:Complex_Valid_4:BTree:call Complex_Valid_4:add(%28, %29)
  looping thru 2 args of 30:Complex_Valid_4:BTree:call Complex_Valid_4:add(%28, %29)
  looping thru 1 args of 28:X<null|{int item,X left,X right}>:recfield %27 right
  looping thru 1 args of 27:Complex_Valid_4:BTree:read (%0)
  looping thru 0 args of 0:Complex_Valid_4:BTree:decl tree
  looping thru 1 args of 29:int:read (%1)
  looping thru 0 args of 1:int:decl item
checking: 36:{int item,null left,null right}|{int item,X<null|{int item,X left,X right}> left,Complex_Valid_4:BTree right}|{int item,Complex_Valid_4:BTree left,X<null|{int item,X left,X right}> right}:read (%0)
  looping thru 1 args of 36:{int item,null left,null right}|{int item,X<null|{int item,X left,X right}> left,Complex_Valid_4:BTree right}|{int item,Complex_Valid_4:BTree left,X<null|{int item,X left,X right}> right}:read (%0)
  looping thru 0 args of 0:Complex_Valid_4:BTree:decl tree
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:Complex_Valid_4:BTree:read (%0)
  looping thru 0 args of 0:Complex_Valid_4:BTree:decl tree
  looping thru 0 args of 4:null:const null
checking: 6:bool:const false
  looping thru 0 args of 6:bool:const false
checking: 12:bool:eq (%10, %11)
  looping thru 2 args of 12:bool:eq (%10, %11)
  looping thru 1 args of 10:int:recfield %9 item
  looping thru 1 args of 9:Complex_Valid_4:BTree:read (%0)
  looping thru 0 args of 0:Complex_Valid_4:BTree:decl tree
  looping thru 1 args of 11:int:read (%1)
  looping thru 0 args of 1:int:decl item
checking: 13:bool:const true
  looping thru 0 args of 13:bool:const true
checking: 19:bool:lt (%16, %18)
  looping thru 2 args of 19:bool:lt (%16, %18)
  looping thru 1 args of 16:int:read (%1)
  looping thru 0 args of 1:int:decl item
  looping thru 1 args of 18:int:recfield %17 item
  looping thru 1 args of 17:Complex_Valid_4:BTree:read (%0)
  looping thru 0 args of 0:Complex_Valid_4:BTree:decl tree
checking: 23:bool:call Complex_Valid_4:contains(%21, %22)
  looping thru 2 args of 23:bool:call Complex_Valid_4:contains(%21, %22)
  looping thru 1 args of 21:X<null|{int item,X left,X right}>:recfield %20 left
  looping thru 1 args of 20:Complex_Valid_4:BTree:read (%0)
  looping thru 0 args of 0:Complex_Valid_4:BTree:decl tree
  looping thru 1 args of 22:int:read (%1)
  looping thru 0 args of 1:int:decl item
checking: 29:bool:call Complex_Valid_4:contains(%27, %28)
  looping thru 2 args of 29:bool:call Complex_Valid_4:contains(%27, %28)
  looping thru 1 args of 27:X<null|{int item,X left,X right}>:recfield %26 right
  looping thru 1 args of 26:Complex_Valid_4:BTree:read (%0)
  looping thru 0 args of 0:Complex_Valid_4:BTree:decl tree
  looping thru 1 args of 28:int:read (%1)
  looping thru 0 args of 1:int:decl item
assign 1 := 1
checking: 2:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 2:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
checking: 5:Complex_Valid_4:BTree:call Complex_Valid_4:add(%3, %4)
  looping thru 2 args of 5:Complex_Valid_4:BTree:call Complex_Valid_4:add(%3, %4)
  looping thru 1 args of 3:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
  looping thru 0 args of 4:int:const 1
assign 1 := 1
checking: 7:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 7:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
checking: 10:Complex_Valid_4:BTree:call Complex_Valid_4:add(%8, %9)
  looping thru 2 args of 10:Complex_Valid_4:BTree:call Complex_Valid_4:add(%8, %9)
  looping thru 1 args of 8:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
  looping thru 0 args of 9:int:const 2
assign 1 := 1
checking: 12:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 12:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
checking: 15:Complex_Valid_4:BTree:call Complex_Valid_4:add(%13, %14)
  looping thru 2 args of 15:Complex_Valid_4:BTree:call Complex_Valid_4:add(%13, %14)
  looping thru 1 args of 13:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
  looping thru 0 args of 14:int:const 3
assign 1 := 1
checking: 17:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 17:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
checking: 20:Complex_Valid_4:BTree:call Complex_Valid_4:add(%18, %19)
  looping thru 2 args of 20:Complex_Valid_4:BTree:call Complex_Valid_4:add(%18, %19)
  looping thru 1 args of 18:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
  looping thru 0 args of 19:int:const 4
assign 1 := 1
checking: 22:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 22:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
checking: 25:Complex_Valid_4:BTree:call Complex_Valid_4:add(%23, %24)
  looping thru 2 args of 25:Complex_Valid_4:BTree:call Complex_Valid_4:add(%23, %24)
  looping thru 1 args of 23:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
  looping thru 0 args of 24:int:const 5
assign 1 := 1
checking: 27:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 27:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
checking: 30:Complex_Valid_4:BTree:call Complex_Valid_4:add(%28, %29)
  looping thru 2 args of 30:Complex_Valid_4:BTree:call Complex_Valid_4:add(%28, %29)
  looping thru 1 args of 28:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
  looping thru 0 args of 29:int:const 6
checking: 36:bool:eq (%34, %35)
  looping thru 2 args of 36:bool:eq (%34, %35)
  looping thru 2 args of 34:bool:call Complex_Valid_4:contains(%32, %33)
  looping thru 1 args of 32:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
  looping thru 0 args of 33:int:const 5
  looping thru 0 args of 35:bool:const true
checking: 42:bool:eq (%40, %41)
  looping thru 2 args of 42:bool:eq (%40, %41)
  looping thru 2 args of 40:bool:call Complex_Valid_4:contains(%38, %39)
  looping thru 1 args of 38:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
  looping thru 0 args of 39:int:const 4
  looping thru 0 args of 41:bool:const true
checking: 48:bool:eq (%46, %47)
  looping thru 2 args of 48:bool:eq (%46, %47)
  looping thru 2 args of 46:bool:call Complex_Valid_4:contains(%44, %45)
  looping thru 1 args of 44:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
  looping thru 0 args of 45:int:const 6
  looping thru 0 args of 47:bool:const true
checking: 54:bool:eq (%52, %53)
  looping thru 2 args of 54:bool:eq (%52, %53)
  looping thru 2 args of 52:bool:call Complex_Valid_4:contains(%50, %51)
  looping thru 1 args of 50:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
  looping thru 0 args of 51:int:const 3
  looping thru 0 args of 53:bool:const true
checking: 60:bool:eq (%58, %59)
  looping thru 2 args of 60:bool:eq (%58, %59)
  looping thru 2 args of 58:bool:call Complex_Valid_4:contains(%56, %57)
  looping thru 1 args of 56:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
  looping thru 0 args of 57:int:const 7
  looping thru 0 args of 59:bool:const false
checking: 66:bool:eq (%64, %65)
  looping thru 2 args of 66:bool:eq (%64, %65)
  looping thru 2 args of 64:bool:call Complex_Valid_4:contains(%62, %63)
  looping thru 1 args of 62:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
  looping thru 0 args of 63:int:const 2
  looping thru 0 args of 65:bool:const true
checking: 72:bool:eq (%70, %71)
  looping thru 2 args of 72:bool:eq (%70, %71)
  looping thru 2 args of 70:bool:call Complex_Valid_4:contains(%68, %69)
  looping thru 1 args of 68:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
  looping thru 0 args of 69:int:const 8
  looping thru 0 args of 71:bool:const false
checking: 78:bool:eq (%76, %77)
  looping thru 2 args of 78:bool:eq (%76, %77)
  looping thru 2 args of 76:bool:call Complex_Valid_4:contains(%74, %75)
  looping thru 1 args of 74:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
  looping thru 0 args of 75:int:const 1
  looping thru 0 args of 77:bool:const true
checking: 84:bool:eq (%82, %83)
  looping thru 2 args of 84:bool:eq (%82, %83)
  looping thru 2 args of 82:bool:call Complex_Valid_4:contains(%80, %81)
  looping thru 1 args of 80:Complex_Valid_4:BTree:read (%1)
  looping thru 1 args of 1:Complex_Valid_4:BTree:decl tree = 0
  looping thru 0 args of 0:Complex_Valid_4:BTree:call Complex_Valid_4:BTree()
  looping thru 0 args of 81:int:const 9
  looping thru 0 args of 83:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 4 verified, 0 errors
===== Complex_Valid_5.whiley =====
checking: 12:{int move,int[] pieces}:recinit (%1, %11)
  looping thru 2 args of 12:{int move,int[] pieces}:recinit (%1, %11)
  looping thru 0 args of 1:int:const 0
  looping thru 9 args of 11:int[]:arrinit (%2, %3, %4, %5, %6, %7, %8, %9, %10)
  looping thru 0 args of 2:int:const 0
  looping thru 0 args of 3:int:const 0
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 5:int:const 0
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 8:int:const 0
  looping thru 0 args of 9:int:const 0
  looping thru 0 args of 10:int:const 0
MUTATED INPUT b : Complex_Valid_5:Board
assign 1 := 1
checking: 10:Complex_Valid_5:Piece:arridx (%8, %9)
conjecture: 0 <= toInt(pos) && toInt(pos) < arraylen(toRecord(b)[$pieces])
  looping thru 2 args of 10:Complex_Valid_5:Piece:arridx (%8, %9)
  looping thru 1 args of 8:Complex_Valid_5:Piece[]:recfield %7 pieces
  looping thru 1 args of 7:Complex_Valid_5:Board:read (%0)
  looping thru 0 args of 0:Complex_Valid_5:Board:decl b
  looping thru 1 args of 9:Complex_Valid_5:nat:read (%2)
  looping thru 0 args of 2:Complex_Valid_5:nat:decl pos
checking: 11:Complex_Valid_5:Piece:read (%1)
  looping thru 1 args of 11:Complex_Valid_5:Piece:read (%1)
  looping thru 0 args of 1:Complex_Valid_5:Piece:decl p
wyboogie.NotImplementedYet: array update of complex expression in 12::assign (%10) = (%11)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:718)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Complex_Valid_6.whiley =====
checking: 19:bool:lt (%17, %18)
  looping thru 2 args of 19:bool:lt (%17, %18)
  looping thru 1 args of 17:int:read (%0)
  looping thru 0 args of 0:int:decl a
  looping thru 1 args of 18:int:read (%1)
  looping thru 0 args of 1:int:decl b
checking: 20:int:read (%1)
  looping thru 1 args of 20:int:read (%1)
  looping thru 0 args of 1:int:decl b
checking: 23:int:read (%0)
  looping thru 1 args of 23:int:read (%0)
  looping thru 0 args of 0:int:decl a
checking: 28:bool:gt (%26, %27)
  looping thru 2 args of 28:bool:gt (%26, %27)
  looping thru 1 args of 26:int:read (%0)
  looping thru 0 args of 0:int:decl a
  looping thru 1 args of 27:int:read (%1)
  looping thru 0 args of 1:int:decl b
assign 1 := 1
checking: 29:int:read (%25)
  looping thru 1 args of 29:int:read (%25)
  looping thru 0 args of 25:int:decl diff
checking: 32:int:sub (%30, %31)
  looping thru 2 args of 32:int:sub (%30, %31)
  looping thru 1 args of 30:int:read (%0)
  looping thru 0 args of 0:int:decl a
  looping thru 1 args of 31:int:read (%1)
  looping thru 0 args of 1:int:decl b
assign 1 := 1
checking: 35:int:read (%25)
  looping thru 1 args of 35:int:read (%25)
  looping thru 0 args of 25:int:decl diff
checking: 38:int:sub (%36, %37)
  looping thru 2 args of 38:int:sub (%36, %37)
  looping thru 1 args of 36:int:read (%1)
  looping thru 0 args of 1:int:decl b
  looping thru 1 args of 37:int:read (%0)
  looping thru 0 args of 0:int:decl a
checking: 42:int:read (%25)
  looping thru 1 args of 42:int:read (%25)
  looping thru 0 args of 25:int:decl diff
checking: 5:bool:lt (%3, %4)
  looping thru 2 args of 5:bool:lt (%3, %4)
  looping thru 1 args of 3:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 4:int:const 20
checking: 11:bool:lt (%9, %10)
  looping thru 2 args of 11:bool:lt (%9, %10)
  looping thru 1 args of 9:int:read (%7)
  looping thru 1 args of 7:int:decl j = 6
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 10:int:const 20
checking: 26:bool:lor (%14, %25)
  looping thru 2 args of 14:bool:lt (%12, %13)
  looping thru 1 args of 12:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 1 args of 13:int:read (%7)
  looping thru 1 args of 7:int:decl j = 6
  looping thru 0 args of 6:int:const 0
  looping thru 2 args of 25:bool:eq (%21, %24)
  looping thru 2 args of 21:Complex_Valid_6:nat:call Complex_Valid_6:diff(%17, %20)
  looping thru 2 args of 17:int:sub (%15, %16)
  looping thru 1 args of 15:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 16:int:const 10
  looping thru 2 args of 20:int:sub (%18, %19)
  looping thru 1 args of 18:int:read (%7)
  looping thru 1 args of 7:int:decl j = 6
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 19:int:const 10
  looping thru 2 args of 24:int:sub (%22, %23)
  looping thru 1 args of 22:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 1 args of 23:int:read (%7)
  looping thru 1 args of 7:int:decl j = 6
  looping thru 0 args of 6:int:const 0
checking: 42:bool:lor (%30, %41)
  looping thru 2 args of 30:bool:gt (%28, %29)
  looping thru 1 args of 28:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 1 args of 29:int:read (%7)
  looping thru 1 args of 7:int:decl j = 6
  looping thru 0 args of 6:int:const 0
  looping thru 2 args of 41:bool:eq (%37, %40)
  looping thru 2 args of 37:Complex_Valid_6:nat:call Complex_Valid_6:diff(%33, %36)
  looping thru 2 args of 33:int:sub (%31, %32)
  looping thru 1 args of 31:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 32:int:const 10
  looping thru 2 args of 36:int:sub (%34, %35)
  looping thru 1 args of 34:int:read (%7)
  looping thru 1 args of 7:int:decl j = 6
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 35:int:const 10
  looping thru 2 args of 40:int:sub (%38, %39)
  looping thru 1 args of 38:int:read (%7)
  looping thru 1 args of 7:int:decl j = 6
  looping thru 0 args of 6:int:const 0
  looping thru 1 args of 39:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
assign 1 := 1
checking: 44:int:read (%7)
  looping thru 1 args of 44:int:read (%7)
  looping thru 1 args of 7:int:decl j = 6
  looping thru 0 args of 6:int:const 0
checking: 47:int:add (%45, %46)
  looping thru 2 args of 47:int:add (%45, %46)
  looping thru 1 args of 45:int:read (%7)
  looping thru 1 args of 7:int:decl j = 6
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 46:int:const 1
assign 1 := 1
checking: 51:int:read (%1)
  looping thru 1 args of 51:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
checking: 54:int:add (%52, %53)
  looping thru 2 args of 54:int:add (%52, %53)
  looping thru 1 args of 52:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 53:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Complex_Valid_7.whiley =====
checking: 42:bool:read (%33)
  looping thru 1 args of 42:bool:read (%33)
  looping thru 1 args of 33:bool:decl isX = 32
  looping thru 2 args of 28:bool:gteq (%26, %27)
  looping thru 1 args of 26:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 27:int:read (%1)
  looping thru 0 args of 1:int:decl y
  looping thru 2 args of 31:bool:gteq (%29, %30)
  looping thru 1 args of 29:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 30:int:read (%2)
  looping thru 0 args of 2:int:decl z
checking: 43:int:read (%0)
  looping thru 1 args of 43:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 46:bool:read (%41)
  looping thru 1 args of 46:bool:read (%41)
  looping thru 1 args of 41:bool:decl isY = 40
  looping thru 2 args of 36:bool:gteq (%34, %35)
  looping thru 1 args of 34:int:read (%1)
  looping thru 0 args of 1:int:decl y
  looping thru 1 args of 35:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 2 args of 39:bool:gteq (%37, %38)
  looping thru 1 args of 37:int:read (%1)
  looping thru 0 args of 1:int:decl y
  looping thru 1 args of 38:int:read (%2)
  looping thru 0 args of 2:int:decl z
checking: 47:int:read (%1)
  looping thru 1 args of 47:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 50:int:read (%2)
  looping thru 1 args of 50:int:read (%2)
  looping thru 0 args of 2:int:decl z
checking: 10:bool:lt (%7, %9)
  looping thru 2 args of 10:bool:lt (%7, %9)
  looping thru 1 args of 7:int:read (%2)
  looping thru 1 args of 2:int:decl i1 = 1
  looping thru 0 args of 1:int:const 0
  looping thru 1 args of 9:int:arrlen (%8)
  looping thru 1 args of 8:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
checking: 24:bool:lt (%21, %23)
  looping thru 2 args of 24:bool:lt (%21, %23)
  looping thru 1 args of 21:int:read (%16)
  looping thru 1 args of 16:int:decl i2 = 15
  looping thru 0 args of 15:int:const 0
  looping thru 1 args of 23:int:arrlen (%22)
  looping thru 1 args of 22:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
checking: 38:bool:lt (%35, %37)
  looping thru 2 args of 38:bool:lt (%35, %37)
  looping thru 1 args of 35:int:read (%30)
  looping thru 1 args of 30:int:decl i3 = 29
  looping thru 0 args of 29:int:const 0
  looping thru 1 args of 37:int:arrlen (%36)
  looping thru 1 args of 36:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
checking: 57:bool:lor (%50, %56)
  looping thru 1 args of 50:bool:not (%49)
  looping thru 2 args of 45:bool:lteq (%43, %44)
  looping thru 1 args of 43:int:read (%14)
  looping thru 1 args of 14:int:decl v1 = 13
conjecture: 0 <= toInt(i1) && toInt(i1) < arraylen(xs)
  looping thru 2 args of 13:int:arridx (%11, %12)
  looping thru 1 args of 11:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 12:int:read (%2)
  looping thru 1 args of 2:int:decl i1 = 1
  looping thru 0 args of 1:int:const 0
  looping thru 1 args of 44:int:read (%42)
  looping thru 1 args of 42:int:decl v3 = 41
conjecture: 0 <= toInt(i3) && toInt(i3) < arraylen(xs)
  looping thru 2 args of 41:int:arridx (%39, %40)
  looping thru 1 args of 39:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 40:int:read (%30)
  looping thru 1 args of 30:int:decl i3 = 29
  looping thru 0 args of 29:int:const 0
  looping thru 2 args of 48:bool:lteq (%46, %47)
  looping thru 1 args of 46:int:read (%28)
  looping thru 1 args of 28:int:decl v2 = 27
conjecture: 0 <= toInt(i2) && toInt(i2) < arraylen(xs)
  looping thru 2 args of 27:int:arridx (%25, %26)
  looping thru 1 args of 25:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 26:int:read (%16)
  looping thru 1 args of 16:int:decl i2 = 15
  looping thru 0 args of 15:int:const 0
  looping thru 1 args of 47:int:read (%42)
  looping thru 1 args of 42:int:decl v3 = 41
conjecture: 0 <= toInt(i3) && toInt(i3) < arraylen(xs)
  looping thru 2 args of 41:int:arridx (%39, %40)
  looping thru 1 args of 39:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 40:int:read (%30)
  looping thru 1 args of 30:int:decl i3 = 29
  looping thru 0 args of 29:int:const 0
  looping thru 2 args of 56:bool:eq (%54, %55)
  looping thru 3 args of 54:int:call Complex_Valid_7:max3(%51, %52, %53)
  looping thru 1 args of 51:int:read (%14)
  looping thru 1 args of 14:int:decl v1 = 13
conjecture: 0 <= toInt(i1) && toInt(i1) < arraylen(xs)
  looping thru 2 args of 13:int:arridx (%11, %12)
  looping thru 1 args of 11:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 12:int:read (%2)
  looping thru 1 args of 2:int:decl i1 = 1
  looping thru 0 args of 1:int:const 0
  looping thru 1 args of 52:int:read (%28)
  looping thru 1 args of 28:int:decl v2 = 27
conjecture: 0 <= toInt(i2) && toInt(i2) < arraylen(xs)
  looping thru 2 args of 27:int:arridx (%25, %26)
  looping thru 1 args of 25:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 26:int:read (%16)
  looping thru 1 args of 16:int:decl i2 = 15
  looping thru 0 args of 15:int:const 0
  looping thru 1 args of 53:int:read (%42)
  looping thru 1 args of 42:int:decl v3 = 41
conjecture: 0 <= toInt(i3) && toInt(i3) < arraylen(xs)
  looping thru 2 args of 41:int:arridx (%39, %40)
  looping thru 1 args of 39:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 40:int:read (%30)
  looping thru 1 args of 30:int:decl i3 = 29
  looping thru 0 args of 29:int:const 0
  looping thru 1 args of 55:int:read (%42)
  looping thru 1 args of 42:int:decl v3 = 41
conjecture: 0 <= toInt(i3) && toInt(i3) < arraylen(xs)
  looping thru 2 args of 41:int:arridx (%39, %40)
  looping thru 1 args of 39:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 40:int:read (%30)
  looping thru 1 args of 30:int:decl i3 = 29
  looping thru 0 args of 29:int:const 0
checking: 73:bool:lor (%66, %72)
  looping thru 1 args of 66:bool:not (%65)
  looping thru 2 args of 61:bool:lteq (%59, %60)
  looping thru 1 args of 59:int:read (%14)
  looping thru 1 args of 14:int:decl v1 = 13
conjecture: 0 <= toInt(i1) && toInt(i1) < arraylen(xs)
  looping thru 2 args of 13:int:arridx (%11, %12)
  looping thru 1 args of 11:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 12:int:read (%2)
  looping thru 1 args of 2:int:decl i1 = 1
  looping thru 0 args of 1:int:const 0
  looping thru 1 args of 60:int:read (%28)
  looping thru 1 args of 28:int:decl v2 = 27
conjecture: 0 <= toInt(i2) && toInt(i2) < arraylen(xs)
  looping thru 2 args of 27:int:arridx (%25, %26)
  looping thru 1 args of 25:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 26:int:read (%16)
  looping thru 1 args of 16:int:decl i2 = 15
  looping thru 0 args of 15:int:const 0
  looping thru 2 args of 64:bool:lteq (%62, %63)
  looping thru 1 args of 62:int:read (%42)
  looping thru 1 args of 42:int:decl v3 = 41
conjecture: 0 <= toInt(i3) && toInt(i3) < arraylen(xs)
  looping thru 2 args of 41:int:arridx (%39, %40)
  looping thru 1 args of 39:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 40:int:read (%30)
  looping thru 1 args of 30:int:decl i3 = 29
  looping thru 0 args of 29:int:const 0
  looping thru 1 args of 63:int:read (%28)
  looping thru 1 args of 28:int:decl v2 = 27
conjecture: 0 <= toInt(i2) && toInt(i2) < arraylen(xs)
  looping thru 2 args of 27:int:arridx (%25, %26)
  looping thru 1 args of 25:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 26:int:read (%16)
  looping thru 1 args of 16:int:decl i2 = 15
  looping thru 0 args of 15:int:const 0
  looping thru 2 args of 72:bool:eq (%70, %71)
  looping thru 3 args of 70:int:call Complex_Valid_7:max3(%67, %68, %69)
  looping thru 1 args of 67:int:read (%14)
  looping thru 1 args of 14:int:decl v1 = 13
conjecture: 0 <= toInt(i1) && toInt(i1) < arraylen(xs)
  looping thru 2 args of 13:int:arridx (%11, %12)
  looping thru 1 args of 11:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 12:int:read (%2)
  looping thru 1 args of 2:int:decl i1 = 1
  looping thru 0 args of 1:int:const 0
  looping thru 1 args of 68:int:read (%28)
  looping thru 1 args of 28:int:decl v2 = 27
conjecture: 0 <= toInt(i2) && toInt(i2) < arraylen(xs)
  looping thru 2 args of 27:int:arridx (%25, %26)
  looping thru 1 args of 25:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 26:int:read (%16)
  looping thru 1 args of 16:int:decl i2 = 15
  looping thru 0 args of 15:int:const 0
  looping thru 1 args of 69:int:read (%42)
  looping thru 1 args of 42:int:decl v3 = 41
conjecture: 0 <= toInt(i3) && toInt(i3) < arraylen(xs)
  looping thru 2 args of 41:int:arridx (%39, %40)
  looping thru 1 args of 39:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 40:int:read (%30)
  looping thru 1 args of 30:int:decl i3 = 29
  looping thru 0 args of 29:int:const 0
  looping thru 1 args of 71:int:read (%28)
  looping thru 1 args of 28:int:decl v2 = 27
conjecture: 0 <= toInt(i2) && toInt(i2) < arraylen(xs)
  looping thru 2 args of 27:int:arridx (%25, %26)
  looping thru 1 args of 25:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 26:int:read (%16)
  looping thru 1 args of 16:int:decl i2 = 15
  looping thru 0 args of 15:int:const 0
checking: 89:bool:lor (%82, %88)
  looping thru 1 args of 82:bool:not (%81)
  looping thru 2 args of 77:bool:lteq (%75, %76)
  looping thru 1 args of 75:int:read (%28)
  looping thru 1 args of 28:int:decl v2 = 27
conjecture: 0 <= toInt(i2) && toInt(i2) < arraylen(xs)
  looping thru 2 args of 27:int:arridx (%25, %26)
  looping thru 1 args of 25:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 26:int:read (%16)
  looping thru 1 args of 16:int:decl i2 = 15
  looping thru 0 args of 15:int:const 0
  looping thru 1 args of 76:int:read (%42)
  looping thru 1 args of 42:int:decl v3 = 41
conjecture: 0 <= toInt(i3) && toInt(i3) < arraylen(xs)
  looping thru 2 args of 41:int:arridx (%39, %40)
  looping thru 1 args of 39:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 40:int:read (%30)
  looping thru 1 args of 30:int:decl i3 = 29
  looping thru 0 args of 29:int:const 0
  looping thru 2 args of 80:bool:lteq (%78, %79)
  looping thru 1 args of 78:int:read (%42)
  looping thru 1 args of 42:int:decl v3 = 41
conjecture: 0 <= toInt(i3) && toInt(i3) < arraylen(xs)
  looping thru 2 args of 41:int:arridx (%39, %40)
  looping thru 1 args of 39:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 40:int:read (%30)
  looping thru 1 args of 30:int:decl i3 = 29
  looping thru 0 args of 29:int:const 0
  looping thru 1 args of 79:int:read (%14)
  looping thru 1 args of 14:int:decl v1 = 13
conjecture: 0 <= toInt(i1) && toInt(i1) < arraylen(xs)
  looping thru 2 args of 13:int:arridx (%11, %12)
  looping thru 1 args of 11:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 12:int:read (%2)
  looping thru 1 args of 2:int:decl i1 = 1
  looping thru 0 args of 1:int:const 0
  looping thru 2 args of 88:bool:eq (%86, %87)
  looping thru 3 args of 86:int:call Complex_Valid_7:max3(%83, %84, %85)
  looping thru 1 args of 83:int:read (%14)
  looping thru 1 args of 14:int:decl v1 = 13
conjecture: 0 <= toInt(i1) && toInt(i1) < arraylen(xs)
  looping thru 2 args of 13:int:arridx (%11, %12)
  looping thru 1 args of 11:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 12:int:read (%2)
  looping thru 1 args of 2:int:decl i1 = 1
  looping thru 0 args of 1:int:const 0
  looping thru 1 args of 84:int:read (%28)
  looping thru 1 args of 28:int:decl v2 = 27
conjecture: 0 <= toInt(i2) && toInt(i2) < arraylen(xs)
  looping thru 2 args of 27:int:arridx (%25, %26)
  looping thru 1 args of 25:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 26:int:read (%16)
  looping thru 1 args of 16:int:decl i2 = 15
  looping thru 0 args of 15:int:const 0
  looping thru 1 args of 85:int:read (%42)
  looping thru 1 args of 42:int:decl v3 = 41
conjecture: 0 <= toInt(i3) && toInt(i3) < arraylen(xs)
  looping thru 2 args of 41:int:arridx (%39, %40)
  looping thru 1 args of 39:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 40:int:read (%30)
  looping thru 1 args of 30:int:decl i3 = 29
  looping thru 0 args of 29:int:const 0
  looping thru 1 args of 87:int:read (%14)
  looping thru 1 args of 14:int:decl v1 = 13
conjecture: 0 <= toInt(i1) && toInt(i1) < arraylen(xs)
  looping thru 2 args of 13:int:arridx (%11, %12)
  looping thru 1 args of 11:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 12:int:read (%2)
  looping thru 1 args of 2:int:decl i1 = 1
  looping thru 0 args of 1:int:const 0
assign 1 := 1
checking: 91:int:read (%30)
  looping thru 1 args of 91:int:read (%30)
  looping thru 1 args of 30:int:decl i3 = 29
  looping thru 0 args of 29:int:const 0
checking: 94:int:add (%92, %93)
  looping thru 2 args of 94:int:add (%92, %93)
  looping thru 1 args of 92:int:read (%30)
  looping thru 1 args of 30:int:decl i3 = 29
  looping thru 0 args of 29:int:const 0
  looping thru 0 args of 93:int:const 1
assign 1 := 1
checking: 98:int:read (%16)
  looping thru 1 args of 98:int:read (%16)
  looping thru 1 args of 16:int:decl i2 = 15
  looping thru 0 args of 15:int:const 0
checking: 101:int:add (%99, %100)
  looping thru 2 args of 101:int:add (%99, %100)
  looping thru 1 args of 99:int:read (%16)
  looping thru 1 args of 16:int:decl i2 = 15
  looping thru 0 args of 15:int:const 0
  looping thru 0 args of 100:int:const 1
assign 1 := 1
checking: 105:int:read (%2)
  looping thru 1 args of 105:int:read (%2)
  looping thru 1 args of 2:int:decl i1 = 1
  looping thru 0 args of 1:int:const 0
checking: 108:int:add (%106, %107)
  looping thru 2 args of 108:int:add (%106, %107)
  looping thru 1 args of 106:int:read (%2)
  looping thru 1 args of 2:int:decl i1 = 1
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 107:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Complex_Valid_8.whiley =====
mangle add : function(Complex_Valid_8:Trie,int,Complex_Valid_8:string,int)->(Complex_Valid_8:Trie) to add$2
mangle contains : function(Complex_Valid_8:Trie,int,Complex_Valid_8:string,int)->(bool) to contains$2
checking: 26:bool:lt (%23, %25)
  looping thru 2 args of 26:bool:lt (%23, %25)
  looping thru 1 args of 23:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
  looping thru 1 args of 25:int:arrlen (%24)
  looping thru 1 args of 24:Complex_Valid_8:Transition[]:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Transition[]:decl transitions
assign 1 := 1
checking: 29:Complex_Valid_8:Transition:arridx (%27, %28)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(r)
  looping thru 2 args of 29:Complex_Valid_8:Transition:arridx (%27, %28)
  looping thru 1 args of 27:Complex_Valid_8:Transition[]:read (%9)
  looping thru 1 args of 9:Complex_Valid_8:Transition[]:decl r = 8
  looping thru 2 args of 8:Complex_Valid_8:Transition[]:arrgen (%3, %7)
  looping thru 1 args of 3:Complex_Valid_8:Transition:read (%1)
  looping thru 0 args of 1:Complex_Valid_8:Transition:decl t
  looping thru 2 args of 7:int:add (%5, %6)
  looping thru 1 args of 5:int:arrlen (%4)
  looping thru 1 args of 4:Complex_Valid_8:Transition[]:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Transition[]:decl transitions
  looping thru 0 args of 6:int:const 1
  looping thru 1 args of 28:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
checking: 32:Complex_Valid_8:Transition:arridx (%30, %31)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(transitions)
  looping thru 2 args of 32:Complex_Valid_8:Transition:arridx (%30, %31)
  looping thru 1 args of 30:Complex_Valid_8:Transition[]:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Transition[]:decl transitions
  looping thru 1 args of 31:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
assign 1 := 1
checking: 34:int:read (%11)
  looping thru 1 args of 34:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
checking: 37:int:add (%35, %36)
  looping thru 2 args of 37:int:add (%35, %36)
  looping thru 1 args of 35:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
  looping thru 0 args of 36:int:const 1
checking: 41:Complex_Valid_8:Transition[]:read (%9)
  looping thru 1 args of 41:Complex_Valid_8:Transition[]:read (%9)
  looping thru 1 args of 9:Complex_Valid_8:Transition[]:decl r = 8
  looping thru 2 args of 8:Complex_Valid_8:Transition[]:arrgen (%3, %7)
  looping thru 1 args of 3:Complex_Valid_8:Transition:read (%1)
  looping thru 0 args of 1:Complex_Valid_8:Transition:decl t
  looping thru 2 args of 7:int:add (%5, %6)
  looping thru 1 args of 5:int:arrlen (%4)
  looping thru 1 args of 4:Complex_Valid_8:Transition[]:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Transition[]:decl transitions
  looping thru 0 args of 6:int:const 1
checking: 7:Complex_Valid_8:Trie:call Complex_Valid_8:add(%3, %4, %5, %6)
  looping thru 4 args of 7:Complex_Valid_8:Trie:call Complex_Valid_8:add(%3, %4, %5, %6)
  looping thru 1 args of 3:Complex_Valid_8:Trie:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Trie:decl trie
  looping thru 0 args of 4:int:const 0
  looping thru 1 args of 5:Complex_Valid_8:string:read (%1)
  looping thru 0 args of 1:Complex_Valid_8:string:decl str
  looping thru 0 args of 6:int:const 0
MUTATED INPUT trie : Complex_Valid_8:Trie
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:int:arrlen (%16)
  looping thru 1 args of 16:Complex_Valid_8:string:read (%2)
  looping thru 0 args of 2:Complex_Valid_8:string:decl str
  looping thru 1 args of 18:int:read (%3)
  looping thru 0 args of 3:int:decl index
checking: 20:Complex_Valid_8:Trie:read (%0)
  looping thru 1 args of 20:Complex_Valid_8:Trie:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Trie:decl trie
checking: 37:bool:lt (%33, %36)
  looping thru 2 args of 37:bool:lt (%33, %36)
  looping thru 1 args of 33:int:read (%28)
  looping thru 1 args of 28:int:decl i = 27
  looping thru 0 args of 27:int:const 0
  looping thru 1 args of 36:int:arrlen (%35)
  looping thru 1 args of 35:Complex_Valid_8:Transition[]:recfield %34 transitions
  looping thru 1 args of 34:Complex_Valid_8:Trie:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Trie:decl trie
checking: 51:bool:land (%46, %50)
  looping thru 2 args of 46:bool:eq (%44, %45)
  looping thru 1 args of 44:int:recfield %43 from
  looping thru 1 args of 43:Complex_Valid_8:Transition:read (%42)
  looping thru 1 args of 42:Complex_Valid_8:Transition:decl t = 41
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(toRecord(trie)[$transitions])
  looping thru 2 args of 41:Complex_Valid_8:Transition:arridx (%39, %40)
  looping thru 1 args of 39:Complex_Valid_8:Transition[]:recfield %38 transitions
  looping thru 1 args of 38:Complex_Valid_8:Trie:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Trie:decl trie
  looping thru 1 args of 40:int:read (%28)
  looping thru 1 args of 28:int:decl i = 27
  looping thru 0 args of 27:int:const 0
  looping thru 1 args of 45:int:read (%1)
  looping thru 0 args of 1:int:decl state
  looping thru 2 args of 50:bool:eq (%48, %49)
  looping thru 1 args of 48:Complex_Valid_8:char:recfield %47 character
  looping thru 1 args of 47:Complex_Valid_8:Transition:read (%42)
  looping thru 1 args of 42:Complex_Valid_8:Transition:decl t = 41
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(toRecord(trie)[$transitions])
  looping thru 2 args of 41:Complex_Valid_8:Transition:arridx (%39, %40)
  looping thru 1 args of 39:Complex_Valid_8:Transition[]:recfield %38 transitions
  looping thru 1 args of 38:Complex_Valid_8:Trie:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Trie:decl trie
  looping thru 1 args of 40:int:read (%28)
  looping thru 1 args of 28:int:decl i = 27
  looping thru 0 args of 27:int:const 0
  looping thru 1 args of 49:int:read (%26)
  looping thru 1 args of 26:Complex_Valid_8:char:decl c = 25
conjecture: 0 <= toInt(index) && toInt(index) < arraylen(str)
  looping thru 2 args of 25:int:arridx (%23, %24)
  looping thru 1 args of 23:Complex_Valid_8:string:read (%2)
  looping thru 0 args of 2:Complex_Valid_8:string:decl str
  looping thru 1 args of 24:int:read (%3)
  looping thru 0 args of 3:int:decl index
checking: 59:Complex_Valid_8:Trie:call Complex_Valid_8:add(%52, %54, %55, %58)
  looping thru 4 args of 59:Complex_Valid_8:Trie:call Complex_Valid_8:add(%52, %54, %55, %58)
  looping thru 1 args of 52:Complex_Valid_8:Trie:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Trie:decl trie
  looping thru 1 args of 54:int:recfield %53 to
  looping thru 1 args of 53:Complex_Valid_8:Transition:read (%42)
  looping thru 1 args of 42:Complex_Valid_8:Transition:decl t = 41
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(toRecord(trie)[$transitions])
  looping thru 2 args of 41:Complex_Valid_8:Transition:arridx (%39, %40)
  looping thru 1 args of 39:Complex_Valid_8:Transition[]:recfield %38 transitions
  looping thru 1 args of 38:Complex_Valid_8:Trie:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Trie:decl trie
  looping thru 1 args of 40:int:read (%28)
  looping thru 1 args of 28:int:decl i = 27
  looping thru 0 args of 27:int:const 0
  looping thru 1 args of 55:Complex_Valid_8:string:read (%2)
  looping thru 0 args of 2:Complex_Valid_8:string:decl str
  looping thru 2 args of 58:int:add (%56, %57)
  looping thru 1 args of 56:int:read (%3)
  looping thru 0 args of 3:int:decl index
  looping thru 0 args of 57:int:const 1
assign 1 := 1
checking: 63:int:read (%28)
  looping thru 1 args of 63:int:read (%28)
  looping thru 1 args of 28:int:decl i = 27
  looping thru 0 args of 27:int:const 0
checking: 66:int:add (%64, %65)
  looping thru 2 args of 66:int:add (%64, %65)
  looping thru 1 args of 64:int:read (%28)
  looping thru 1 args of 28:int:decl i = 27
  looping thru 0 args of 27:int:const 0
  looping thru 0 args of 65:int:const 1
assign 1 := 1
checking: 82:Complex_Valid_8:Transition[]:recfield %81 transitions
  looping thru 1 args of 82:Complex_Valid_8:Transition[]:recfield %81 transitions
  looping thru 1 args of 81:Complex_Valid_8:Trie:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Trie:decl trie
checking: 86:Complex_Valid_8:Transition[]:call Complex_Valid_8:append(%84, %85)
  looping thru 2 args of 86:Complex_Valid_8:Transition[]:call Complex_Valid_8:append(%84, %85)
  looping thru 1 args of 84:Complex_Valid_8:Transition[]:recfield %83 transitions
  looping thru 1 args of 83:Complex_Valid_8:Trie:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Trie:decl trie
  looping thru 1 args of 85:{int character,int from,int to}:read (%80)
  looping thru 1 args of 80:Complex_Valid_8:Transition:decl t = 79
  looping thru 3 args of 79:{int character,int from,int to}:recinit (%76, %77, %78)
  looping thru 1 args of 76:int:read (%26)
  looping thru 1 args of 26:Complex_Valid_8:char:decl c = 25
conjecture: 0 <= toInt(index) && toInt(index) < arraylen(str)
  looping thru 2 args of 25:int:arridx (%23, %24)
  looping thru 1 args of 23:Complex_Valid_8:string:read (%2)
  looping thru 0 args of 2:Complex_Valid_8:string:decl str
  looping thru 1 args of 24:int:read (%3)
  looping thru 0 args of 3:int:decl index
  looping thru 1 args of 77:int:read (%1)
  looping thru 0 args of 1:int:decl state
  looping thru 1 args of 78:int:read (%75)
  looping thru 1 args of 75:int:decl target = 74
  looping thru 2 args of 74:int:add (%72, %73)
  looping thru 1 args of 72:int:arrlen (%71)
  looping thru 1 args of 71:Complex_Valid_8:Transition[]:recfield %70 transitions
  looping thru 1 args of 70:Complex_Valid_8:Trie:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Trie:decl trie
  looping thru 0 args of 73:int:const 1
checking: 94:Complex_Valid_8:Trie:call Complex_Valid_8:add(%88, %89, %90, %93)
  looping thru 4 args of 94:Complex_Valid_8:Trie:call Complex_Valid_8:add(%88, %89, %90, %93)
  looping thru 1 args of 88:{Complex_Valid_8:Transition[] transitions}:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Trie:decl trie
  looping thru 1 args of 89:int:read (%75)
  looping thru 1 args of 75:int:decl target = 74
  looping thru 2 args of 74:int:add (%72, %73)
  looping thru 1 args of 72:int:arrlen (%71)
  looping thru 1 args of 71:Complex_Valid_8:Transition[]:recfield %70 transitions
  looping thru 1 args of 70:Complex_Valid_8:Trie:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Trie:decl trie
  looping thru 0 args of 73:int:const 1
  looping thru 1 args of 90:Complex_Valid_8:string:read (%2)
  looping thru 0 args of 2:Complex_Valid_8:string:decl str
  looping thru 2 args of 93:int:add (%91, %92)
  looping thru 1 args of 91:int:read (%3)
  looping thru 0 args of 3:int:decl index
  looping thru 0 args of 92:int:const 1
checking: 7:bool:call Complex_Valid_8:contains(%3, %4, %5, %6)
  looping thru 4 args of 7:bool:call Complex_Valid_8:contains(%3, %4, %5, %6)
  looping thru 1 args of 3:Complex_Valid_8:Trie:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Trie:decl trie
  looping thru 0 args of 4:int:const 0
  looping thru 1 args of 5:Complex_Valid_8:string:read (%1)
  looping thru 0 args of 1:Complex_Valid_8:string:decl str
  looping thru 0 args of 6:int:const 0
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:int:arrlen (%16)
  looping thru 1 args of 16:Complex_Valid_8:string:read (%2)
  looping thru 0 args of 2:Complex_Valid_8:string:decl str
  looping thru 1 args of 18:int:read (%3)
  looping thru 0 args of 3:int:decl index
checking: 20:bool:const true
  looping thru 0 args of 20:bool:const true
checking: 37:bool:lt (%33, %36)
  looping thru 2 args of 37:bool:lt (%33, %36)
  looping thru 1 args of 33:int:read (%28)
  looping thru 1 args of 28:int:decl i = 27
  looping thru 0 args of 27:int:const 0
  looping thru 1 args of 36:int:arrlen (%35)
  looping thru 1 args of 35:Complex_Valid_8:Transition[]:recfield %34 transitions
  looping thru 1 args of 34:Complex_Valid_8:Trie:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Trie:decl trie
checking: 51:bool:land (%46, %50)
  looping thru 2 args of 46:bool:eq (%44, %45)
  looping thru 1 args of 44:int:recfield %43 from
  looping thru 1 args of 43:Complex_Valid_8:Transition:read (%42)
  looping thru 1 args of 42:Complex_Valid_8:Transition:decl t = 41
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(toRecord(trie)[$transitions])
  looping thru 2 args of 41:Complex_Valid_8:Transition:arridx (%39, %40)
  looping thru 1 args of 39:Complex_Valid_8:Transition[]:recfield %38 transitions
  looping thru 1 args of 38:Complex_Valid_8:Trie:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Trie:decl trie
  looping thru 1 args of 40:int:read (%28)
  looping thru 1 args of 28:int:decl i = 27
  looping thru 0 args of 27:int:const 0
  looping thru 1 args of 45:int:read (%1)
  looping thru 0 args of 1:int:decl state
  looping thru 2 args of 50:bool:eq (%48, %49)
  looping thru 1 args of 48:Complex_Valid_8:char:recfield %47 character
  looping thru 1 args of 47:Complex_Valid_8:Transition:read (%42)
  looping thru 1 args of 42:Complex_Valid_8:Transition:decl t = 41
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(toRecord(trie)[$transitions])
  looping thru 2 args of 41:Complex_Valid_8:Transition:arridx (%39, %40)
  looping thru 1 args of 39:Complex_Valid_8:Transition[]:recfield %38 transitions
  looping thru 1 args of 38:Complex_Valid_8:Trie:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Trie:decl trie
  looping thru 1 args of 40:int:read (%28)
  looping thru 1 args of 28:int:decl i = 27
  looping thru 0 args of 27:int:const 0
  looping thru 1 args of 49:int:read (%26)
  looping thru 1 args of 26:Complex_Valid_8:char:decl c = 25
conjecture: 0 <= toInt(index) && toInt(index) < arraylen(str)
  looping thru 2 args of 25:int:arridx (%23, %24)
  looping thru 1 args of 23:Complex_Valid_8:string:read (%2)
  looping thru 0 args of 2:Complex_Valid_8:string:decl str
  looping thru 1 args of 24:int:read (%3)
  looping thru 0 args of 3:int:decl index
checking: 59:bool:call Complex_Valid_8:contains(%52, %54, %55, %58)
  looping thru 4 args of 59:bool:call Complex_Valid_8:contains(%52, %54, %55, %58)
  looping thru 1 args of 52:Complex_Valid_8:Trie:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Trie:decl trie
  looping thru 1 args of 54:int:recfield %53 to
  looping thru 1 args of 53:Complex_Valid_8:Transition:read (%42)
  looping thru 1 args of 42:Complex_Valid_8:Transition:decl t = 41
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(toRecord(trie)[$transitions])
  looping thru 2 args of 41:Complex_Valid_8:Transition:arridx (%39, %40)
  looping thru 1 args of 39:Complex_Valid_8:Transition[]:recfield %38 transitions
  looping thru 1 args of 38:Complex_Valid_8:Trie:read (%0)
  looping thru 0 args of 0:Complex_Valid_8:Trie:decl trie
  looping thru 1 args of 40:int:read (%28)
  looping thru 1 args of 28:int:decl i = 27
  looping thru 0 args of 27:int:const 0
  looping thru 1 args of 55:Complex_Valid_8:string:read (%2)
  looping thru 0 args of 2:Complex_Valid_8:string:decl str
  looping thru 2 args of 58:int:add (%56, %57)
  looping thru 1 args of 56:int:read (%3)
  looping thru 0 args of 3:int:decl index
  looping thru 0 args of 57:int:const 1
assign 1 := 1
checking: 63:int:read (%28)
  looping thru 1 args of 63:int:read (%28)
  looping thru 1 args of 28:int:decl i = 27
  looping thru 0 args of 27:int:const 0
checking: 66:int:add (%64, %65)
  looping thru 2 args of 66:int:add (%64, %65)
  looping thru 1 args of 64:int:read (%28)
  looping thru 1 args of 28:int:decl i = 27
  looping thru 0 args of 27:int:const 0
  looping thru 0 args of 65:int:const 1
checking: 70:bool:const false
  looping thru 0 args of 70:bool:const false
assign 1 := 1
checking: 2:{{int character,int from,int to}[] transitions}:read (%1)
  looping thru 1 args of 2:{{int character,int from,int to}[] transitions}:read (%1)
  looping thru 1 args of 1:Complex_Valid_8:Trie:decl t = 0
  looping thru 0 args of 0:{{int character,int from,int to}[] transitions}:const {transitions:=[]}
checking: 5:Complex_Valid_8:Trie:call Complex_Valid_8:add(%3, %4)
  looping thru 2 args of 5:Complex_Valid_8:Trie:call Complex_Valid_8:add(%3, %4)
  looping thru 1 args of 3:{{int character,int from,int to}[] transitions}:read (%1)
  looping thru 1 args of 1:Complex_Valid_8:Trie:decl t = 0
  looping thru 0 args of 0:{{int character,int from,int to}[] transitions}:const {transitions:=[]}
  looping thru 0 args of 4:int[]:const [104,101,108,108,111]
assign 1 := 1
checking: 7:Complex_Valid_8:Trie:read (%1)
  looping thru 1 args of 7:Complex_Valid_8:Trie:read (%1)
  looping thru 1 args of 1:Complex_Valid_8:Trie:decl t = 0
  looping thru 0 args of 0:{{int character,int from,int to}[] transitions}:const {transitions:=[]}
checking: 10:Complex_Valid_8:Trie:call Complex_Valid_8:add(%8, %9)
  looping thru 2 args of 10:Complex_Valid_8:Trie:call Complex_Valid_8:add(%8, %9)
  looping thru 1 args of 8:Complex_Valid_8:Trie:read (%1)
  looping thru 1 args of 1:Complex_Valid_8:Trie:decl t = 0
  looping thru 0 args of 0:{{int character,int from,int to}[] transitions}:const {transitions:=[]}
  looping thru 0 args of 9:int[]:const [119,111,114,108,100]
assign 1 := 1
checking: 12:Complex_Valid_8:Trie:read (%1)
  looping thru 1 args of 12:Complex_Valid_8:Trie:read (%1)
  looping thru 1 args of 1:Complex_Valid_8:Trie:decl t = 0
  looping thru 0 args of 0:{{int character,int from,int to}[] transitions}:const {transitions:=[]}
checking: 15:Complex_Valid_8:Trie:call Complex_Valid_8:add(%13, %14)
  looping thru 2 args of 15:Complex_Valid_8:Trie:call Complex_Valid_8:add(%13, %14)
  looping thru 1 args of 13:Complex_Valid_8:Trie:read (%1)
  looping thru 1 args of 1:Complex_Valid_8:Trie:decl t = 0
  looping thru 0 args of 0:{{int character,int from,int to}[] transitions}:const {transitions:=[]}
  looping thru 0 args of 14:int[]:const [104,101,108,112]
checking: 19:bool:call Complex_Valid_8:contains(%17, %18)
  looping thru 2 args of 19:bool:call Complex_Valid_8:contains(%17, %18)
  looping thru 1 args of 17:Complex_Valid_8:Trie:read (%1)
  looping thru 1 args of 1:Complex_Valid_8:Trie:decl t = 0
  looping thru 0 args of 0:{{int character,int from,int to}[] transitions}:const {transitions:=[]}
  looping thru 0 args of 18:int[]:const [104,101,108,108,111]
checking: 24:bool:not (%23)
  looping thru 1 args of 24:bool:not (%23)
  looping thru 2 args of 23:bool:call Complex_Valid_8:contains(%21, %22)
  looping thru 1 args of 21:Complex_Valid_8:Trie:read (%1)
  looping thru 1 args of 1:Complex_Valid_8:Trie:decl t = 0
  looping thru 0 args of 0:{{int character,int from,int to}[] transitions}:const {transitions:=[]}
  looping thru 0 args of 22:int[]:const [98,108,97,104]
checking: 28:bool:call Complex_Valid_8:contains(%26, %27)
  looping thru 2 args of 28:bool:call Complex_Valid_8:contains(%26, %27)
  looping thru 1 args of 26:Complex_Valid_8:Trie:read (%1)
  looping thru 1 args of 1:Complex_Valid_8:Trie:decl t = 0
  looping thru 0 args of 0:{{int character,int from,int to}[] transitions}:const {transitions:=[]}
  looping thru 0 args of 27:int[]:const [104,101,108]
checking: 33:bool:not (%32)
  looping thru 1 args of 33:bool:not (%32)
  looping thru 2 args of 32:bool:call Complex_Valid_8:contains(%30, %31)
  looping thru 1 args of 30:Complex_Valid_8:Trie:read (%1)
  looping thru 1 args of 1:Complex_Valid_8:Trie:decl t = 0
  looping thru 0 args of 0:{{int character,int from,int to}[] transitions}:const {transitions:=[]}
  looping thru 0 args of 31:int[]:const [100,97,118,101]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Complex_Valid_8.bpl(135,9): Error BP5003: A postcondition might not hold on this return path.
Complex_Valid_8.bpl(99,5): Related location: This is the postcondition that might not hold.
Execution trace:
    Complex_Valid_8.bpl(107,10): anon0
    Complex_Valid_8.bpl(112,11): anon7_Else
    Complex_Valid_8.bpl(114,9): anon8_LoopHead
    Complex_Valid_8.bpl(114,9): anon8_LoopDone

Boogie program verifier finished with 5 verified, 1 error
===== Constant_Valid_3.whiley =====
checking: 6:bool:eq (%0, %5)
  looping thru 2 args of 6:bool:eq (%0, %5)
  looping thru 0 args of 0:int[]:const [-1,2,3]
  looping thru 3 args of 5:int[]:arrinit (%2, %3, %4)
  looping thru 1 args of 2:int:neg (%1)
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 3:int:const 2
  looping thru 0 args of 4:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ConstrainedInt_Valid_1.whiley =====
checking: 4:ConstrainedInt_Valid_1:cr1nat:read (%3)
  looping thru 1 args of 4:ConstrainedInt_Valid_1:cr1nat:read (%3)
  looping thru 1 args of 3:int:decl y = 2
  looping thru 1 args of 2:ConstrainedInt_Valid_1:cr1nat:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_1:cr1nat:decl x
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call ConstrainedInt_Valid_1:f(%0)
  looping thru 0 args of 0:int:const 9
  looping thru 0 args of 2:int:const 9
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_10.whiley =====
checking: 4:ConstrainedInt_Valid_10:num:read (%3)
  looping thru 1 args of 4:ConstrainedInt_Valid_10:num:read (%3)
  looping thru 1 args of 3:int:decl y = 2
  looping thru 1 args of 2:ConstrainedInt_Valid_10:num:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_10:num:decl x
checking: 27:int:call ConstrainedInt_Valid_10:f(%26)
  looping thru 1 args of 27:int:call ConstrainedInt_Valid_10:f(%26)
  looping thru 1 args of 26:ConstrainedInt_Valid_10:nat:read (%1)
  looping thru 0 args of 1:ConstrainedInt_Valid_10:nat:decl z
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 2 args of 2:int:call ConstrainedInt_Valid_10:g(%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 3
  looping thru 0 args of 3:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedInt_Valid_12.whiley =====
checking: 4:ConstrainedInt_Valid_12:cr1nat:read (%3)
  looping thru 1 args of 4:ConstrainedInt_Valid_12:cr1nat:read (%3)
  looping thru 1 args of 3:int:decl y = 2
  looping thru 1 args of 2:ConstrainedInt_Valid_12:cr1nat:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_12:cr1nat:decl x
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call ConstrainedInt_Valid_12:f(%0)
  looping thru 0 args of 0:int:const 9
  looping thru 0 args of 2:int:const 9
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_13.whiley =====
checking: 5:ConstrainedInt_Valid_13:codeOp:read (%4)
  looping thru 1 args of 5:ConstrainedInt_Valid_13:codeOp:read (%4)
  looping thru 1 args of 4:int:decl y = 3
  looping thru 1 args of 3:ConstrainedInt_Valid_13:codeOp:recfield %2 op
  looping thru 1 args of 2:ConstrainedInt_Valid_13:code:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_13:code:decl x
checking: 6:bool:eq (%4, %5)
  looping thru 2 args of 6:bool:eq (%4, %5)
  looping thru 1 args of 4:int:call ConstrainedInt_Valid_13:f(%3)
  looping thru 2 args of 3:{int op,int[] payload}:recinit (%0, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 2:int[]:arrinit (%1)
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 5:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_15.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:any:read (%0)
  looping thru 0 args of 0:any:decl v
  looping thru 0 args of 3:type:const ConstrainedInt_Valid_15:posneg
checking: 7:bool:const true
  looping thru 0 args of 7:bool:const true
checking: 10:bool:const false
  looping thru 0 args of 10:bool:const false
checking: 1:bool:call ConstrainedInt_Valid_15:isPosNeg(%0)
  looping thru 1 args of 1:bool:call ConstrainedInt_Valid_15:isPosNeg(%0)
  looping thru 0 args of 0:int:const 1
checking: 5:bool:not (%4)
  looping thru 1 args of 5:bool:not (%4)
  looping thru 1 args of 4:bool:call ConstrainedInt_Valid_15:isPosNeg(%3)
  looping thru 0 args of 3:int:const 0
checking: 9:bool:call ConstrainedInt_Valid_15:isPosNeg(%8)
  looping thru 1 args of 9:bool:call ConstrainedInt_Valid_15:isPosNeg(%8)
  looping thru 1 args of 8:int:neg (%7)
  looping thru 0 args of 7:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_16.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:ConstrainedInt_Valid_16:oddeven:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_16:oddeven:decl x
  looping thru 0 args of 3:type:const ConstrainedInt_Valid_16:odd
checking: 7:int:const 2
  looping thru 0 args of 7:int:const 2
checking: 11:ConstrainedInt_Valid_16:oddeven:read (%0)
  looping thru 1 args of 11:ConstrainedInt_Valid_16:oddeven:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_16:oddeven:decl x
assign 1 := 1
checking: 2:int:read (%1)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl y = 0
  looping thru 0 args of 0:int:const 1
checking: 4:ConstrainedInt_Valid_16:even:call ConstrainedInt_Valid_16:f(%3)
  looping thru 1 args of 4:ConstrainedInt_Valid_16:even:call ConstrainedInt_Valid_16:f(%3)
  looping thru 0 args of 3:int:const 1
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:ConstrainedInt_Valid_16:even:read (%1)
  looping thru 1 args of 1:int:decl y = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 7:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_17.whiley =====
checking: 2:ConstrainedInt_Valid_17:anat:read (%0)
  looping thru 1 args of 2:ConstrainedInt_Valid_17:anat:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_17:anat:decl x
checking: 2:ConstrainedInt_Valid_17:bnat:read (%0)
  looping thru 1 args of 2:ConstrainedInt_Valid_17:bnat:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_17:bnat:decl x
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:ConstrainedInt_Valid_17:bnat:call ConstrainedInt_Valid_17:atob(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 4:int:const 1
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 1 args of 8:ConstrainedInt_Valid_17:anat:call ConstrainedInt_Valid_17:btoa(%7)
  looping thru 1 args of 7:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 9:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedInt_Valid_18.whiley =====
checking: 2:ConstrainedInt_Valid_18:anat:read (%0)
  looping thru 1 args of 2:ConstrainedInt_Valid_18:anat:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_18:anat:decl x
checking: 2:ConstrainedInt_Valid_18:bnat:read (%0)
  looping thru 1 args of 2:ConstrainedInt_Valid_18:bnat:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_18:bnat:decl x
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:ConstrainedInt_Valid_18:bnat:call ConstrainedInt_Valid_18:atob(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 4:int:const 1
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 1 args of 8:ConstrainedInt_Valid_18:anat:call ConstrainedInt_Valid_18:btoa(%7)
  looping thru 1 args of 7:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 9:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedInt_Valid_19.whiley =====
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:ConstrainedInt_Valid_19:a_nat:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_19:a_nat:decl x
  looping thru 0 args of 3:int:const 0
checking: 5:int:const 1
  looping thru 0 args of 5:int:const 1
checking: 11:ConstrainedInt_Valid_19:b_nat:call ConstrainedInt_Valid_19:f(%10)
  looping thru 1 args of 11:ConstrainedInt_Valid_19:b_nat:call ConstrainedInt_Valid_19:f(%10)
  looping thru 2 args of 10:int:sub (%8, %9)
  looping thru 1 args of 8:ConstrainedInt_Valid_19:a_nat:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_19:a_nat:decl x
  looping thru 0 args of 9:int:const 1
assign 1 := 1
checking: 2:int:read (%1)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 0
checking: 4:ConstrainedInt_Valid_19:b_nat:call ConstrainedInt_Valid_19:f(%3)
  looping thru 1 args of 4:ConstrainedInt_Valid_19:b_nat:call ConstrainedInt_Valid_19:f(%3)
  looping thru 1 args of 3:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 0
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:ConstrainedInt_Valid_19:b_nat:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 7:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_2.whiley =====
checking: 2:int:const 1
  looping thru 0 args of 2:int:const 1
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:ConstrainedInt_Valid_2:cr3nat:read (%2)
  looping thru 1 args of 2:int:decl y = 1
  looping thru 1 args of 1:ConstrainedInt_Valid_2:cr3nat:call ConstrainedInt_Valid_2:f(%0)
  looping thru 0 args of 0:int:const 9
  looping thru 0 args of 4:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_20.whiley =====
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:ConstrainedInt_Valid_20:a_nat:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_20:a_nat:decl x
  looping thru 0 args of 3:int:const 0
checking: 5:int:const 1
  looping thru 0 args of 5:int:const 1
checking: 11:ConstrainedInt_Valid_20:b_nat:call ConstrainedInt_Valid_20:f(%10)
  looping thru 1 args of 11:ConstrainedInt_Valid_20:b_nat:call ConstrainedInt_Valid_20:f(%10)
  looping thru 2 args of 10:int:sub (%8, %9)
  looping thru 1 args of 8:ConstrainedInt_Valid_20:a_nat:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_20:a_nat:decl x
  looping thru 0 args of 9:int:const 1
assign 1 := 1
checking: 2:int:read (%1)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 0
checking: 4:ConstrainedInt_Valid_20:b_nat:call ConstrainedInt_Valid_20:f(%3)
  looping thru 1 args of 4:ConstrainedInt_Valid_20:b_nat:call ConstrainedInt_Valid_20:f(%3)
  looping thru 1 args of 3:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 0
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:ConstrainedInt_Valid_20:b_nat:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 7:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_21.whiley =====
checking: 10:int:add (%8, %9)
  looping thru 2 args of 10:int:add (%8, %9)
  looping thru 1 args of 8:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 9:int:const 1
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call ConstrainedInt_Valid_21:f(%0)
  looping thru 0 args of 0:int:const 9
  looping thru 0 args of 2:int:const 10
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_22.whiley =====
checking: 6:int:rem (%4, %5)
  looping thru 2 args of 6:int:rem (%4, %5)
  looping thru 2 args of 4:int:add (%2, %3)
  looping thru 1 args of 2:ConstrainedInt_Valid_22:item:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_22:item:decl i
  looping thru 0 args of 3:int:const 1
  looping thru 0 args of 5:int:const 7
checking: 5:bool:gt (%3, %4)
  looping thru 2 args of 5:bool:gt (%3, %4)
  looping thru 1 args of 3:int:read (%1)
  looping thru 0 args of 1:int:decl count
  looping thru 0 args of 4:int:const 0
checking: 11:int[]:call ConstrainedInt_Valid_22:get(%7, %10)
  looping thru 2 args of 11:int[]:call ConstrainedInt_Valid_22:get(%7, %10)
  looping thru 1 args of 7:ConstrainedInt_Valid_22:item:call ConstrainedInt_Valid_22:inc(%6)
  looping thru 1 args of 6:ConstrainedInt_Valid_22:item:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_22:item:decl day
  looping thru 2 args of 10:int:sub (%8, %9)
  looping thru 1 args of 8:int:read (%1)
  looping thru 0 args of 1:int:decl count
  looping thru 0 args of 9:int:const 1
wyboogie.NotImplementedYet: call to method (get) from inside an expression in 11:int[]:call ConstrainedInt_Valid_22:get(%7, %10)
	at wyboogie.Wyil2Boogie.writeInvoke(Wyil2Boogie.java:1151)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:972)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeIf(Wyil2Boogie.java:827)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:626)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== ConstrainedInt_Valid_23.whiley =====
checking: 4:ConstrainedInt_Valid_23:cr2num:read (%3)
  looping thru 1 args of 4:ConstrainedInt_Valid_23:cr2num:read (%3)
  looping thru 1 args of 3:int:decl y = 2
  looping thru 1 args of 2:ConstrainedInt_Valid_23:cr2num:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_23:cr2num:decl x
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call ConstrainedInt_Valid_23:f(%0)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 2:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_24.whiley =====
checking: 20:bool:neq (%18, %19)
  looping thru 2 args of 20:bool:neq (%18, %19)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(str)
  looping thru 2 args of 18:ConstrainedInt_Valid_24:ASCII_char:arridx (%16, %17)
  looping thru 1 args of 16:ConstrainedInt_Valid_24:C_string:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_24:C_string:decl str
  looping thru 1 args of 17:int:read (%6)
  looping thru 1 args of 6:int:decl i = 5
  looping thru 0 args of 5:int:const 0
  looping thru 0 args of 19:int:const 0
assign 1 := 1
checking: 21:int:read (%6)
  looping thru 1 args of 21:int:read (%6)
  looping thru 1 args of 6:int:decl i = 5
  looping thru 0 args of 5:int:const 0
checking: 24:int:add (%22, %23)
  looping thru 2 args of 24:int:add (%22, %23)
  looping thru 1 args of 22:int:read (%6)
  looping thru 1 args of 6:int:decl i = 5
  looping thru 0 args of 5:int:const 0
  looping thru 0 args of 23:int:const 1
checking: 28:int:read (%6)
  looping thru 1 args of 28:int:read (%6)
  looping thru 1 args of 6:int:decl i = 5
  looping thru 0 args of 5:int:const 0
checking: 17:bool:eq (%15, %16)
  looping thru 2 args of 17:bool:eq (%15, %16)
  looping thru 1 args of 15:int:call ConstrainedInt_Valid_24:strlen(%14)
  looping thru 1 args of 14:int[]:read (%13)
  looping thru 1 args of 13:ConstrainedInt_Valid_24:C_string:decl hw = 12
  looping thru 1 args of 12:int[]:castt (%11)
  looping thru 11 args of 11:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6, %7, %8, %9, %10)
  looping thru 0 args of 0:int:const 72
  looping thru 0 args of 1:int:const 101
  looping thru 0 args of 2:int:const 108
  looping thru 0 args of 3:int:const 108
  looping thru 0 args of 4:int:const 111
  looping thru 0 args of 5:int:const 87
  looping thru 0 args of 6:int:const 111
  looping thru 0 args of 7:int:const 114
  looping thru 0 args of 8:int:const 108
  looping thru 0 args of 9:int:const 100
  looping thru 0 args of 10:int:const 0
  looping thru 0 args of 16:int:const 10
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_3.whiley =====
checking: 2:int:const 1
  looping thru 0 args of 2:int:const 1
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:ConstrainedInt_Valid_3:cr3nat:read (%2)
  looping thru 1 args of 2:int:decl y = 1
  looping thru 1 args of 1:ConstrainedInt_Valid_3:cr3nat:call ConstrainedInt_Valid_3:f(%0)
  looping thru 0 args of 0:int:const 9
  looping thru 0 args of 4:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_4.whiley =====
checking: 1:int:const 1
  looping thru 0 args of 1:int:const 1
checking: 2:bool:eq (%0, %1)
  looping thru 2 args of 2:bool:eq (%0, %1)
  looping thru 0 args of 0:ConstrainedInt_Valid_4:nat:call ConstrainedInt_Valid_4:f()
  looping thru 0 args of 1:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_5.whiley =====
checking: 1:int:const 1
  looping thru 0 args of 1:int:const 1
checking: 2:bool:eq (%0, %1)
  looping thru 2 args of 2:bool:eq (%0, %1)
  looping thru 0 args of 0:ConstrainedInt_Valid_5:nat:call ConstrainedInt_Valid_5:f()
  looping thru 0 args of 1:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_6.whiley =====
checking: 4:ConstrainedInt_Valid_6:num:read (%3)
  looping thru 1 args of 4:ConstrainedInt_Valid_6:num:read (%3)
  looping thru 1 args of 3:int:decl y = 2
  looping thru 1 args of 2:ConstrainedInt_Valid_6:num:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_6:num:decl x
checking: 27:int:call ConstrainedInt_Valid_6:f(%26)
  looping thru 1 args of 27:int:call ConstrainedInt_Valid_6:f(%26)
  looping thru 1 args of 26:int:read (%1)
  looping thru 0 args of 1:int:decl z
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 2 args of 2:int:call ConstrainedInt_Valid_6:g(%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 3:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedInt_Valid_8.whiley =====
checking: 4:ConstrainedInt_Valid_8:num:read (%3)
  looping thru 1 args of 4:ConstrainedInt_Valid_8:num:read (%3)
  looping thru 1 args of 3:int:decl y = 2
  looping thru 1 args of 2:ConstrainedInt_Valid_8:num:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_8:num:decl x
checking: 25:bool:lt (%22, %24)
  looping thru 2 args of 25:bool:lt (%22, %24)
  looping thru 1 args of 22:int:read (%17)
  looping thru 1 args of 17:int:decl i = 16
  looping thru 0 args of 16:int:const 0
  looping thru 1 args of 24:int:arrlen (%23)
  looping thru 1 args of 23:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
checking: 30:bool:eq (%28, %29)
  looping thru 2 args of 30:bool:eq (%28, %29)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(items)
  looping thru 2 args of 28:int:arridx (%26, %27)
  looping thru 1 args of 26:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 1 args of 27:int:read (%17)
  looping thru 1 args of 17:int:decl i = 16
  looping thru 0 args of 16:int:const 0
  looping thru 1 args of 29:int:read (%1)
  looping thru 0 args of 1:int:decl item
checking: 31:bool:const true
  looping thru 0 args of 31:bool:const true
assign 1 := 1
checking: 35:int:read (%17)
  looping thru 1 args of 35:int:read (%17)
  looping thru 1 args of 17:int:decl i = 16
  looping thru 0 args of 16:int:const 0
checking: 38:int:add (%36, %37)
  looping thru 2 args of 38:int:add (%36, %37)
  looping thru 1 args of 36:int:read (%17)
  looping thru 1 args of 17:int:decl i = 16
  looping thru 0 args of 16:int:const 0
  looping thru 0 args of 37:int:const 1
checking: 42:bool:const false
  looping thru 0 args of 42:bool:const false
checking: 13:bool:land (%5, %12)
  looping thru 2 args of 5:bool:call ConstrainedInt_Valid_8:contains(%3, %4)
  looping thru 1 args of 3:ConstrainedInt_Valid_8:bignum[]:read (%0)
  looping thru 0 args of 0:ConstrainedInt_Valid_8:bignum[]:decl zs
  looping thru 1 args of 4:int:read (%1)
  looping thru 0 args of 1:int:decl z
  looping thru 2 args of 12:bool:call ConstrainedInt_Valid_8:contains(%10, %11)
  looping thru 4 args of 10:int[]:arrinit (%6, %7, %8, %9)
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 7:int:const 2
  looping thru 0 args of 8:int:const 3
  looping thru 0 args of 9:int:const 4
  looping thru 1 args of 11:int:read (%1)
  looping thru 0 args of 1:int:decl z
checking: 15:int:call ConstrainedInt_Valid_8:f(%14)
  looping thru 1 args of 15:int:call ConstrainedInt_Valid_8:f(%14)
  looping thru 1 args of 14:int:read (%1)
  looping thru 0 args of 1:int:decl z
checking: 19:int:neg (%18)
  looping thru 1 args of 19:int:neg (%18)
  looping thru 0 args of 18:int:const 1
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 2 args of 6:int:call ConstrainedInt_Valid_8:g(%4, %5)
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 5
  looping thru 0 args of 5:int:const 3
  looping thru 0 args of 7:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 4 verified, 0 errors
===== ConstrainedIntersection_Valid_1.whiley =====
checking: 9:bool:istype (%5, %6)
  looping thru 2 args of 9:bool:istype (%5, %6)
  looping thru 1 args of 5:int:read (%0)
  looping thru 0 args of 0:int:decl v
  looping thru 0 args of 6:type:const !(!ConstrainedIntersection_Valid_1:l10|!ConstrainedIntersection_Valid_1:nat)
checking: 10:int:const 1
  looping thru 0 args of 10:int:const 1
checking: 14:int:const 0
  looping thru 0 args of 14:int:const 0
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call ConstrainedIntersection_Valid_1:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 1
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:call ConstrainedIntersection_Valid_1:f(%5)
  looping thru 0 args of 5:int:const 9
  looping thru 0 args of 7:int:const 1
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:int:call ConstrainedIntersection_Valid_1:f(%10)
  looping thru 0 args of 10:int:const 10
  looping thru 0 args of 12:int:const 0
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:int:call ConstrainedIntersection_Valid_1:f(%16)
  looping thru 1 args of 16:int:neg (%15)
  looping thru 0 args of 15:int:const 1
  looping thru 0 args of 18:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_1.whiley =====
checking: 10:int[]:arrinit (%9)
  looping thru 1 args of 10:int[]:arrinit (%9)
  looping thru 1 args of 9:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 6:bool:eq (%3, %5)
  looping thru 2 args of 6:bool:eq (%3, %5)
  looping thru 1 args of 3:ConstrainedList_Valid_1:u8[]:read (%2)
  looping thru 1 args of 2:ConstrainedList_Valid_1:u8[]:decl bytes = 1
  looping thru 1 args of 1:ConstrainedList_Valid_1:u8[]:call ConstrainedList_Valid_1:f(%0)
  looping thru 0 args of 0:int:const 0
  looping thru 1 args of 5:int[]:arrinit (%4)
  looping thru 0 args of 4:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_11.whiley =====
checking: 16:bool:lor (%8, %15)
  looping thru 2 args of 4:bool:lteq (%2, %3)
  looping thru 0 args of 2:int:const 97
  looping thru 1 args of 3:int:read (%0)
  looping thru 0 args of 0:int:decl c
  looping thru 2 args of 7:bool:lteq (%5, %6)
  looping thru 1 args of 5:int:read (%0)
  looping thru 0 args of 0:int:decl c
  looping thru 0 args of 6:int:const 122
  looping thru 2 args of 11:bool:lteq (%9, %10)
  looping thru 0 args of 9:int:const 65
  looping thru 1 args of 10:int:read (%0)
  looping thru 0 args of 0:int:decl c
  looping thru 2 args of 14:bool:lteq (%12, %13)
  looping thru 1 args of 12:int:read (%0)
  looping thru 0 args of 0:int:decl c
  looping thru 0 args of 13:int:const 90
checking: 7:bool:lt (%3, %6)
  looping thru 2 args of 7:bool:lt (%3, %6)
  looping thru 1 args of 3:int:recfield %2 pos
  looping thru 1 args of 2:ConstrainedList_Valid_11:state:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_11:state:decl st
  looping thru 1 args of 6:int:arrlen (%5)
  looping thru 1 args of 5:int[]:recfield %4 input
  looping thru 1 args of 4:ConstrainedList_Valid_11:state:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_11:state:decl st
checking: 13:bool:call ConstrainedList_Valid_11:isLetter(%12)
  looping thru 1 args of 13:bool:call ConstrainedList_Valid_11:isLetter(%12)
conjecture: 0 <= toInt(toRecord(st)[$pos]) && toInt(toRecord(st)[$pos]) < arraylen(toRecord(st)[$input])
  looping thru 2 args of 12:int:arridx (%9, %11)
  looping thru 1 args of 9:int[]:recfield %8 input
  looping thru 1 args of 8:ConstrainedList_Valid_11:state:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_11:state:decl st
  looping thru 1 args of 11:int:recfield %10 pos
  looping thru 1 args of 10:ConstrainedList_Valid_11:state:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_11:state:decl st
checking: 18:int:arridx (%15, %17)
conjecture: 0 <= toInt(toRecord(st)[$pos]) && toInt(toRecord(st)[$pos]) < arraylen(toRecord(st)[$input])
  looping thru 2 args of 18:int:arridx (%15, %17)
  looping thru 1 args of 15:int[]:recfield %14 input
  looping thru 1 args of 14:ConstrainedList_Valid_11:state:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_11:state:decl st
  looping thru 1 args of 17:int:recfield %16 pos
  looping thru 1 args of 16:ConstrainedList_Valid_11:state:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_11:state:decl st
checking: 24:int:const 32
  looping thru 0 args of 24:int:const 32
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:call ConstrainedList_Valid_11:f(%2)
  looping thru 2 args of 2:{int[] input,int pos}:recinit (%0, %1)
  looping thru 0 args of 0:int[]:const [104,101,108,108,111]
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 4:int:const 104
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedList_Valid_12.whiley =====
checking: 3:int[]:arrinit (%2)
  looping thru 1 args of 3:int[]:arrinit (%2)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 4:bool:eq (%1, %3)
  looping thru 2 args of 4:bool:eq (%1, %3)
  looping thru 1 args of 1:int[]:call ConstrainedList_Valid_12:f(%0)
  looping thru 0 args of 0:int:const 0
  looping thru 1 args of 3:int[]:arrinit (%2)
  looping thru 0 args of 2:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_14.whiley =====
MUTATED INPUT xs : int[]
assign 1 := 1
checking: 8:int:arridx (%6, %7)
conjecture: 0 <= 0 && 0 < arraylen(xs)
  looping thru 2 args of 8:int:arridx (%6, %7)
  looping thru 1 args of 6:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 0 args of 7:int:const 0
checking: 9:int:const 1
  looping thru 0 args of 9:int:const 1
checking: 11:int[]:read (%0)
  looping thru 1 args of 11:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
checking: 10:bool:eq (%5, %9)
  looping thru 2 args of 10:bool:eq (%5, %9)
  looping thru 1 args of 5:ConstrainedList_Valid_14:wierd:call ConstrainedList_Valid_14:f(%4)
  looping thru 2 args of 4:int[]:arrinit (%1, %3)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 3:int:neg (%2)
  looping thru 0 args of 2:int:const 2
  looping thru 2 args of 9:int[]:arrinit (%6, %8)
  looping thru 0 args of 6:int:const 1
  looping thru 1 args of 8:int:neg (%7)
  looping thru 0 args of 7:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ConstrainedList_Valid_14.bpl(27,5): Error BP5003: A postcondition might not hold on this return path.
ConstrainedList_Valid_14.bpl(19,5): Related location: This is the postcondition that might not hold.
Execution trace:
    ConstrainedList_Valid_14.bpl(23,8): anon0

Boogie program verifier finished with 1 verified, 1 error
===== ConstrainedList_Valid_15.whiley =====
checking: 1:void[]:const []
  looping thru 0 args of 1:void[]:const []
checking: 2:bool:eq (%0, %1)
  looping thru 2 args of 2:bool:eq (%0, %1)
  looping thru 0 args of 0:int[]:call ConstrainedList_Valid_15:f()
  looping thru 0 args of 1:void[]:const []
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_16.whiley =====
checking: 6:int[]:read (%0)
  looping thru 1 args of 6:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
checking: 9:bool:eq (%5, %8)
  looping thru 2 args of 9:bool:eq (%5, %8)
  looping thru 1 args of 5:ConstrainedList_Valid_16:nat[]:read (%4)
  looping thru 1 args of 4:ConstrainedList_Valid_16:nat[]:decl rs = 3
  looping thru 1 args of 3:ConstrainedList_Valid_16:nat[]:call ConstrainedList_Valid_16:f(%2)
  looping thru 2 args of 2:int[]:arrgen (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
  looping thru 2 args of 8:int[]:arrgen (%6, %7)
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 7:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_17.whiley =====
checking: 8:ConstrainedList_Valid_17:nat[]:arridx (%6, %7)
conjecture: 0 <= 0 && 0 < arraylen(xs)
  looping thru 2 args of 8:ConstrainedList_Valid_17:nat[]:arridx (%6, %7)
  looping thru 1 args of 6:ConstrainedList_Valid_17:nat[][]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_17:nat[][]:decl xs
  looping thru 0 args of 7:int:const 0
checking: 16:bool:eq (%11, %15)
  looping thru 2 args of 16:bool:eq (%11, %15)
  looping thru 1 args of 11:ConstrainedList_Valid_17:nat[]:read (%10)
  looping thru 1 args of 10:ConstrainedList_Valid_17:nat[]:decl rs = 9
  looping thru 1 args of 9:ConstrainedList_Valid_17:nat[]:call ConstrainedList_Valid_17:f(%8)
  looping thru 2 args of 8:int[][]:arrinit (%3, %7)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 3 args of 7:int[]:arrinit (%4, %5, %6)
  looping thru 0 args of 4:int:const 4
  looping thru 0 args of 5:int:const 5
  looping thru 0 args of 6:int:const 6
  looping thru 3 args of 15:int[]:arrinit (%12, %13, %14)
  looping thru 0 args of 12:int:const 1
  looping thru 0 args of 13:int:const 2
  looping thru 0 args of 14:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_18.whiley =====
checking: 16:ConstrainedList_Valid_18:nat[]:read (%0)
  looping thru 1 args of 16:ConstrainedList_Valid_18:nat[]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_18:nat[]:decl xs
checking: 11:bool:eq (%6, %10)
  looping thru 2 args of 11:bool:eq (%6, %10)
  looping thru 1 args of 6:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl rs = 4
  looping thru 1 args of 4:int[]:call ConstrainedList_Valid_18:f(%3)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 3 args of 10:int[]:arrinit (%7, %8, %9)
  looping thru 0 args of 7:int:const 1
  looping thru 0 args of 8:int:const 2
  looping thru 0 args of 9:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ConstrainedList_Valid_18.bpl(24,5): Error BP5003: A postcondition might not hold on this return path.
ConstrainedList_Valid_18.bpl(20,5): Related location: This is the postcondition that might not hold.
Execution trace:
    ConstrainedList_Valid_18.bpl(23,8): anon0

Boogie program verifier finished with 1 verified, 1 error
===== ConstrainedList_Valid_19.whiley =====
checking: 2:ConstrainedList_Valid_19:nat[]:read (%0)
  looping thru 1 args of 2:ConstrainedList_Valid_19:nat[]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_19:nat[]:decl xs
checking: 3:ConstrainedList_Valid_19:nat[]:call ConstrainedList_Valid_19:g(%2)
  looping thru 1 args of 3:ConstrainedList_Valid_19:nat[]:call ConstrainedList_Valid_19:g(%2)
  looping thru 1 args of 2:ConstrainedList_Valid_19:nat[]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_19:nat[]:decl xs
checking: 11:bool:eq (%6, %10)
  looping thru 2 args of 11:bool:eq (%6, %10)
  looping thru 1 args of 6:ConstrainedList_Valid_19:nat[]:read (%5)
  looping thru 1 args of 5:ConstrainedList_Valid_19:nat[]:decl rs = 4
  looping thru 1 args of 4:ConstrainedList_Valid_19:nat[]:call ConstrainedList_Valid_19:f(%3)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 3 args of 10:int[]:arrinit (%7, %8, %9)
  looping thru 0 args of 7:int:const 1
  looping thru 0 args of 8:int:const 2
  looping thru 0 args of 9:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedList_Valid_2.whiley =====
mangle abs : function(int[],ConstrainedList_Valid_2:nat)->(ConstrainedList_Valid_2:nat[]) to abs$2
mangle abs : function(int)->(ConstrainedList_Valid_2:nat) to abs$3
checking: 8:ConstrainedList_Valid_2:nat[]:call ConstrainedList_Valid_2:abs(%6, %7)
  looping thru 2 args of 8:ConstrainedList_Valid_2:nat[]:call ConstrainedList_Valid_2:abs(%6, %7)
  looping thru 1 args of 6:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 0 args of 7:int:const 0
MUTATED INPUT items : int[]
checking: 20:bool:eq (%17, %19)
  looping thru 2 args of 20:bool:eq (%17, %19)
  looping thru 1 args of 17:ConstrainedList_Valid_2:nat:read (%1)
  looping thru 0 args of 1:ConstrainedList_Valid_2:nat:decl index
  looping thru 1 args of 19:int:arrlen (%18)
  looping thru 1 args of 18:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
checking: 21:int[]:read (%0)
  looping thru 1 args of 21:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
assign 1 := 1
checking: 26:int:arridx (%24, %25)
conjecture: 0 <= toInt(index) && toInt(index) < arraylen(items)
  looping thru 2 args of 26:int:arridx (%24, %25)
  looping thru 1 args of 24:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 1 args of 25:ConstrainedList_Valid_2:nat:read (%1)
  looping thru 0 args of 1:ConstrainedList_Valid_2:nat:decl index
checking: 30:ConstrainedList_Valid_2:nat:call ConstrainedList_Valid_2:abs(%29)
  looping thru 1 args of 30:ConstrainedList_Valid_2:nat:call ConstrainedList_Valid_2:abs(%29)
conjecture: 0 <= toInt(index) && toInt(index) < arraylen(items)
  looping thru 2 args of 29:int:arridx (%27, %28)
  looping thru 1 args of 27:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 1 args of 28:ConstrainedList_Valid_2:nat:read (%1)
  looping thru 0 args of 1:ConstrainedList_Valid_2:nat:decl index
checking: 36:ConstrainedList_Valid_2:nat[]:call ConstrainedList_Valid_2:abs(%32, %35)
  looping thru 2 args of 36:ConstrainedList_Valid_2:nat[]:call ConstrainedList_Valid_2:abs(%32, %35)
  looping thru 1 args of 32:int|ConstrainedList_Valid_2:nat[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 2 args of 35:int:add (%33, %34)
  looping thru 1 args of 33:ConstrainedList_Valid_2:nat:read (%1)
  looping thru 0 args of 1:ConstrainedList_Valid_2:nat:decl index
  looping thru 0 args of 34:int:const 1
checking: 4:bool:gteq (%2, %3)
  looping thru 2 args of 4:bool:gteq (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 3:int:const 0
checking: 5:int:read (%0)
  looping thru 1 args of 5:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 9:int:neg (%8)
  looping thru 1 args of 9:int:neg (%8)
  looping thru 1 args of 8:int:read (%0)
  looping thru 0 args of 0:int:decl x
assign 1 := 1
checking: 11:int[]:read (%10)
  looping thru 1 args of 11:int[]:read (%10)
  looping thru 1 args of 10:ConstrainedList_Valid_2:nat[]:decl xs = 9
  looping thru 6 args of 9:int[]:arrinit (%0, %2, %4, %5, %7, %8)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 2:int:neg (%1)
  looping thru 0 args of 1:int:const 3
  looping thru 1 args of 4:int:neg (%3)
  looping thru 0 args of 3:int:const 5
  looping thru 0 args of 5:int:const 7
  looping thru 1 args of 7:int:neg (%6)
  looping thru 0 args of 6:int:const 9
  looping thru 0 args of 8:int:const 11
checking: 13:ConstrainedList_Valid_2:nat[]:call ConstrainedList_Valid_2:abs(%12)
  looping thru 1 args of 13:ConstrainedList_Valid_2:nat[]:call ConstrainedList_Valid_2:abs(%12)
  looping thru 1 args of 12:int[]:read (%10)
  looping thru 1 args of 10:ConstrainedList_Valid_2:nat[]:decl xs = 9
  looping thru 6 args of 9:int[]:arrinit (%0, %2, %4, %5, %7, %8)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 2:int:neg (%1)
  looping thru 0 args of 1:int:const 3
  looping thru 1 args of 4:int:neg (%3)
  looping thru 0 args of 3:int:const 5
  looping thru 0 args of 5:int:const 7
  looping thru 1 args of 7:int:neg (%6)
  looping thru 0 args of 6:int:const 9
  looping thru 0 args of 8:int:const 11
checking: 23:bool:eq (%15, %22)
  looping thru 2 args of 23:bool:eq (%15, %22)
  looping thru 1 args of 15:ConstrainedList_Valid_2:nat[]:read (%10)
  looping thru 1 args of 10:ConstrainedList_Valid_2:nat[]:decl xs = 9
  looping thru 6 args of 9:int[]:arrinit (%0, %2, %4, %5, %7, %8)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 2:int:neg (%1)
  looping thru 0 args of 1:int:const 3
  looping thru 1 args of 4:int:neg (%3)
  looping thru 0 args of 3:int:const 5
  looping thru 0 args of 5:int:const 7
  looping thru 1 args of 7:int:neg (%6)
  looping thru 0 args of 6:int:const 9
  looping thru 0 args of 8:int:const 11
  looping thru 6 args of 22:int[]:arrinit (%16, %17, %18, %19, %20, %21)
  looping thru 0 args of 16:int:const 1
  looping thru 0 args of 17:int:const 3
  looping thru 0 args of 18:int:const 5
  looping thru 0 args of 19:int:const 7
  looping thru 0 args of 20:int:const 9
  looping thru 0 args of 21:int:const 11
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ConstrainedList_Valid_2.bpl(48,9): Error BP5003: A postcondition might not hold on this return path.
ConstrainedList_Valid_2.bpl(41,5): Related location: This is the postcondition that might not hold.
Execution trace:
    ConstrainedList_Valid_2.bpl(45,11): anon0
    ConstrainedList_Valid_2.bpl(47,11): anon3_Then

Boogie program verifier finished with 3 verified, 1 error
===== ConstrainedList_Valid_20.whiley =====
checking: 17:bool:eq (%14, %16)
  looping thru 2 args of 17:bool:eq (%14, %16)
  looping thru 1 args of 14:int:read (%1)
  looping thru 0 args of 1:int:decl i
  looping thru 1 args of 16:int:arrlen (%15)
  looping thru 1 args of 15:ConstrainedList_Valid_20:nat[]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_20:nat[]:decl ls
checking: 18:int:const 0
  looping thru 0 args of 18:int:const 0
checking: 23:ConstrainedList_Valid_20:nat:arridx (%21, %22)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(ls)
  looping thru 2 args of 23:ConstrainedList_Valid_20:nat:arridx (%21, %22)
  looping thru 1 args of 21:ConstrainedList_Valid_20:nat[]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_20:nat[]:decl ls
  looping thru 1 args of 22:int:read (%1)
  looping thru 0 args of 1:int:decl i
checking: 12:bool:eq (%10, %11)
  looping thru 2 args of 12:bool:eq (%10, %11)
  looping thru 2 args of 10:int:call ConstrainedList_Valid_20:get(%8, %9)
  looping thru 1 args of 8:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl xs = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 3
  looping thru 0 args of 2:int:const 5
  looping thru 0 args of 3:int:const 7
  looping thru 0 args of 4:int:const 9
  looping thru 0 args of 5:int:const 11
  looping thru 0 args of 9:int:const 0
  looping thru 0 args of 11:int:const 1
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 2 args of 16:int:call ConstrainedList_Valid_20:get(%14, %15)
  looping thru 1 args of 14:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl xs = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 3
  looping thru 0 args of 2:int:const 5
  looping thru 0 args of 3:int:const 7
  looping thru 0 args of 4:int:const 9
  looping thru 0 args of 5:int:const 11
  looping thru 0 args of 15:int:const 1
  looping thru 0 args of 17:int:const 3
checking: 24:bool:eq (%22, %23)
  looping thru 2 args of 24:bool:eq (%22, %23)
  looping thru 2 args of 22:int:call ConstrainedList_Valid_20:get(%20, %21)
  looping thru 1 args of 20:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl xs = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 3
  looping thru 0 args of 2:int:const 5
  looping thru 0 args of 3:int:const 7
  looping thru 0 args of 4:int:const 9
  looping thru 0 args of 5:int:const 11
  looping thru 0 args of 21:int:const 2
  looping thru 0 args of 23:int:const 5
checking: 30:bool:eq (%28, %29)
  looping thru 2 args of 30:bool:eq (%28, %29)
  looping thru 2 args of 28:int:call ConstrainedList_Valid_20:get(%26, %27)
  looping thru 1 args of 26:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl xs = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 3
  looping thru 0 args of 2:int:const 5
  looping thru 0 args of 3:int:const 7
  looping thru 0 args of 4:int:const 9
  looping thru 0 args of 5:int:const 11
  looping thru 0 args of 27:int:const 3
  looping thru 0 args of 29:int:const 7
checking: 36:bool:eq (%34, %35)
  looping thru 2 args of 36:bool:eq (%34, %35)
  looping thru 2 args of 34:int:call ConstrainedList_Valid_20:get(%32, %33)
  looping thru 1 args of 32:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl xs = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 3
  looping thru 0 args of 2:int:const 5
  looping thru 0 args of 3:int:const 7
  looping thru 0 args of 4:int:const 9
  looping thru 0 args of 5:int:const 11
  looping thru 0 args of 33:int:const 4
  looping thru 0 args of 35:int:const 9
checking: 42:bool:eq (%40, %41)
  looping thru 2 args of 42:bool:eq (%40, %41)
  looping thru 2 args of 40:int:call ConstrainedList_Valid_20:get(%38, %39)
  looping thru 1 args of 38:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl xs = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 3
  looping thru 0 args of 2:int:const 5
  looping thru 0 args of 3:int:const 7
  looping thru 0 args of 4:int:const 9
  looping thru 0 args of 5:int:const 11
  looping thru 0 args of 39:int:const 5
  looping thru 0 args of 41:int:const 11
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_21.whiley =====
checking: 45:bool:lt (%42, %44)
  looping thru 2 args of 45:bool:lt (%42, %44)
  looping thru 1 args of 42:int:read (%24)
  looping thru 1 args of 24:int:decl i = 23
  looping thru 0 args of 23:int:const 0
  looping thru 1 args of 44:int:arrlen (%43)
  looping thru 1 args of 43:ConstrainedList_Valid_21:nat[]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_21:nat[]:decl coins
assign 1 := 1
checking: 52:int:arridx (%50, %51)
conjecture: 0 <= toInt(coin) && toInt(coin) < arraylen(cash)
  looping thru 2 args of 52:int:arridx (%50, %51)
  looping thru 1 args of 50:int[]:read (%22)
  looping thru 1 args of 22:int[]:decl cash = 21
  looping thru 8 args of 21:int[]:arrinit (%13, %14, %15, %16, %17, %18, %19, %20)
  looping thru 0 args of 13:int:const 0
  looping thru 0 args of 14:int:const 0
  looping thru 0 args of 15:int:const 0
  looping thru 0 args of 16:int:const 0
  looping thru 0 args of 17:int:const 0
  looping thru 0 args of 18:int:const 0
  looping thru 0 args of 19:int:const 0
  looping thru 0 args of 20:int:const 0
  looping thru 1 args of 51:ConstrainedList_Valid_21:nat:read (%49)
  looping thru 1 args of 49:ConstrainedList_Valid_21:nat:decl coin = 48
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(coins)
  looping thru 2 args of 48:ConstrainedList_Valid_21:nat:arridx (%46, %47)
  looping thru 1 args of 46:ConstrainedList_Valid_21:nat[]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_21:nat[]:decl coins
  looping thru 1 args of 47:int:read (%24)
  looping thru 1 args of 24:int:decl i = 23
  looping thru 0 args of 23:int:const 0
checking: 57:int:add (%55, %56)
  looping thru 2 args of 57:int:add (%55, %56)
conjecture: 0 <= toInt(coin) && toInt(coin) < arraylen(cash)
  looping thru 2 args of 55:int:arridx (%53, %54)
  looping thru 1 args of 53:int[]:read (%22)
  looping thru 1 args of 22:int[]:decl cash = 21
  looping thru 8 args of 21:int[]:arrinit (%13, %14, %15, %16, %17, %18, %19, %20)
  looping thru 0 args of 13:int:const 0
  looping thru 0 args of 14:int:const 0
  looping thru 0 args of 15:int:const 0
  looping thru 0 args of 16:int:const 0
  looping thru 0 args of 17:int:const 0
  looping thru 0 args of 18:int:const 0
  looping thru 0 args of 19:int:const 0
  looping thru 0 args of 20:int:const 0
  looping thru 1 args of 54:ConstrainedList_Valid_21:nat:read (%49)
  looping thru 1 args of 49:ConstrainedList_Valid_21:nat:decl coin = 48
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(coins)
  looping thru 2 args of 48:ConstrainedList_Valid_21:nat:arridx (%46, %47)
  looping thru 1 args of 46:ConstrainedList_Valid_21:nat[]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_21:nat[]:decl coins
  looping thru 1 args of 47:int:read (%24)
  looping thru 1 args of 24:int:decl i = 23
  looping thru 0 args of 23:int:const 0
  looping thru 0 args of 56:int:const 1
assign 1 := 1
checking: 59:int:read (%24)
  looping thru 1 args of 59:int:read (%24)
  looping thru 1 args of 24:int:decl i = 23
  looping thru 0 args of 23:int:const 0
checking: 62:int:add (%60, %61)
  looping thru 2 args of 62:int:add (%60, %61)
  looping thru 1 args of 60:int:read (%24)
  looping thru 1 args of 24:int:decl i = 23
  looping thru 0 args of 23:int:const 0
  looping thru 0 args of 61:int:const 1
checking: 66:int[]:read (%22)
  looping thru 1 args of 66:int[]:read (%22)
  looping thru 1 args of 22:int[]:decl cash = 21
  looping thru 8 args of 21:int[]:arrinit (%13, %14, %15, %16, %17, %18, %19, %20)
  looping thru 0 args of 13:int:const 0
  looping thru 0 args of 14:int:const 0
  looping thru 0 args of 15:int:const 0
  looping thru 0 args of 16:int:const 0
  looping thru 0 args of 17:int:const 0
  looping thru 0 args of 18:int:const 0
  looping thru 0 args of 19:int:const 0
  looping thru 0 args of 20:int:const 0
checking: 15:bool:eq (%5, %14)
  looping thru 2 args of 15:bool:eq (%5, %14)
  looping thru 1 args of 5:ConstrainedList_Valid_21:Cash:read (%4)
  looping thru 1 args of 4:ConstrainedList_Valid_21:Cash:decl cash = 3
  looping thru 1 args of 3:ConstrainedList_Valid_21:Cash:call ConstrainedList_Valid_21:Cash(%2)
  looping thru 2 args of 2:int[]:arrinit (%0, %1)
  looping thru 0 args of 0:int:const 5
  looping thru 0 args of 1:int:const 1
  looping thru 8 args of 14:int[]:arrinit (%6, %7, %8, %9, %10, %11, %12, %13)
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 7:int:const 1
  looping thru 0 args of 8:int:const 0
  looping thru 0 args of 9:int:const 0
  looping thru 0 args of 10:int:const 0
  looping thru 0 args of 11:int:const 1
  looping thru 0 args of 12:int:const 0
  looping thru 0 args of 13:int:const 0
assign 1 := 1
checking: 17:ConstrainedList_Valid_21:Cash:read (%4)
  looping thru 1 args of 17:ConstrainedList_Valid_21:Cash:read (%4)
  looping thru 1 args of 4:ConstrainedList_Valid_21:Cash:decl cash = 3
  looping thru 1 args of 3:ConstrainedList_Valid_21:Cash:call ConstrainedList_Valid_21:Cash(%2)
  looping thru 2 args of 2:int[]:arrinit (%0, %1)
  looping thru 0 args of 0:int:const 5
  looping thru 0 args of 1:int:const 1
checking: 22:ConstrainedList_Valid_21:Cash:call ConstrainedList_Valid_21:Cash(%21)
  looping thru 1 args of 22:ConstrainedList_Valid_21:Cash:call ConstrainedList_Valid_21:Cash(%21)
  looping thru 3 args of 21:int[]:arrinit (%18, %19, %20)
  looping thru 0 args of 18:int:const 6
  looping thru 0 args of 19:int:const 2
  looping thru 0 args of 20:int:const 4
checking: 34:bool:eq (%24, %33)
  looping thru 2 args of 34:bool:eq (%24, %33)
  looping thru 1 args of 24:ConstrainedList_Valid_21:Cash:read (%4)
  looping thru 1 args of 4:ConstrainedList_Valid_21:Cash:decl cash = 3
  looping thru 1 args of 3:ConstrainedList_Valid_21:Cash:call ConstrainedList_Valid_21:Cash(%2)
  looping thru 2 args of 2:int[]:arrinit (%0, %1)
  looping thru 0 args of 0:int:const 5
  looping thru 0 args of 1:int:const 1
  looping thru 8 args of 33:int[]:arrinit (%25, %26, %27, %28, %29, %30, %31, %32)
  looping thru 0 args of 25:int:const 0
  looping thru 0 args of 26:int:const 0
  looping thru 0 args of 27:int:const 1
  looping thru 0 args of 28:int:const 0
  looping thru 0 args of 29:int:const 1
  looping thru 0 args of 30:int:const 0
  looping thru 0 args of 31:int:const 1
  looping thru 0 args of 32:int:const 0
assign 1 := 1
checking: 36:ConstrainedList_Valid_21:Cash:read (%4)
  looping thru 1 args of 36:ConstrainedList_Valid_21:Cash:read (%4)
  looping thru 1 args of 4:ConstrainedList_Valid_21:Cash:decl cash = 3
  looping thru 1 args of 3:ConstrainedList_Valid_21:Cash:call ConstrainedList_Valid_21:Cash(%2)
  looping thru 2 args of 2:int[]:arrinit (%0, %1)
  looping thru 0 args of 0:int:const 5
  looping thru 0 args of 1:int:const 1
checking: 41:ConstrainedList_Valid_21:Cash:call ConstrainedList_Valid_21:Cash(%40)
  looping thru 1 args of 41:ConstrainedList_Valid_21:Cash:call ConstrainedList_Valid_21:Cash(%40)
  looping thru 3 args of 40:int[]:arrinit (%37, %38, %39)
  looping thru 0 args of 37:int:const 5
  looping thru 0 args of 38:int:const 5
  looping thru 0 args of 39:int:const 3
checking: 53:bool:eq (%43, %52)
  looping thru 2 args of 53:bool:eq (%43, %52)
  looping thru 1 args of 43:ConstrainedList_Valid_21:Cash:read (%4)
  looping thru 1 args of 4:ConstrainedList_Valid_21:Cash:decl cash = 3
  looping thru 1 args of 3:ConstrainedList_Valid_21:Cash:call ConstrainedList_Valid_21:Cash(%2)
  looping thru 2 args of 2:int[]:arrinit (%0, %1)
  looping thru 0 args of 0:int:const 5
  looping thru 0 args of 1:int:const 1
  looping thru 8 args of 52:int[]:arrinit (%44, %45, %46, %47, %48, %49, %50, %51)
  looping thru 0 args of 44:int:const 0
  looping thru 0 args of 45:int:const 0
  looping thru 0 args of 46:int:const 0
  looping thru 0 args of 47:int:const 1
  looping thru 0 args of 48:int:const 0
  looping thru 0 args of 49:int:const 2
  looping thru 0 args of 50:int:const 0
  looping thru 0 args of 51:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ConstrainedList_Valid_21.bpl(61,9): Timed out on BP5004: This loop invariant might not hold on entry.
Execution trace:
    ConstrainedList_Valid_21.bpl(57,10): anon0
ConstrainedList_Valid_21.bpl(61,9): Timed out on BP5005: This loop invariant might not be maintained by the loop.
Execution trace:
    ConstrainedList_Valid_21.bpl(57,10): anon0
    ConstrainedList_Valid_21.bpl(59,5): anon3_LoopHead
    ConstrainedList_Valid_21.bpl(63,14): anon3_LoopBody
ConstrainedList_Valid_21.bpl(64,9): Timed out on BP5001: This assertion might not hold.
Execution trace:
    ConstrainedList_Valid_21.bpl(57,10): anon0
    ConstrainedList_Valid_21.bpl(59,5): anon3_LoopHead
    ConstrainedList_Valid_21.bpl(63,14): anon3_LoopBody
ConstrainedList_Valid_21.bpl(65,9): Timed out on BP5001: This assertion might not hold.
Execution trace:
    ConstrainedList_Valid_21.bpl(57,10): anon0
    ConstrainedList_Valid_21.bpl(59,5): anon3_LoopHead
    ConstrainedList_Valid_21.bpl(63,14): anon3_LoopBody
ConstrainedList_Valid_21.bpl(72,5): Timed out on BP5003: A postcondition might not hold on this return path.
ConstrainedList_Valid_21.bpl(51,5): Related location: This is the postcondition that might not hold.
Execution trace:
    ConstrainedList_Valid_21.bpl(57,10): anon0
    ConstrainedList_Valid_21.bpl(59,5): anon3_LoopHead
    ConstrainedList_Valid_21.bpl(59,5): anon3_LoopDone

Boogie program verifier finished with 1 verified, 0 errors, 1 time out
===== ConstrainedList_Valid_22.whiley =====
MUTATED INPUT xs : ConstrainedList_Valid_22:nat[]
checking: 25:bool:lt (%22, %24)
  looping thru 2 args of 25:bool:lt (%22, %24)
  looping thru 1 args of 22:int:read (%5)
  looping thru 1 args of 5:int:decl j = 4
  looping thru 0 args of 4:int:const 0
  looping thru 1 args of 24:int:arrlen (%23)
  looping thru 1 args of 23:int|ConstrainedList_Valid_22:nat[]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_22:nat[]:decl xs
checking: 29:bool:lt (%26, %28)
  looping thru 2 args of 29:bool:lt (%26, %28)
  looping thru 1 args of 26:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
  looping thru 1 args of 28:int:arrlen (%27)
  looping thru 1 args of 27:int|ConstrainedList_Valid_22:nat[]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_22:nat[]:decl xs
assign 1 := 1
checking: 32:int|ConstrainedList_Valid_22:nat:arridx (%30, %31)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 32:int|ConstrainedList_Valid_22:nat:arridx (%30, %31)
  looping thru 1 args of 30:int|ConstrainedList_Valid_22:nat[]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_22:nat[]:decl xs
  looping thru 1 args of 31:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
checking: 37:int:add (%35, %36)
  looping thru 2 args of 37:int:add (%35, %36)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 35:int|ConstrainedList_Valid_22:nat:arridx (%33, %34)
  looping thru 1 args of 33:int|ConstrainedList_Valid_22:nat[]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_22:nat[]:decl xs
  looping thru 1 args of 34:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
  looping thru 0 args of 36:int:const 1
assign 1 := 1
checking: 41:int:read (%3)
  looping thru 1 args of 41:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
checking: 44:int:add (%42, %43)
  looping thru 2 args of 44:int:add (%42, %43)
  looping thru 1 args of 42:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
  looping thru 0 args of 43:int:const 1
assign 1 := 1
checking: 46:int:read (%5)
  looping thru 1 args of 46:int:read (%5)
  looping thru 1 args of 5:int:decl j = 4
  looping thru 0 args of 4:int:const 0
checking: 49:int:add (%47, %48)
  looping thru 2 args of 49:int:add (%47, %48)
  looping thru 1 args of 47:int:read (%5)
  looping thru 1 args of 5:int:decl j = 4
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 48:int:const 1
checking: 62:bool:quantifier
  looping thru 1 args of 62:bool:quantifier
  looping thru 2 args of 61:bool:gteq (%59, %60)
conjecture: 0 <= toInt(k) && toInt(k) < arraylen(xs)
  looping thru 2 args of 59:int|ConstrainedList_Valid_22:nat:arridx (%57, %58)
  looping thru 1 args of 57:int|ConstrainedList_Valid_22:nat[]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_22:nat[]:decl xs
  looping thru 1 args of 58:int:read (%56)
  looping thru 0 args of 56:int:decl k
  looping thru 0 args of 60:int:const 0
checking: 64:int|ConstrainedList_Valid_22:nat[]:read (%0)
  looping thru 1 args of 64:int|ConstrainedList_Valid_22:nat[]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_22:nat[]:decl xs
checking: 5:bool:eq (%2, %4)
  looping thru 2 args of 5:bool:eq (%2, %4)
  looping thru 1 args of 2:ConstrainedList_Valid_22:nat[]:call ConstrainedList_Valid_22:inc(%1)
  looping thru 1 args of 1:int[]:arrinit (%0)
  looping thru 0 args of 0:int:const 0
  looping thru 1 args of 4:int[]:arrinit (%3)
  looping thru 0 args of 3:int:const 1
checking: 16:bool:eq (%11, %15)
  looping thru 2 args of 16:bool:eq (%11, %15)
  looping thru 1 args of 11:ConstrainedList_Valid_22:nat[]:call ConstrainedList_Valid_22:inc(%10)
  looping thru 3 args of 10:int[]:arrinit (%7, %8, %9)
  looping thru 0 args of 7:int:const 1
  looping thru 0 args of 8:int:const 2
  looping thru 0 args of 9:int:const 3
  looping thru 3 args of 15:int[]:arrinit (%12, %13, %14)
  looping thru 0 args of 12:int:const 2
  looping thru 0 args of 13:int:const 3
  looping thru 0 args of 14:int:const 4
checking: 43:bool:eq (%30, %42)
  looping thru 2 args of 43:bool:eq (%30, %42)
  looping thru 1 args of 30:ConstrainedList_Valid_22:nat[]:call ConstrainedList_Valid_22:inc(%29)
  looping thru 11 args of 29:int[]:arrinit (%18, %19, %20, %21, %22, %23, %24, %25, %26, %27, %28)
  looping thru 0 args of 18:int:const 10
  looping thru 0 args of 19:int:const 9
  looping thru 0 args of 20:int:const 8
  looping thru 0 args of 21:int:const 7
  looping thru 0 args of 22:int:const 6
  looping thru 0 args of 23:int:const 5
  looping thru 0 args of 24:int:const 4
  looping thru 0 args of 25:int:const 3
  looping thru 0 args of 26:int:const 2
  looping thru 0 args of 27:int:const 1
  looping thru 0 args of 28:int:const 0
  looping thru 11 args of 42:int[]:arrinit (%31, %32, %33, %34, %35, %36, %37, %38, %39, %40, %41)
  looping thru 0 args of 31:int:const 11
  looping thru 0 args of 32:int:const 10
  looping thru 0 args of 33:int:const 9
  looping thru 0 args of 34:int:const 8
  looping thru 0 args of 35:int:const 7
  looping thru 0 args of 36:int:const 6
  looping thru 0 args of 37:int:const 5
  looping thru 0 args of 38:int:const 4
  looping thru 0 args of 39:int:const 3
  looping thru 0 args of 40:int:const 2
  looping thru 0 args of 41:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ConstrainedList_Valid_22.bpl(40,22): Error: undeclared identifier: k
ConstrainedList_Valid_22.bpl(40,34): Error: undeclared identifier: k
2 name resolution errors detected in ConstrainedList_Valid_22.bpl
===== ConstrainedList_Valid_23.whiley =====
checking: 37:bool:lt (%34, %36)
  looping thru 2 args of 37:bool:lt (%34, %36)
  looping thru 1 args of 34:int:read (%28)
  looping thru 1 args of 28:int:decl i = 27
  looping thru 0 args of 27:int:const 0
  looping thru 1 args of 36:int:arrlen (%35)
  looping thru 1 args of 35:ConstrainedList_Valid_23:Matrix:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_23:Matrix:decl A
checking: 55:bool:lt (%50, %54)
  looping thru 2 args of 55:bool:lt (%50, %54)
  looping thru 1 args of 50:int:read (%44)
  looping thru 1 args of 44:int:decl j = 43
  looping thru 0 args of 43:int:const 0
  looping thru 1 args of 54:int:arrlen (%53)
conjecture: 0 <= 0 && 0 < arraylen(B)
  looping thru 2 args of 53:int[]:arridx (%51, %52)
  looping thru 1 args of 51:ConstrainedList_Valid_23:Matrix:read (%1)
  looping thru 0 args of 1:ConstrainedList_Valid_23:Matrix:decl B
  looping thru 0 args of 52:int:const 0
checking: 68:bool:lt (%65, %67)
  looping thru 2 args of 68:bool:lt (%65, %67)
  looping thru 1 args of 65:int:read (%59)
  looping thru 1 args of 59:int:decl k = 58
  looping thru 0 args of 58:int:const 0
  looping thru 1 args of 67:int:arrlen (%66)
  looping thru 1 args of 66:ConstrainedList_Valid_23:Matrix:read (%1)
  looping thru 0 args of 1:ConstrainedList_Valid_23:Matrix:decl B
assign 1 := 1
checking: 69:int:read (%57)
  looping thru 1 args of 69:int:read (%57)
  looping thru 1 args of 57:int:decl r = 56
  looping thru 0 args of 56:int:const 0
checking: 82:int:add (%70, %81)
  looping thru 2 args of 82:int:add (%70, %81)
  looping thru 1 args of 70:int:read (%57)
  looping thru 1 args of 57:int:decl r = 56
  looping thru 0 args of 56:int:const 0
  looping thru 2 args of 81:int:mul (%75, %80)
conjecture: 0 <= toInt(k) && toInt(k) < arraylen(toArray(A)[toInt(i)])
  looping thru 2 args of 75:int:arridx (%73, %74)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(A)
  looping thru 2 args of 73:int[]:arridx (%71, %72)
  looping thru 1 args of 71:ConstrainedList_Valid_23:Matrix:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_23:Matrix:decl A
  looping thru 1 args of 72:int:read (%28)
  looping thru 1 args of 28:int:decl i = 27
  looping thru 0 args of 27:int:const 0
  looping thru 1 args of 74:int:read (%59)
  looping thru 1 args of 59:int:decl k = 58
  looping thru 0 args of 58:int:const 0
conjecture: 0 <= toInt(j) && toInt(j) < arraylen(toArray(B)[toInt(k)])
  looping thru 2 args of 80:int:arridx (%78, %79)
conjecture: 0 <= toInt(k) && toInt(k) < arraylen(B)
  looping thru 2 args of 78:int[]:arridx (%76, %77)
  looping thru 1 args of 76:ConstrainedList_Valid_23:Matrix:read (%1)
  looping thru 0 args of 1:ConstrainedList_Valid_23:Matrix:decl B
  looping thru 1 args of 77:int:read (%59)
  looping thru 1 args of 59:int:decl k = 58
  looping thru 0 args of 58:int:const 0
  looping thru 1 args of 79:int:read (%44)
  looping thru 1 args of 44:int:decl j = 43
  looping thru 0 args of 43:int:const 0
assign 1 := 1
checking: 84:int:read (%59)
  looping thru 1 args of 84:int:read (%59)
  looping thru 1 args of 59:int:decl k = 58
  looping thru 0 args of 58:int:const 0
checking: 87:int:add (%85, %86)
  looping thru 2 args of 87:int:add (%85, %86)
  looping thru 1 args of 85:int:read (%59)
  looping thru 1 args of 59:int:decl k = 58
  looping thru 0 args of 58:int:const 0
  looping thru 0 args of 86:int:const 1
assign 1 := 1
checking: 93:int:arridx (%91, %92)
conjecture: 0 <= toInt(j) && toInt(j) < arraylen(row)
  looping thru 2 args of 93:int:arridx (%91, %92)
  looping thru 1 args of 91:int[]:read (%42)
  looping thru 1 args of 42:int[]:decl row = 41
  looping thru 2 args of 41:int[]:arrgen (%38, %40)
  looping thru 0 args of 38:int:const 0
  looping thru 1 args of 40:int:arrlen (%39)
  looping thru 1 args of 39:ConstrainedList_Valid_23:Matrix:read (%1)
  looping thru 0 args of 1:ConstrainedList_Valid_23:Matrix:decl B
  looping thru 1 args of 92:int:read (%44)
  looping thru 1 args of 44:int:decl j = 43
  looping thru 0 args of 43:int:const 0
checking: 94:int:read (%57)
  looping thru 1 args of 94:int:read (%57)
  looping thru 1 args of 57:int:decl r = 56
  looping thru 0 args of 56:int:const 0
assign 1 := 1
checking: 96:int:read (%44)
  looping thru 1 args of 96:int:read (%44)
  looping thru 1 args of 44:int:decl j = 43
  looping thru 0 args of 43:int:const 0
checking: 99:int:add (%97, %98)
  looping thru 2 args of 99:int:add (%97, %98)
  looping thru 1 args of 97:int:read (%44)
  looping thru 1 args of 44:int:decl j = 43
  looping thru 0 args of 43:int:const 0
  looping thru 0 args of 98:int:const 1
assign 1 := 1
checking: 105:int[]:arridx (%103, %104)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(C)
  looping thru 2 args of 105:int[]:arridx (%103, %104)
  looping thru 1 args of 103:int[][]:read (%26)
  looping thru 1 args of 26:int[][]:decl C = 25
  looping thru 2 args of 25:int[][]:arrgen (%22, %24)
  looping thru 2 args of 22:int[]:arrgen (%20, %21)
  looping thru 0 args of 20:int:const 0
  looping thru 0 args of 21:int:const 0
  looping thru 1 args of 24:int:arrlen (%23)
  looping thru 1 args of 23:ConstrainedList_Valid_23:Matrix:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_23:Matrix:decl A
  looping thru 1 args of 104:int:read (%28)
  looping thru 1 args of 28:int:decl i = 27
  looping thru 0 args of 27:int:const 0
checking: 106:int[]:read (%42)
  looping thru 1 args of 106:int[]:read (%42)
  looping thru 1 args of 42:int[]:decl row = 41
  looping thru 2 args of 41:int[]:arrgen (%38, %40)
  looping thru 0 args of 38:int:const 0
  looping thru 1 args of 40:int:arrlen (%39)
  looping thru 1 args of 39:ConstrainedList_Valid_23:Matrix:read (%1)
  looping thru 0 args of 1:ConstrainedList_Valid_23:Matrix:decl B
assign 1 := 1
checking: 108:int:read (%28)
  looping thru 1 args of 108:int:read (%28)
  looping thru 1 args of 28:int:decl i = 27
  looping thru 0 args of 27:int:const 0
checking: 111:int:add (%109, %110)
  looping thru 2 args of 111:int:add (%109, %110)
  looping thru 1 args of 109:int:read (%28)
  looping thru 1 args of 28:int:decl i = 27
  looping thru 0 args of 27:int:const 0
  looping thru 0 args of 110:int:const 1
checking: 115:int[][]:read (%26)
  looping thru 1 args of 115:int[][]:read (%26)
  looping thru 1 args of 26:int[][]:decl C = 25
  looping thru 2 args of 25:int[][]:arrgen (%22, %24)
  looping thru 2 args of 22:int[]:arrgen (%20, %21)
  looping thru 0 args of 20:int:const 0
  looping thru 0 args of 21:int:const 0
  looping thru 1 args of 24:int:arrlen (%23)
  looping thru 1 args of 23:ConstrainedList_Valid_23:Matrix:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_23:Matrix:decl A
checking: 28:bool:eq (%20, %27)
  looping thru 2 args of 28:bool:eq (%20, %27)
  looping thru 1 args of 20:ConstrainedList_Valid_23:Matrix:read (%19)
  looping thru 1 args of 19:ConstrainedList_Valid_23:Matrix:decl m3 = 18
  looping thru 2 args of 18:ConstrainedList_Valid_23:Matrix:call ConstrainedList_Valid_23:run(%16, %17)
  looping thru 1 args of 16:int[][]:read (%7)
  looping thru 1 args of 7:ConstrainedList_Valid_23:Matrix:decl m1 = 6
  looping thru 2 args of 6:int[][]:arrinit (%2, %5)
  looping thru 2 args of 2:int[]:arrinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 2 args of 5:int[]:arrinit (%3, %4)
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:const 4
  looping thru 1 args of 17:int[][]:read (%15)
  looping thru 1 args of 15:ConstrainedList_Valid_23:Matrix:decl m2 = 14
  looping thru 2 args of 14:int[][]:arrinit (%10, %13)
  looping thru 2 args of 10:int[]:arrinit (%8, %9)
  looping thru 0 args of 8:int:const 5
  looping thru 0 args of 9:int:const 6
  looping thru 2 args of 13:int[]:arrinit (%11, %12)
  looping thru 0 args of 11:int:const 7
  looping thru 0 args of 12:int:const 8
  looping thru 2 args of 27:int[][]:arrinit (%23, %26)
  looping thru 2 args of 23:int[]:arrinit (%21, %22)
  looping thru 0 args of 21:int:const 19
  looping thru 0 args of 22:int:const 22
  looping thru 2 args of 26:int[]:arrinit (%24, %25)
  looping thru 0 args of 24:int:const 43
  looping thru 0 args of 25:int:const 50
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ConstrainedList_Valid_23.bpl(52,13): Error BP5001: This assertion might not hold.
Execution trace:
    ConstrainedList_Valid_23.bpl(29,7): anon0
    ConstrainedList_Valid_23.bpl(31,5): anon7_LoopHead
    ConstrainedList_Valid_23.bpl(34,13): anon7_LoopBody
    ConstrainedList_Valid_23.bpl(37,9): anon8_LoopHead
    ConstrainedList_Valid_23.bpl(40,15): anon8_LoopBody
    ConstrainedList_Valid_23.bpl(42,13): anon9_LoopHead
    ConstrainedList_Valid_23.bpl(42,13): anon9_LoopDone
ConstrainedList_Valid_23.bpl(56,9): Error BP5001: This assertion might not hold.
Execution trace:
    ConstrainedList_Valid_23.bpl(29,7): anon0
    ConstrainedList_Valid_23.bpl(31,5): anon7_LoopHead
    ConstrainedList_Valid_23.bpl(34,13): anon7_LoopBody
    ConstrainedList_Valid_23.bpl(37,9): anon8_LoopHead
    ConstrainedList_Valid_23.bpl(37,9): anon8_LoopDone
ConstrainedList_Valid_23.bpl(61,5): Error BP5003: A postcondition might not hold on this return path.
ConstrainedList_Valid_23.bpl(20,5): Related location: This is the postcondition that might not hold.
Execution trace:
    ConstrainedList_Valid_23.bpl(29,7): anon0
    ConstrainedList_Valid_23.bpl(31,5): anon7_LoopHead
    ConstrainedList_Valid_23.bpl(31,5): anon7_LoopDone

Boogie program verifier finished with 1 verified, 3 errors
===== ConstrainedList_Valid_25.whiley =====
checking: 23:int:arridx (%21, %22)
conjecture: 0 <= toInt(index) && toInt(index) < arraylen(list)
  looping thru 2 args of 23:int:arridx (%21, %22)
  looping thru 1 args of 21:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl list
  looping thru 1 args of 22:int:read (%1)
  looping thru 0 args of 1:int:decl index
checking: 29:bool:lt (%26, %28)
  looping thru 2 args of 29:bool:lt (%26, %28)
  looping thru 1 args of 26:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
  looping thru 1 args of 28:int:arrlen (%27)
  looping thru 1 args of 27:int[]:read (%9)
  looping thru 1 args of 9:int[]:decl items = 8
  looping thru 8 args of 8:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6, %7)
  looping thru 0 args of 0:int:const 5
  looping thru 0 args of 1:int:const 4
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:const 7
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 6:int:const 8
  looping thru 0 args of 7:int:const 1
checking: 36:bool:eq (%32, %35)
  looping thru 2 args of 36:bool:eq (%32, %35)
  looping thru 2 args of 32:int:call ConstrainedList_Valid_25:indexOf(%30, %31)
  looping thru 1 args of 30:int[]:read (%9)
  looping thru 1 args of 9:int[]:decl items = 8
  looping thru 8 args of 8:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6, %7)
  looping thru 0 args of 0:int:const 5
  looping thru 0 args of 1:int:const 4
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:const 7
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 6:int:const 8
  looping thru 0 args of 7:int:const 1
  looping thru 1 args of 31:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(items)
  looping thru 2 args of 35:int:arridx (%33, %34)
  looping thru 1 args of 33:int[]:read (%9)
  looping thru 1 args of 9:int[]:decl items = 8
  looping thru 8 args of 8:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6, %7)
  looping thru 0 args of 0:int:const 5
  looping thru 0 args of 1:int:const 4
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:const 7
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 6:int:const 8
  looping thru 0 args of 7:int:const 1
  looping thru 1 args of 34:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
assign 1 := 1
checking: 38:int:read (%11)
  looping thru 1 args of 38:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
checking: 41:int:add (%39, %40)
  looping thru 2 args of 41:int:add (%39, %40)
  looping thru 1 args of 39:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
  looping thru 0 args of 40:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_26.whiley =====
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 1 args of 8:int:arrlen (%7)
  looping thru 1 args of 7:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 0 args of 9:int:const 0
checking: 11:int[]:read (%0)
  looping thru 1 args of 11:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
checking: 16:int[]:arrgen (%14, %15)
  looping thru 2 args of 16:int[]:arrgen (%14, %15)
  looping thru 0 args of 14:int:const 0
  looping thru 0 args of 15:int:const 0
checking: 15:bool:eq (%11, %14)
  looping thru 2 args of 15:bool:eq (%11, %14)
  looping thru 1 args of 11:int[]:call ConstrainedList_Valid_26:f(%10)
  looping thru 1 args of 10:int[]:read (%9)
  looping thru 1 args of 9:int[]:decl items = 8
  looping thru 8 args of 8:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6, %7)
  looping thru 0 args of 0:int:const 5
  looping thru 0 args of 1:int:const 4
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:const 7
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 6:int:const 8
  looping thru 0 args of 7:int:const 1
  looping thru 2 args of 14:int[]:arrgen (%12, %13)
  looping thru 0 args of 12:int:const 0
  looping thru 0 args of 13:int:const 0
checking: 24:bool:eq (%20, %23)
  looping thru 2 args of 24:bool:eq (%20, %23)
  looping thru 1 args of 20:int[]:call ConstrainedList_Valid_26:f(%19)
  looping thru 2 args of 19:int[]:arrgen (%17, %18)
  looping thru 0 args of 17:int:const 0
  looping thru 0 args of 18:int:const 0
  looping thru 2 args of 23:int[]:arrgen (%21, %22)
  looping thru 0 args of 21:int:const 0
  looping thru 0 args of 22:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_27.whiley =====
checking: 9:bool:istype (%5, %6)
  looping thru 2 args of 9:bool:istype (%5, %6)
  looping thru 1 args of 5:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl v
  looping thru 0 args of 6:type:const ConstrainedList_Valid_27:nat[]
checking: 11:int:arrlen (%10)
  looping thru 1 args of 11:int:arrlen (%10)
  looping thru 1 args of 10:void[]:read (%7)
  looping thru 1 args of 7:void[]:alias (%0)
  looping thru 0 args of 0:int[]:decl v
checking: 15:int:const 0
  looping thru 0 args of 15:int:const 0
checking: 6:bool:eq (%4, %5)
  looping thru 2 args of 6:bool:eq (%4, %5)
  looping thru 1 args of 4:int:call ConstrainedList_Valid_27:f(%3)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 5:int:const 3
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:int:call ConstrainedList_Valid_27:f(%10)
  looping thru 1 args of 10:int[]:arrinit (%9)
  looping thru 1 args of 9:int:neg (%8)
  looping thru 0 args of 8:int:const 1
  looping thru 0 args of 12:int:const 0
checking: 22:bool:eq (%20, %21)
  looping thru 2 args of 22:bool:eq (%20, %21)
  looping thru 1 args of 20:int:call ConstrainedList_Valid_27:f(%19)
  looping thru 3 args of 19:int[]:arrinit (%15, %16, %18)
  looping thru 0 args of 15:int:const 1
  looping thru 0 args of 16:int:const 0
  looping thru 1 args of 18:int:neg (%17)
  looping thru 0 args of 17:int:const 1
  looping thru 0 args of 21:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_28.whiley =====
checking: 65:bool:eq (%62, %64)
  looping thru 2 args of 65:bool:eq (%62, %64)
  looping thru 1 args of 62:int:read (%2)
  looping thru 0 args of 2:int:decl index
  looping thru 1 args of 64:int:arrlen (%63)
  looping thru 1 args of 63:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
checking: 67:int:neg (%66)
  looping thru 1 args of 67:int:neg (%66)
  looping thru 0 args of 66:int:const 1
checking: 85:bool:land (%79, %84)
  looping thru 2 args of 79:bool:lt (%77, %78)
  looping thru 1 args of 77:int:read (%76)
  looping thru 1 args of 76:int:decl rest = 75
  looping thru 3 args of 75:int:call ConstrainedList_Valid_28:lastIndexOf(%70, %71, %74)
  looping thru 1 args of 70:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 1 args of 71:int:read (%1)
  looping thru 0 args of 1:int:decl item
  looping thru 2 args of 74:int:add (%72, %73)
  looping thru 1 args of 72:int:read (%2)
  looping thru 0 args of 2:int:decl index
  looping thru 0 args of 73:int:const 1
  looping thru 0 args of 78:int:const 0
  looping thru 2 args of 84:bool:eq (%82, %83)
conjecture: 0 <= toInt(index) && toInt(index) < arraylen(items)
  looping thru 2 args of 82:int:arridx (%80, %81)
  looping thru 1 args of 80:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 1 args of 81:int:read (%2)
  looping thru 0 args of 2:int:decl index
  looping thru 1 args of 83:int:read (%1)
  looping thru 0 args of 1:int:decl item
checking: 86:int:read (%2)
  looping thru 1 args of 86:int:read (%2)
  looping thru 0 args of 2:int:decl index
checking: 89:int:read (%76)
  looping thru 1 args of 89:int:read (%76)
  looping thru 1 args of 76:int:decl rest = 75
  looping thru 3 args of 75:int:call ConstrainedList_Valid_28:lastIndexOf(%70, %71, %74)
  looping thru 1 args of 70:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 1 args of 71:int:read (%1)
  looping thru 0 args of 1:int:decl item
  looping thru 2 args of 74:int:add (%72, %73)
  looping thru 1 args of 72:int:read (%2)
  looping thru 0 args of 2:int:decl index
  looping thru 0 args of 73:int:const 1
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 3 args of 14:int:call ConstrainedList_Valid_28:lastIndexOf(%11, %12, %13)
  looping thru 1 args of 11:int[]:read (%10)
  looping thru 1 args of 10:int[]:decl arr = 9
  looping thru 9 args of 9:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6, %7, %8)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 2
  looping thru 0 args of 4:int:const 3
  looping thru 0 args of 5:int:const 4
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 7:int:const 2
  looping thru 0 args of 8:int:const 3
  looping thru 0 args of 12:int:const 3
  looping thru 0 args of 13:int:const 0
  looping thru 0 args of 15:int:const 8
checking: 23:bool:eq (%21, %22)
  looping thru 2 args of 23:bool:eq (%21, %22)
  looping thru 3 args of 21:int:call ConstrainedList_Valid_28:lastIndexOf(%18, %19, %20)
  looping thru 1 args of 18:int[]:read (%10)
  looping thru 1 args of 10:int[]:decl arr = 9
  looping thru 9 args of 9:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6, %7, %8)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 2
  looping thru 0 args of 4:int:const 3
  looping thru 0 args of 5:int:const 4
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 7:int:const 2
  looping thru 0 args of 8:int:const 3
  looping thru 0 args of 19:int:const 4
  looping thru 0 args of 20:int:const 0
  looping thru 0 args of 22:int:const 5
checking: 32:bool:eq (%29, %31)
  looping thru 2 args of 32:bool:eq (%29, %31)
  looping thru 3 args of 29:int:call ConstrainedList_Valid_28:lastIndexOf(%25, %27, %28)
  looping thru 1 args of 25:int[]:read (%10)
  looping thru 1 args of 10:int[]:decl arr = 9
  looping thru 9 args of 9:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6, %7, %8)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 2
  looping thru 0 args of 4:int:const 3
  looping thru 0 args of 5:int:const 4
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 7:int:const 2
  looping thru 0 args of 8:int:const 3
  looping thru 1 args of 27:int:neg (%26)
  looping thru 0 args of 26:int:const 1
  looping thru 0 args of 28:int:const 0
  looping thru 1 args of 31:int:neg (%30)
  looping thru 0 args of 30:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ConstrainedList_Valid_28.bpl(37,13): Error BP5003: A postcondition might not hold on this return path.
ConstrainedList_Valid_28.bpl(23,5): Related location: This is the postcondition that might not hold.
Execution trace:
    ConstrainedList_Valid_28.bpl(28,5): anon0
    ConstrainedList_Valid_28.bpl(32,14): anon5_Else
    ConstrainedList_Valid_28.bpl(36,15): anon6_Then
ConstrainedList_Valid_28.bpl(40,13): Error BP5003: A postcondition might not hold on this return path.
ConstrainedList_Valid_28.bpl(20,5): Related location: This is the postcondition that might not hold.
Execution trace:
    ConstrainedList_Valid_28.bpl(28,5): anon0
    ConstrainedList_Valid_28.bpl(32,14): anon5_Else
    ConstrainedList_Valid_28.bpl(39,15): anon6_Else
ConstrainedList_Valid_28.bpl(40,13): Error BP5003: A postcondition might not hold on this return path.
ConstrainedList_Valid_28.bpl(21,5): Related location: This is the postcondition that might not hold.
Execution trace:
    ConstrainedList_Valid_28.bpl(28,5): anon0
    ConstrainedList_Valid_28.bpl(32,14): anon5_Else
    ConstrainedList_Valid_28.bpl(39,15): anon6_Else
ConstrainedList_Valid_28.bpl(40,13): Error BP5003: A postcondition might not hold on this return path.
ConstrainedList_Valid_28.bpl(24,5): Related location: This is the postcondition that might not hold.
Execution trace:
    ConstrainedList_Valid_28.bpl(28,5): anon0
    ConstrainedList_Valid_28.bpl(32,14): anon5_Else
    ConstrainedList_Valid_28.bpl(39,15): anon6_Else

Boogie program verifier finished with 1 verified, 4 errors
===== ConstrainedList_Valid_3.whiley =====
checking: 49:bool:lt (%47, %48)
  looping thru 2 args of 49:bool:lt (%47, %48)
  looping thru 1 args of 47:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
  looping thru 1 args of 48:ConstrainedList_Valid_3:nat:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_3:nat:decl length
assign 1 := 1
checking: 52:int:arridx (%50, %51)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(data)
  looping thru 2 args of 52:int:arridx (%50, %51)
  looping thru 1 args of 50:int[]:read (%22)
  looping thru 1 args of 22:int[]:decl data = 21
  looping thru 2 args of 21:int[]:arrgen (%19, %20)
  looping thru 0 args of 19:int:const 0
  looping thru 1 args of 20:ConstrainedList_Valid_3:nat:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_3:nat:decl length
  looping thru 1 args of 51:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
checking: 53:int:read (%1)
  looping thru 1 args of 53:int:read (%1)
  looping thru 0 args of 1:int:decl value
assign 1 := 1
checking: 55:int:read (%18)
  looping thru 1 args of 55:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
checking: 58:int:add (%56, %57)
  looping thru 2 args of 58:int:add (%56, %57)
  looping thru 1 args of 56:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
  looping thru 0 args of 57:int:const 1
checking: 62:int[]:read (%22)
  looping thru 1 args of 62:int[]:read (%22)
  looping thru 1 args of 22:int[]:decl data = 21
  looping thru 2 args of 21:int[]:arrgen (%19, %20)
  looping thru 0 args of 19:int:const 0
  looping thru 1 args of 20:ConstrainedList_Valid_3:nat:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_3:nat:decl length
checking: 6:bool:eq (%2, %5)
  looping thru 2 args of 6:bool:eq (%2, %5)
  looping thru 2 args of 2:int[]:call ConstrainedList_Valid_3:init(%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
  looping thru 2 args of 5:int[]:arrgen (%3, %4)
  looping thru 0 args of 3:int:const 0
  looping thru 0 args of 4:int:const 0
checking: 13:bool:eq (%10, %12)
  looping thru 2 args of 13:bool:eq (%10, %12)
  looping thru 2 args of 10:int[]:call ConstrainedList_Valid_3:init(%8, %9)
  looping thru 0 args of 8:int:const 1
  looping thru 0 args of 9:int:const 1
  looping thru 1 args of 12:int[]:arrinit (%11)
  looping thru 0 args of 11:int:const 1
checking: 21:bool:eq (%17, %20)
  looping thru 2 args of 21:bool:eq (%17, %20)
  looping thru 2 args of 17:int[]:call ConstrainedList_Valid_3:init(%15, %16)
  looping thru 0 args of 15:int:const 2
  looping thru 0 args of 16:int:const 2
  looping thru 2 args of 20:int[]:arrinit (%18, %19)
  looping thru 0 args of 18:int:const 2
  looping thru 0 args of 19:int:const 2
checking: 30:bool:eq (%25, %29)
  looping thru 2 args of 30:bool:eq (%25, %29)
  looping thru 2 args of 25:int[]:call ConstrainedList_Valid_3:init(%23, %24)
  looping thru 0 args of 23:int:const 3
  looping thru 0 args of 24:int:const 3
  looping thru 3 args of 29:int[]:arrinit (%26, %27, %28)
  looping thru 0 args of 26:int:const 3
  looping thru 0 args of 27:int:const 3
  looping thru 0 args of 28:int:const 3
checking: 40:bool:eq (%34, %39)
  looping thru 2 args of 40:bool:eq (%34, %39)
  looping thru 2 args of 34:int[]:call ConstrainedList_Valid_3:init(%32, %33)
  looping thru 0 args of 32:int:const 4
  looping thru 0 args of 33:int:const 4
  looping thru 4 args of 39:int[]:arrinit (%35, %36, %37, %38)
  looping thru 0 args of 35:int:const 4
  looping thru 0 args of 36:int:const 4
  looping thru 0 args of 37:int:const 4
  looping thru 0 args of 38:int:const 4
checking: 51:bool:eq (%44, %50)
  looping thru 2 args of 51:bool:eq (%44, %50)
  looping thru 2 args of 44:int[]:call ConstrainedList_Valid_3:init(%42, %43)
  looping thru 0 args of 42:int:const 5
  looping thru 0 args of 43:int:const 5
  looping thru 5 args of 50:int[]:arrinit (%45, %46, %47, %48, %49)
  looping thru 0 args of 45:int:const 5
  looping thru 0 args of 46:int:const 5
  looping thru 0 args of 47:int:const 5
  looping thru 0 args of 48:int:const 5
  looping thru 0 args of 49:int:const 5
checking: 63:bool:eq (%55, %62)
  looping thru 2 args of 63:bool:eq (%55, %62)
  looping thru 2 args of 55:int[]:call ConstrainedList_Valid_3:init(%53, %54)
  looping thru 0 args of 53:int:const 6
  looping thru 0 args of 54:int:const 6
  looping thru 6 args of 62:int[]:arrinit (%56, %57, %58, %59, %60, %61)
  looping thru 0 args of 56:int:const 6
  looping thru 0 args of 57:int:const 6
  looping thru 0 args of 58:int:const 6
  looping thru 0 args of 59:int:const 6
  looping thru 0 args of 60:int:const 6
  looping thru 0 args of 61:int:const 6
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_4.whiley =====
checking: 9:int:const 1
  looping thru 0 args of 9:int:const 1
checking: 4:int[]:arrinit (%3)
  looping thru 1 args of 4:int[]:arrinit (%3)
  looping thru 1 args of 3:int:call ConstrainedList_Valid_4:g(%2)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 6:bool:eq (%3, %5)
  looping thru 2 args of 6:bool:eq (%3, %5)
  looping thru 1 args of 3:ConstrainedList_Valid_4:i8[]:read (%2)
  looping thru 1 args of 2:int[]:decl bytes = 1
  looping thru 1 args of 1:ConstrainedList_Valid_4:i8[]:call ConstrainedList_Valid_4:f(%0)
  looping thru 0 args of 0:int:const 0
  looping thru 1 args of 5:int[]:arrinit (%4)
  looping thru 0 args of 4:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedList_Valid_5.whiley =====
checking: 8:bool:lor (%4, %7)
  looping thru 2 args of 4:bool:lteq (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 3:int:const 0
  looping thru 2 args of 7:bool:gteq (%5, %6)
  looping thru 1 args of 5:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 6:int:const 125
checking: 9:int:const 1
  looping thru 0 args of 9:int:const 1
checking: 12:int:read (%0)
  looping thru 1 args of 12:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 4:int[]:arrinit (%3)
  looping thru 1 args of 4:int[]:arrinit (%3)
  looping thru 1 args of 3:int:call ConstrainedList_Valid_5:g(%2)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 6:bool:eq (%3, %5)
  looping thru 2 args of 6:bool:eq (%3, %5)
  looping thru 1 args of 3:int[]:read (%2)
  looping thru 1 args of 2:int[]:decl bytes = 1
  looping thru 1 args of 1:int[]:call ConstrainedList_Valid_5:f(%0)
  looping thru 0 args of 0:int:const 0
  looping thru 1 args of 5:int[]:arrinit (%4)
  looping thru 0 args of 4:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedList_Valid_6.whiley =====
checking: 49:bool:lt (%46, %48)
  looping thru 2 args of 49:bool:lt (%46, %48)
  looping thru 1 args of 46:int:read (%24)
  looping thru 1 args of 24:int:decl i = 23
  looping thru 0 args of 23:int:const 0
  looping thru 1 args of 48:int:arrlen (%47)
  looping thru 1 args of 47:ConstrainedList_Valid_6:nat[]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_6:nat[]:decl coins
assign 1 := 1
checking: 56:int:arridx (%54, %55)
conjecture: 0 <= toInt(c) && toInt(c) < arraylen(cash)
  looping thru 2 args of 56:int:arridx (%54, %55)
  looping thru 1 args of 54:int[]:read (%22)
  looping thru 1 args of 22:ConstrainedList_Valid_6:Cash:decl cash = 21
  looping thru 8 args of 21:int[]:arrinit (%13, %14, %15, %16, %17, %18, %19, %20)
  looping thru 0 args of 13:int:const 0
  looping thru 0 args of 14:int:const 0
  looping thru 0 args of 15:int:const 0
  looping thru 0 args of 16:int:const 0
  looping thru 0 args of 17:int:const 0
  looping thru 0 args of 18:int:const 0
  looping thru 0 args of 19:int:const 0
  looping thru 0 args of 20:int:const 0
  looping thru 1 args of 55:ConstrainedList_Valid_6:nat:read (%53)
  looping thru 1 args of 53:int:decl c = 52
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(coins)
  looping thru 2 args of 52:ConstrainedList_Valid_6:nat:arridx (%50, %51)
  looping thru 1 args of 50:ConstrainedList_Valid_6:nat[]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_6:nat[]:decl coins
  looping thru 1 args of 51:int:read (%24)
  looping thru 1 args of 24:int:decl i = 23
  looping thru 0 args of 23:int:const 0
checking: 61:int:add (%59, %60)
  looping thru 2 args of 61:int:add (%59, %60)
conjecture: 0 <= toInt(c) && toInt(c) < arraylen(cash)
  looping thru 2 args of 59:int:arridx (%57, %58)
  looping thru 1 args of 57:int[]:read (%22)
  looping thru 1 args of 22:ConstrainedList_Valid_6:Cash:decl cash = 21
  looping thru 8 args of 21:int[]:arrinit (%13, %14, %15, %16, %17, %18, %19, %20)
  looping thru 0 args of 13:int:const 0
  looping thru 0 args of 14:int:const 0
  looping thru 0 args of 15:int:const 0
  looping thru 0 args of 16:int:const 0
  looping thru 0 args of 17:int:const 0
  looping thru 0 args of 18:int:const 0
  looping thru 0 args of 19:int:const 0
  looping thru 0 args of 20:int:const 0
  looping thru 1 args of 58:ConstrainedList_Valid_6:nat:read (%53)
  looping thru 1 args of 53:int:decl c = 52
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(coins)
  looping thru 2 args of 52:ConstrainedList_Valid_6:nat:arridx (%50, %51)
  looping thru 1 args of 50:ConstrainedList_Valid_6:nat[]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_6:nat[]:decl coins
  looping thru 1 args of 51:int:read (%24)
  looping thru 1 args of 24:int:decl i = 23
  looping thru 0 args of 23:int:const 0
  looping thru 0 args of 60:int:const 1
assign 1 := 1
checking: 63:int:read (%24)
  looping thru 1 args of 63:int:read (%24)
  looping thru 1 args of 24:int:decl i = 23
  looping thru 0 args of 23:int:const 0
checking: 66:int:add (%64, %65)
  looping thru 2 args of 66:int:add (%64, %65)
  looping thru 1 args of 64:int:read (%24)
  looping thru 1 args of 24:int:decl i = 23
  looping thru 0 args of 23:int:const 0
  looping thru 0 args of 65:int:const 1
checking: 70:int[]:read (%22)
  looping thru 1 args of 70:int[]:read (%22)
  looping thru 1 args of 22:ConstrainedList_Valid_6:Cash:decl cash = 21
  looping thru 8 args of 21:int[]:arrinit (%13, %14, %15, %16, %17, %18, %19, %20)
  looping thru 0 args of 13:int:const 0
  looping thru 0 args of 14:int:const 0
  looping thru 0 args of 15:int:const 0
  looping thru 0 args of 16:int:const 0
  looping thru 0 args of 17:int:const 0
  looping thru 0 args of 18:int:const 0
  looping thru 0 args of 19:int:const 0
  looping thru 0 args of 20:int:const 0
checking: 13:bool:eq (%3, %12)
  looping thru 2 args of 13:bool:eq (%3, %12)
  looping thru 1 args of 3:ConstrainedList_Valid_6:Cash:call ConstrainedList_Valid_6:Cash(%2)
  looping thru 2 args of 2:int[]:arrinit (%0, %1)
  looping thru 0 args of 0:int:const 5
  looping thru 0 args of 1:int:const 1
  looping thru 8 args of 12:int[]:arrinit (%4, %5, %6, %7, %8, %9, %10, %11)
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 5:int:const 1
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 8:int:const 0
  looping thru 0 args of 9:int:const 1
  looping thru 0 args of 10:int:const 0
  looping thru 0 args of 11:int:const 0
checking: 29:bool:eq (%19, %28)
  looping thru 2 args of 29:bool:eq (%19, %28)
  looping thru 1 args of 19:ConstrainedList_Valid_6:Cash:call ConstrainedList_Valid_6:Cash(%18)
  looping thru 3 args of 18:int[]:arrinit (%15, %16, %17)
  looping thru 0 args of 15:int:const 6
  looping thru 0 args of 16:int:const 2
  looping thru 0 args of 17:int:const 4
  looping thru 8 args of 28:int[]:arrinit (%20, %21, %22, %23, %24, %25, %26, %27)
  looping thru 0 args of 20:int:const 0
  looping thru 0 args of 21:int:const 0
  looping thru 0 args of 22:int:const 1
  looping thru 0 args of 23:int:const 0
  looping thru 0 args of 24:int:const 1
  looping thru 0 args of 25:int:const 0
  looping thru 0 args of 26:int:const 1
  looping thru 0 args of 27:int:const 0
checking: 45:bool:eq (%35, %44)
  looping thru 2 args of 45:bool:eq (%35, %44)
  looping thru 1 args of 35:ConstrainedList_Valid_6:Cash:call ConstrainedList_Valid_6:Cash(%34)
  looping thru 3 args of 34:int[]:arrinit (%31, %32, %33)
  looping thru 0 args of 31:int:const 5
  looping thru 0 args of 32:int:const 5
  looping thru 0 args of 33:int:const 3
  looping thru 8 args of 44:int[]:arrinit (%36, %37, %38, %39, %40, %41, %42, %43)
  looping thru 0 args of 36:int:const 0
  looping thru 0 args of 37:int:const 0
  looping thru 0 args of 38:int:const 0
  looping thru 0 args of 39:int:const 1
  looping thru 0 args of 40:int:const 0
  looping thru 0 args of 41:int:const 2
  looping thru 0 args of 42:int:const 0
  looping thru 0 args of 43:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_7.whiley =====
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
conjecture: 0 <= 0 && 0 < arraylen(x)
  looping thru 2 args of 14:int:arridx (%12, %13)
  looping thru 1 args of 12:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl x
  looping thru 0 args of 13:int:const 0
  looping thru 0 args of 15:int:const 0
checking: 18:int[]:read (%0)
  looping thru 1 args of 18:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl x
checking: 15:bool:gt (%13, %14)
  looping thru 2 args of 15:bool:gt (%13, %14)
  looping thru 1 args of 13:int:arrlen (%12)
  looping thru 1 args of 12:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl x
  looping thru 0 args of 14:int:const 0
checking: 17:int[]:read (%0)
  looping thru 1 args of 17:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl x
checking: 9:bool:eq (%4, %8)
  looping thru 2 args of 9:bool:eq (%4, %8)
  looping thru 1 args of 4:int[]:call ConstrainedList_Valid_7:f(%3)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 2:int:const 2
  looping thru 3 args of 8:int[]:arrinit (%5, %6, %7)
  looping thru 0 args of 5:int:const 0
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 7:int:const 2
checking: 16:bool:eq (%13, %15)
  looping thru 2 args of 16:bool:eq (%13, %15)
  looping thru 1 args of 13:int[]:call ConstrainedList_Valid_7:g(%12)
  looping thru 1 args of 12:int[]:arrinit (%11)
  looping thru 0 args of 11:int:const 0
  looping thru 1 args of 15:int[]:arrinit (%14)
  looping thru 0 args of 14:int:const 0
checking: 27:bool:eq (%22, %26)
  looping thru 2 args of 27:bool:eq (%22, %26)
  looping thru 1 args of 22:int[]:call ConstrainedList_Valid_7:g(%21)
  looping thru 3 args of 21:int[]:arrinit (%18, %19, %20)
  looping thru 0 args of 18:int:const 0
  looping thru 0 args of 19:int:const 1
  looping thru 0 args of 20:int:const 2
  looping thru 3 args of 26:int[]:arrinit (%23, %24, %25)
  looping thru 0 args of 23:int:const 0
  looping thru 0 args of 24:int:const 1
  looping thru 0 args of 25:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedList_Valid_8.whiley =====
MUTATED INPUT list : ConstrainedList_Valid_8:nat[]
assign 1 := 1
checking: 10:ConstrainedList_Valid_8:nat:arridx (%8, %9)
conjecture: 0 <= toInt(index) && toInt(index) < arraylen(list)
  looping thru 2 args of 10:ConstrainedList_Valid_8:nat:arridx (%8, %9)
  looping thru 1 args of 8:ConstrainedList_Valid_8:nat[]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_8:nat[]:decl list
  looping thru 1 args of 9:ConstrainedList_Valid_8:nat:read (%1)
  looping thru 0 args of 1:ConstrainedList_Valid_8:nat:decl index
checking: 11:ConstrainedList_Valid_8:nat:read (%2)
  looping thru 1 args of 11:ConstrainedList_Valid_8:nat:read (%2)
  looping thru 0 args of 2:ConstrainedList_Valid_8:nat:decl value
checking: 13:ConstrainedList_Valid_8:nat[]:read (%0)
  looping thru 1 args of 13:ConstrainedList_Valid_8:nat[]:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_8:nat[]:decl list
assign 1 := 1
checking: 6:int[]:read (%5)
  looping thru 1 args of 6:int[]:read (%5)
  looping thru 1 args of 5:ConstrainedList_Valid_8:nat[]:decl xs = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
checking: 10:ConstrainedList_Valid_8:nat[]:call ConstrainedList_Valid_8:update(%7, %8, %9)
  looping thru 3 args of 10:ConstrainedList_Valid_8:nat[]:call ConstrainedList_Valid_8:update(%7, %8, %9)
  looping thru 1 args of 7:int[]:read (%5)
  looping thru 1 args of 5:ConstrainedList_Valid_8:nat[]:decl xs = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 8:int:const 0
  looping thru 0 args of 9:int:const 2
assign 1 := 1
checking: 12:ConstrainedList_Valid_8:nat[]:read (%5)
  looping thru 1 args of 12:ConstrainedList_Valid_8:nat[]:read (%5)
  looping thru 1 args of 5:ConstrainedList_Valid_8:nat[]:decl xs = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
checking: 16:ConstrainedList_Valid_8:nat[]:call ConstrainedList_Valid_8:update(%13, %14, %15)
  looping thru 3 args of 16:ConstrainedList_Valid_8:nat[]:call ConstrainedList_Valid_8:update(%13, %14, %15)
  looping thru 1 args of 13:ConstrainedList_Valid_8:nat[]:read (%5)
  looping thru 1 args of 5:ConstrainedList_Valid_8:nat[]:decl xs = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 14:int:const 1
  looping thru 0 args of 15:int:const 3
assign 1 := 1
checking: 18:ConstrainedList_Valid_8:nat[]:read (%5)
  looping thru 1 args of 18:ConstrainedList_Valid_8:nat[]:read (%5)
  looping thru 1 args of 5:ConstrainedList_Valid_8:nat[]:decl xs = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
checking: 22:ConstrainedList_Valid_8:nat[]:call ConstrainedList_Valid_8:update(%19, %20, %21)
  looping thru 3 args of 22:ConstrainedList_Valid_8:nat[]:call ConstrainedList_Valid_8:update(%19, %20, %21)
  looping thru 1 args of 19:ConstrainedList_Valid_8:nat[]:read (%5)
  looping thru 1 args of 5:ConstrainedList_Valid_8:nat[]:decl xs = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 20:int:const 2
  looping thru 0 args of 21:int:const 4
assign 1 := 1
checking: 24:ConstrainedList_Valid_8:nat[]:read (%5)
  looping thru 1 args of 24:ConstrainedList_Valid_8:nat[]:read (%5)
  looping thru 1 args of 5:ConstrainedList_Valid_8:nat[]:decl xs = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
checking: 28:ConstrainedList_Valid_8:nat[]:call ConstrainedList_Valid_8:update(%25, %26, %27)
  looping thru 3 args of 28:ConstrainedList_Valid_8:nat[]:call ConstrainedList_Valid_8:update(%25, %26, %27)
  looping thru 1 args of 25:ConstrainedList_Valid_8:nat[]:read (%5)
  looping thru 1 args of 5:ConstrainedList_Valid_8:nat[]:decl xs = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 26:int:const 3
  looping thru 0 args of 27:int:const 5
checking: 36:bool:eq (%30, %35)
  looping thru 2 args of 36:bool:eq (%30, %35)
  looping thru 1 args of 30:ConstrainedList_Valid_8:nat[]:read (%5)
  looping thru 1 args of 5:ConstrainedList_Valid_8:nat[]:decl xs = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 4 args of 35:int[]:arrinit (%31, %32, %33, %34)
  looping thru 0 args of 31:int:const 2
  looping thru 0 args of 32:int:const 3
  looping thru 0 args of 33:int:const 4
  looping thru 0 args of 34:int:const 5
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_9.whiley =====
mangle sum : function(ConstrainedList_Valid_9:posintlist)->(int) to sum$2
checking: 17:bool:eq (%14, %16)
  looping thru 2 args of 17:bool:eq (%14, %16)
  looping thru 1 args of 14:int:read (%1)
  looping thru 0 args of 1:int:decl i
  looping thru 1 args of 16:int:arrlen (%15)
  looping thru 1 args of 15:ConstrainedList_Valid_9:posintlist:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_9:posintlist:decl ls
checking: 18:int:const 0
  looping thru 0 args of 18:int:const 0
checking: 29:int:add (%23, %28)
  looping thru 2 args of 29:int:add (%23, %28)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(ls)
  looping thru 2 args of 23:int:arridx (%21, %22)
  looping thru 1 args of 21:ConstrainedList_Valid_9:posintlist:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_9:posintlist:decl ls
  looping thru 1 args of 22:int:read (%1)
  looping thru 0 args of 1:int:decl i
  looping thru 2 args of 28:int:call ConstrainedList_Valid_9:sum(%24, %27)
  looping thru 1 args of 24:ConstrainedList_Valid_9:posintlist:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_9:posintlist:decl ls
  looping thru 2 args of 27:int:add (%25, %26)
  looping thru 1 args of 25:int:read (%1)
  looping thru 0 args of 1:int:decl i
  looping thru 0 args of 26:int:const 1
checking: 7:int:call ConstrainedList_Valid_9:sum(%5, %6)
  looping thru 2 args of 7:int:call ConstrainedList_Valid_9:sum(%5, %6)
  looping thru 1 args of 5:ConstrainedList_Valid_9:posintlist:read (%0)
  looping thru 0 args of 0:ConstrainedList_Valid_9:posintlist:decl ls
  looping thru 0 args of 6:int:const 0
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 1 args of 8:int:call ConstrainedList_Valid_9:sum(%7)
  looping thru 7 args of 7:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 4:int:const 5
  looping thru 0 args of 5:int:const 6
  looping thru 0 args of 6:int:const 7
  looping thru 0 args of 9:int:const 28
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedNegation_Valid_1.whiley =====
Error compiling ConstrainedNegation_Valid_1.whiley
./ConstrainedNegation_Valid_1.whiley:7: incomparable operands: !int and int
    if x is int:
       ^^^^^^^^

===== ConstrainedNegation_Valid_2.whiley =====
Error compiling ConstrainedNegation_Valid_2.whiley
./ConstrainedNegation_Valid_2.whiley:6: branch always taken
    if v is !nat:
       ^^^^^^^^^

===== ConstrainedRecord_Valid_1.whiley =====
checking: 4:ConstrainedRecord_Valid_1:unitCode[]:arrinit (%3)
  looping thru 1 args of 4:ConstrainedRecord_Valid_1:unitCode[]:arrinit (%3)
  looping thru 1 args of 3:ConstrainedRecord_Valid_1:unitCode:recfield %2 op
  looping thru 1 args of 2:ConstrainedRecord_Valid_1:UNIT:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_1:UNIT:decl x
checking: 7:bool:eq (%4, %6)
  looping thru 2 args of 7:bool:eq (%4, %6)
  looping thru 1 args of 4:int[]:read (%3)
  looping thru 1 args of 3:int[]:decl bytes = 2
  looping thru 1 args of 2:int[]:call ConstrainedRecord_Valid_1:f(%1)
  looping thru 1 args of 1:{int op}:recinit (%0)
  looping thru 0 args of 0:int:const 0
  looping thru 1 args of 6:int[]:arrinit (%5)
  looping thru 0 args of 5:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedRecord_Valid_10.whiley =====
checking: 9:bool:istype (%5, %6)
  looping thru 2 args of 9:bool:istype (%5, %6)
  looping thru 1 args of 5:{int f}:read (%0)
  looping thru 0 args of 0:{int f}:decl v
  looping thru 0 args of 6:type:const {ConstrainedRecord_Valid_10:nat f}
checking: 11:int:recfield %10 f
  looping thru 1 args of 11:int:recfield %10 f
  looping thru 1 args of 10:{int f}:read (%7)
  looping thru 1 args of 7:{int f}:alias (%0)
  looping thru 0 args of 0:{int f}:decl v
checking: 15:int:const 0
  looping thru 0 args of 15:int:const 0
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:call ConstrainedRecord_Valid_10:f(%1)
  looping thru 1 args of 1:{int f}:recinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 3:int:const 1
checking: 11:bool:eq (%9, %10)
  looping thru 2 args of 11:bool:eq (%9, %10)
  looping thru 1 args of 9:int:call ConstrainedRecord_Valid_10:f(%8)
  looping thru 1 args of 8:{int f}:recinit (%7)
  looping thru 1 args of 7:int:neg (%6)
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 10:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedRecord_Valid_2.whiley =====
checking: 3:ConstrainedRecord_Valid_2:unitCode:recfield %2 op
  looping thru 1 args of 3:ConstrainedRecord_Valid_2:unitCode:recfield %2 op
  looping thru 1 args of 2:ConstrainedRecord_Valid_2:UNIT:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_2:UNIT:decl x
checking: 6:bool:eq (%4, %5)
  looping thru 2 args of 6:bool:eq (%4, %5)
  looping thru 1 args of 4:int:read (%3)
  looping thru 1 args of 3:int:decl bytes = 2
  looping thru 1 args of 2:int:call ConstrainedRecord_Valid_2:f(%1)
  looping thru 1 args of 1:{int op}:recinit (%0)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 5:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedRecord_Valid_3.whiley =====
checking: 6:int[]:arrinit (%3, %5)
  looping thru 2 args of 6:int[]:arrinit (%3, %5)
  looping thru 1 args of 3:int:recfield %2 op
  looping thru 1 args of 2:ConstrainedRecord_Valid_3:btup:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_3:btup:decl b
  looping thru 1 args of 5:int:recfield %4 index
  looping thru 1 args of 4:ConstrainedRecord_Valid_3:btup:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_3:btup:decl b
checking: 7:bool:eq (%3, %6)
  looping thru 2 args of 7:bool:eq (%3, %6)
  looping thru 1 args of 3:int[]:call ConstrainedRecord_Valid_3:f(%2)
  looping thru 2 args of 2:{int index,int op}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 1
  looping thru 2 args of 6:int[]:arrinit (%4, %5)
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedRecord_Valid_4.whiley =====
checking: 7:bool:eq (%5, %6)
  looping thru 2 args of 7:bool:eq (%5, %6)
  looping thru 1 args of 5:int:recfield %4 y
  looping thru 1 args of 4:{int x,int y}:read (%3)
  looping thru 1 args of 3:ConstrainedRecord_Valid_4:point:decl p = 2
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 6:int:const 1
checking: 12:bool:eq (%10, %11)
  looping thru 2 args of 12:bool:eq (%10, %11)
  looping thru 1 args of 10:int:recfield %9 x
  looping thru 1 args of 9:{int x,int y}:read (%3)
  looping thru 1 args of 3:ConstrainedRecord_Valid_4:point:decl p = 2
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 11:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ConstrainedRecord_Valid_5.whiley =====
checking: 7:bool:eq (%5, %6)
  looping thru 2 args of 7:bool:eq (%5, %6)
  looping thru 1 args of 5:int:recfield %4 y
  looping thru 1 args of 4:{int x,int y}:read (%3)
  looping thru 1 args of 3:ConstrainedRecord_Valid_5:point:decl p = 2
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 6:int:const 1
checking: 12:bool:eq (%10, %11)
  looping thru 2 args of 12:bool:eq (%10, %11)
  looping thru 1 args of 10:int:recfield %9 x
  looping thru 1 args of 9:{int x,int y}:read (%3)
  looping thru 1 args of 3:ConstrainedRecord_Valid_5:point:decl p = 2
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 11:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ConstrainedRecord_Valid_6.whiley =====
checking: 15:bool:land (%7, %14)
  looping thru 2 args of 7:bool:lt (%3, %6)
  looping thru 1 args of 3:int:recfield %2 pos
  looping thru 1 args of 2:ConstrainedRecord_Valid_6:state:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_6:state:decl st
  looping thru 1 args of 6:int:arrlen (%5)
  looping thru 1 args of 5:int[]:recfield %4 input
  looping thru 1 args of 4:ConstrainedRecord_Valid_6:state:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_6:state:decl st
  looping thru 2 args of 14:bool:eq (%12, %13)
conjecture: 0 <= toInt(toRecord(st)[$pos]) && toInt(toRecord(st)[$pos]) < arraylen(toRecord(st)[$input])
  looping thru 2 args of 12:int:arridx (%9, %11)
  looping thru 1 args of 9:int[]:recfield %8 input
  looping thru 1 args of 8:ConstrainedRecord_Valid_6:state:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_6:state:decl st
  looping thru 1 args of 11:int:recfield %10 pos
  looping thru 1 args of 10:ConstrainedRecord_Valid_6:state:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_6:state:decl st
  looping thru 0 args of 13:int:const 32
checking: 23:ConstrainedRecord_Valid_6:state:call ConstrainedRecord_Valid_6:parseWhiteSpace(%22)
  looping thru 1 args of 23:ConstrainedRecord_Valid_6:state:call ConstrainedRecord_Valid_6:parseWhiteSpace(%22)
  looping thru 2 args of 22:{int[] input,int pos}:recinit (%17, %21)
  looping thru 1 args of 17:int[]:recfield %16 input
  looping thru 1 args of 16:ConstrainedRecord_Valid_6:state:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_6:state:decl st
  looping thru 2 args of 21:int:add (%19, %20)
  looping thru 1 args of 19:int:recfield %18 pos
  looping thru 1 args of 18:ConstrainedRecord_Valid_6:state:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_6:state:decl st
  looping thru 0 args of 20:int:const 1
checking: 26:ConstrainedRecord_Valid_6:state:read (%0)
  looping thru 1 args of 26:ConstrainedRecord_Valid_6:state:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_6:state:decl st
MUTATED INPUT st : ConstrainedRecord_Valid_6:state
assign 1 := 1
checking: 2:ConstrainedRecord_Valid_6:state:read (%0)
  looping thru 1 args of 2:ConstrainedRecord_Valid_6:state:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_6:state:decl st
checking: 4:ConstrainedRecord_Valid_6:state:call ConstrainedRecord_Valid_6:parseWhiteSpace(%3)
  looping thru 1 args of 4:ConstrainedRecord_Valid_6:state:call ConstrainedRecord_Valid_6:parseWhiteSpace(%3)
  looping thru 1 args of 3:ConstrainedRecord_Valid_6:state:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_6:state:decl st
checking: 6:ConstrainedRecord_Valid_6:state:read (%0)
  looping thru 1 args of 6:ConstrainedRecord_Valid_6:state:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_6:state:decl st
checking: 16:bool:eq (%5, %15)
  looping thru 2 args of 16:bool:eq (%5, %15)
  looping thru 1 args of 5:ConstrainedRecord_Valid_6:state:call ConstrainedRecord_Valid_6:parseTerm(%4)
  looping thru 1 args of 4:{int[] input,int pos}:read (%3)
  looping thru 1 args of 3:ConstrainedRecord_Valid_6:state:decl st = 2
  looping thru 2 args of 2:{int[] input,int pos}:recinit (%0, %1)
  looping thru 0 args of 0:int[]:const [32,32,72,101,108,108,111]
  looping thru 0 args of 1:int:const 0
  looping thru 2 args of 15:{int[] input,int pos}:recinit (%13, %14)
  looping thru 7 args of 13:int[]:arrinit (%6, %7, %8, %9, %10, %11, %12)
  looping thru 0 args of 6:int:const 32
  looping thru 0 args of 7:int:const 32
  looping thru 0 args of 8:int:const 72
  looping thru 0 args of 9:int:const 101
  looping thru 0 args of 10:int:const 108
  looping thru 0 args of 11:int:const 108
  looping thru 0 args of 12:int:const 111
  looping thru 0 args of 14:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedRecord_Valid_8.whiley =====
checking: 12:{int move,int[] pieces}:recinit (%1, %11)
  looping thru 2 args of 12:{int move,int[] pieces}:recinit (%1, %11)
  looping thru 0 args of 1:int:const 0
  looping thru 9 args of 11:int[]:arrinit (%2, %3, %4, %5, %6, %7, %8, %9, %10)
  looping thru 0 args of 2:int:const 0
  looping thru 0 args of 3:int:const 0
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 5:int:const 0
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 8:int:const 0
  looping thru 0 args of 9:int:const 0
  looping thru 0 args of 10:int:const 0
checking: 7:bool:eq (%5, %6)
  looping thru 2 args of 7:bool:eq (%5, %6)
conjecture: 0 <= 0 && 0 < arraylen(toRecord(b)[$pieces])
  looping thru 2 args of 5:ConstrainedRecord_Valid_8:piece:arridx (%3, %4)
  looping thru 1 args of 3:ConstrainedRecord_Valid_8:piece[]:recfield %2 pieces
  looping thru 1 args of 2:ConstrainedRecord_Valid_8:EmptyBoard:read (%1)
  looping thru 1 args of 1:ConstrainedRecord_Valid_8:Board:decl b = 0
  looping thru 0 args of 0:ConstrainedRecord_Valid_8:EmptyBoard:call ConstrainedRecord_Valid_8:EmptyBoard()
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 6:int:const 0
checking: 14:bool:eq (%12, %13)
  looping thru 2 args of 14:bool:eq (%12, %13)
conjecture: 0 <= 1 && 1 < arraylen(toRecord(b)[$pieces])
  looping thru 2 args of 12:ConstrainedRecord_Valid_8:piece:arridx (%10, %11)
  looping thru 1 args of 10:ConstrainedRecord_Valid_8:piece[]:recfield %9 pieces
  looping thru 1 args of 9:ConstrainedRecord_Valid_8:EmptyBoard:read (%1)
  looping thru 1 args of 1:ConstrainedRecord_Valid_8:Board:decl b = 0
  looping thru 0 args of 0:ConstrainedRecord_Valid_8:EmptyBoard:call ConstrainedRecord_Valid_8:EmptyBoard()
  looping thru 0 args of 11:int:const 1
  looping thru 0 args of 13:int:const 0
checking: 21:bool:eq (%19, %20)
  looping thru 2 args of 21:bool:eq (%19, %20)
conjecture: 0 <= 8 && 8 < arraylen(toRecord(b)[$pieces])
  looping thru 2 args of 19:ConstrainedRecord_Valid_8:piece:arridx (%17, %18)
  looping thru 1 args of 17:ConstrainedRecord_Valid_8:piece[]:recfield %16 pieces
  looping thru 1 args of 16:ConstrainedRecord_Valid_8:EmptyBoard:read (%1)
  looping thru 1 args of 1:ConstrainedRecord_Valid_8:Board:decl b = 0
  looping thru 0 args of 0:ConstrainedRecord_Valid_8:EmptyBoard:call ConstrainedRecord_Valid_8:EmptyBoard()
  looping thru 0 args of 18:int:const 8
  looping thru 0 args of 20:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ConstrainedRecord_Valid_8.bpl(59,5): Error BP5001: This assertion might not hold.
Execution trace:
    ConstrainedRecord_Valid_8.bpl(58,7): anon0
ConstrainedRecord_Valid_8.bpl(60,5): Error BP5001: This assertion might not hold.
Execution trace:
    ConstrainedRecord_Valid_8.bpl(58,7): anon0
ConstrainedRecord_Valid_8.bpl(61,5): Error BP5001: This assertion might not hold.
Execution trace:
    ConstrainedRecord_Valid_8.bpl(58,7): anon0
ConstrainedRecord_Valid_8.bpl(62,5): Error BP5001: This assertion might not hold.
Execution trace:
    ConstrainedRecord_Valid_8.bpl(58,7): anon0
ConstrainedRecord_Valid_8.bpl(63,5): Error BP5001: This assertion might not hold.
Execution trace:
    ConstrainedRecord_Valid_8.bpl(58,7): anon0

Boogie program verifier finished with 1 verified, 5 errors
===== ConstrainedRecord_Valid_9.whiley =====
checking: 37:{int[][] data,ConstrainedRecord_Valid_9:nat height,ConstrainedRecord_Valid_9:nat width}:recinit (%34, %35, %36)
  looping thru 3 args of 37:{int[][] data,ConstrainedRecord_Valid_9:nat height,ConstrainedRecord_Valid_9:nat width}:recinit (%34, %35, %36)
  looping thru 1 args of 34:int[][]:read (%2)
  looping thru 0 args of 2:int[][]:decl data
  looping thru 1 args of 35:ConstrainedRecord_Valid_9:nat:read (%1)
  looping thru 0 args of 1:ConstrainedRecord_Valid_9:nat:decl height
  looping thru 1 args of 36:ConstrainedRecord_Valid_9:nat:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_9:nat:decl width
checking: 41:bool:lt (%38, %40)
  looping thru 2 args of 41:bool:lt (%38, %40)
  looping thru 1 args of 38:int:read (%27)
  looping thru 1 args of 27:int:decl i = 26
  looping thru 0 args of 26:int:const 0
  looping thru 1 args of 40:int:recfield %39 height
  looping thru 1 args of 39:ConstrainedRecord_Valid_9:Matrix:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_9:Matrix:decl A
checking: 62:bool:lt (%59, %61)
  looping thru 2 args of 62:bool:lt (%59, %61)
  looping thru 1 args of 59:int:read (%48)
  looping thru 1 args of 48:int:decl j = 47
  looping thru 0 args of 47:int:const 0
  looping thru 1 args of 61:int:recfield %60 width
  looping thru 1 args of 60:ConstrainedRecord_Valid_9:Matrix:read (%1)
  looping thru 0 args of 1:ConstrainedRecord_Valid_9:Matrix:decl B
checking: 75:bool:lt (%72, %74)
  looping thru 2 args of 75:bool:lt (%72, %74)
  looping thru 1 args of 72:int:read (%66)
  looping thru 1 args of 66:int:decl k = 65
  looping thru 0 args of 65:int:const 0
  looping thru 1 args of 74:int:recfield %73 width
  looping thru 1 args of 73:ConstrainedRecord_Valid_9:Matrix:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_9:Matrix:decl A
assign 1 := 1
checking: 76:int:read (%64)
  looping thru 1 args of 76:int:read (%64)
  looping thru 1 args of 64:int:decl r = 63
  looping thru 0 args of 63:int:const 0
checking: 91:int:add (%77, %90)
  looping thru 2 args of 91:int:add (%77, %90)
  looping thru 1 args of 77:int:read (%64)
  looping thru 1 args of 64:int:decl r = 63
  looping thru 0 args of 63:int:const 0
  looping thru 2 args of 90:int:mul (%83, %89)
conjecture: 0 <= toInt(k) && toInt(k) < arraylen(toArray(toRecord(A)[$data])[toInt(i)])
  looping thru 2 args of 83:int:arridx (%81, %82)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(toRecord(A)[$data])
  looping thru 2 args of 81:int[]:arridx (%79, %80)
  looping thru 1 args of 79:int[][]:recfield %78 data
  looping thru 1 args of 78:ConstrainedRecord_Valid_9:Matrix:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_9:Matrix:decl A
  looping thru 1 args of 80:int:read (%27)
  looping thru 1 args of 27:int:decl i = 26
  looping thru 0 args of 26:int:const 0
  looping thru 1 args of 82:int:read (%66)
  looping thru 1 args of 66:int:decl k = 65
  looping thru 0 args of 65:int:const 0
conjecture: 0 <= toInt(j) && toInt(j) < arraylen(toArray(toRecord(B)[$data])[toInt(k)])
  looping thru 2 args of 89:int:arridx (%87, %88)
conjecture: 0 <= toInt(k) && toInt(k) < arraylen(toRecord(B)[$data])
  looping thru 2 args of 87:int[]:arridx (%85, %86)
  looping thru 1 args of 85:int[][]:recfield %84 data
  looping thru 1 args of 84:ConstrainedRecord_Valid_9:Matrix:read (%1)
  looping thru 0 args of 1:ConstrainedRecord_Valid_9:Matrix:decl B
  looping thru 1 args of 86:int:read (%66)
  looping thru 1 args of 66:int:decl k = 65
  looping thru 0 args of 65:int:const 0
  looping thru 1 args of 88:int:read (%48)
  looping thru 1 args of 48:int:decl j = 47
  looping thru 0 args of 47:int:const 0
assign 1 := 1
checking: 93:int:read (%66)
  looping thru 1 args of 93:int:read (%66)
  looping thru 1 args of 66:int:decl k = 65
  looping thru 0 args of 65:int:const 0
checking: 96:int:add (%94, %95)
  looping thru 2 args of 96:int:add (%94, %95)
  looping thru 1 args of 94:int:read (%66)
  looping thru 1 args of 66:int:decl k = 65
  looping thru 0 args of 65:int:const 0
  looping thru 0 args of 95:int:const 1
assign 1 := 1
checking: 102:int:arridx (%100, %101)
conjecture: 0 <= toInt(j) && toInt(j) < arraylen(row)
  looping thru 2 args of 102:int:arridx (%100, %101)
  looping thru 1 args of 100:int[]:read (%46)
  looping thru 1 args of 46:int[]:decl row = 45
  looping thru 2 args of 45:int[]:arrgen (%42, %44)
  looping thru 0 args of 42:int:const 0
  looping thru 1 args of 44:int:recfield %43 width
  looping thru 1 args of 43:ConstrainedRecord_Valid_9:Matrix:read (%1)
  looping thru 0 args of 1:ConstrainedRecord_Valid_9:Matrix:decl B
  looping thru 1 args of 101:int:read (%48)
  looping thru 1 args of 48:int:decl j = 47
  looping thru 0 args of 47:int:const 0
checking: 103:int:read (%64)
  looping thru 1 args of 103:int:read (%64)
  looping thru 1 args of 64:int:decl r = 63
  looping thru 0 args of 63:int:const 0
assign 1 := 1
checking: 105:int:read (%48)
  looping thru 1 args of 105:int:read (%48)
  looping thru 1 args of 48:int:decl j = 47
  looping thru 0 args of 47:int:const 0
checking: 108:int:add (%106, %107)
  looping thru 2 args of 108:int:add (%106, %107)
  looping thru 1 args of 106:int:read (%48)
  looping thru 1 args of 48:int:decl j = 47
  looping thru 0 args of 47:int:const 0
  looping thru 0 args of 107:int:const 1
assign 1 := 1
checking: 114:int[]:arridx (%112, %113)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(C_data)
  looping thru 2 args of 114:int[]:arridx (%112, %113)
  looping thru 1 args of 112:int[][]:read (%25)
  looping thru 1 args of 25:int[][]:decl C_data = 24
  looping thru 2 args of 24:int[][]:arrgen (%21, %23)
  looping thru 2 args of 21:int[]:arrgen (%19, %20)
  looping thru 0 args of 19:int:const 0
  looping thru 0 args of 20:int:const 0
  looping thru 1 args of 23:int:recfield %22 height
  looping thru 1 args of 22:ConstrainedRecord_Valid_9:Matrix:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_9:Matrix:decl A
  looping thru 1 args of 113:int:read (%27)
  looping thru 1 args of 27:int:decl i = 26
  looping thru 0 args of 26:int:const 0
checking: 115:int[]:read (%46)
  looping thru 1 args of 115:int[]:read (%46)
  looping thru 1 args of 46:int[]:decl row = 45
  looping thru 2 args of 45:int[]:arrgen (%42, %44)
  looping thru 0 args of 42:int:const 0
  looping thru 1 args of 44:int:recfield %43 width
  looping thru 1 args of 43:ConstrainedRecord_Valid_9:Matrix:read (%1)
  looping thru 0 args of 1:ConstrainedRecord_Valid_9:Matrix:decl B
assign 1 := 1
checking: 117:int:read (%27)
  looping thru 1 args of 117:int:read (%27)
  looping thru 1 args of 27:int:decl i = 26
  looping thru 0 args of 26:int:const 0
checking: 120:int:add (%118, %119)
  looping thru 2 args of 120:int:add (%118, %119)
  looping thru 1 args of 118:int:read (%27)
  looping thru 1 args of 27:int:decl i = 26
  looping thru 0 args of 26:int:const 0
  looping thru 0 args of 119:int:const 1
checking: 129:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%125, %127, %128)
  looping thru 3 args of 129:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%125, %127, %128)
  looping thru 1 args of 125:int:recfield %124 width
  looping thru 1 args of 124:ConstrainedRecord_Valid_9:Matrix:read (%1)
  looping thru 0 args of 1:ConstrainedRecord_Valid_9:Matrix:decl B
  looping thru 1 args of 127:int:recfield %126 height
  looping thru 1 args of 126:ConstrainedRecord_Valid_9:Matrix:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_9:Matrix:decl A
  looping thru 1 args of 128:int[][]:read (%25)
  looping thru 1 args of 25:int[][]:decl C_data = 24
  looping thru 2 args of 24:int[][]:arrgen (%21, %23)
  looping thru 2 args of 21:int[]:arrgen (%19, %20)
  looping thru 0 args of 19:int:const 0
  looping thru 0 args of 20:int:const 0
  looping thru 1 args of 23:int:recfield %22 height
  looping thru 1 args of 22:ConstrainedRecord_Valid_9:Matrix:read (%0)
  looping thru 0 args of 0:ConstrainedRecord_Valid_9:Matrix:decl A
checking: 41:bool:eq (%28, %40)
  looping thru 2 args of 41:bool:eq (%28, %40)
  looping thru 1 args of 28:ConstrainedRecord_Valid_9:Matrix:read (%27)
  looping thru 1 args of 27:ConstrainedRecord_Valid_9:Matrix:decl m3 = 26
  looping thru 2 args of 26:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:run(%24, %25)
  looping thru 1 args of 24:ConstrainedRecord_Valid_9:Matrix:read (%11)
  looping thru 1 args of 11:ConstrainedRecord_Valid_9:Matrix:decl m1 = 10
  looping thru 3 args of 10:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%0, %1, %9)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 2
  looping thru 2 args of 9:int[][]:arrinit (%4, %8)
  looping thru 2 args of 4:int[]:arrinit (%2, %3)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 0
  looping thru 2 args of 8:int[]:arrinit (%6, %7)
  looping thru 1 args of 6:int:neg (%5)
  looping thru 0 args of 5:int:const 3
  looping thru 0 args of 7:int:const 2
  looping thru 1 args of 25:ConstrainedRecord_Valid_9:Matrix:read (%23)
  looping thru 1 args of 23:ConstrainedRecord_Valid_9:Matrix:decl m2 = 22
  looping thru 3 args of 22:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%12, %13, %21)
  looping thru 0 args of 12:int:const 2
  looping thru 0 args of 13:int:const 2
  looping thru 2 args of 21:int[][]:arrinit (%17, %20)
  looping thru 2 args of 17:int[]:arrinit (%15, %16)
  looping thru 1 args of 15:int:neg (%14)
  looping thru 0 args of 14:int:const 1
  looping thru 0 args of 16:int:const 4
  looping thru 2 args of 20:int[]:arrinit (%18, %19)
  looping thru 0 args of 18:int:const 3
  looping thru 0 args of 19:int:const 5
  looping thru 3 args of 40:{int[][] data,int height,int width}:recinit (%37, %38, %39)
  looping thru 2 args of 37:int[][]:arrinit (%32, %36)
  looping thru 2 args of 32:int[]:arrinit (%30, %31)
  looping thru 1 args of 30:int:neg (%29)
  looping thru 0 args of 29:int:const 1
  looping thru 0 args of 31:int:const 4
  looping thru 2 args of 36:int[]:arrinit (%33, %35)
  looping thru 0 args of 33:int:const 9
  looping thru 1 args of 35:int:neg (%34)
  looping thru 0 args of 34:int:const 2
  looping thru 0 args of 38:int:const 2
  looping thru 0 args of 39:int:const 2
assign 1 := 1
checking: 43:ConstrainedRecord_Valid_9:Matrix:read (%11)
  looping thru 1 args of 43:ConstrainedRecord_Valid_9:Matrix:read (%11)
  looping thru 1 args of 11:ConstrainedRecord_Valid_9:Matrix:decl m1 = 10
  looping thru 3 args of 10:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%0, %1, %9)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 2
  looping thru 2 args of 9:int[][]:arrinit (%4, %8)
  looping thru 2 args of 4:int[]:arrinit (%2, %3)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 0
  looping thru 2 args of 8:int[]:arrinit (%6, %7)
  looping thru 1 args of 6:int:neg (%5)
  looping thru 0 args of 5:int:const 3
  looping thru 0 args of 7:int:const 2
checking: 55:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%44, %45, %54)
  looping thru 3 args of 55:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%44, %45, %54)
  looping thru 0 args of 44:int:const 3
  looping thru 0 args of 45:int:const 2
  looping thru 2 args of 54:int[][]:arrinit (%49, %53)
  looping thru 3 args of 49:int[]:arrinit (%46, %47, %48)
  looping thru 0 args of 46:int:const 1
  looping thru 0 args of 47:int:const 2
  looping thru 0 args of 48:int:const 3
  looping thru 3 args of 53:int[]:arrinit (%50, %51, %52)
  looping thru 0 args of 50:int:const 4
  looping thru 0 args of 51:int:const 5
  looping thru 0 args of 52:int:const 6
assign 1 := 1
checking: 57:ConstrainedRecord_Valid_9:Matrix:read (%23)
  looping thru 1 args of 57:ConstrainedRecord_Valid_9:Matrix:read (%23)
  looping thru 1 args of 23:ConstrainedRecord_Valid_9:Matrix:decl m2 = 22
  looping thru 3 args of 22:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%12, %13, %21)
  looping thru 0 args of 12:int:const 2
  looping thru 0 args of 13:int:const 2
  looping thru 2 args of 21:int[][]:arrinit (%17, %20)
  looping thru 2 args of 17:int[]:arrinit (%15, %16)
  looping thru 1 args of 15:int:neg (%14)
  looping thru 0 args of 14:int:const 1
  looping thru 0 args of 16:int:const 4
  looping thru 2 args of 20:int[]:arrinit (%18, %19)
  looping thru 0 args of 18:int:const 3
  looping thru 0 args of 19:int:const 5
checking: 70:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%58, %59, %69)
  looping thru 3 args of 70:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%58, %59, %69)
  looping thru 0 args of 58:int:const 2
  looping thru 0 args of 59:int:const 3
  looping thru 3 args of 69:int[][]:arrinit (%62, %65, %68)
  looping thru 2 args of 62:int[]:arrinit (%60, %61)
  looping thru 0 args of 60:int:const 1
  looping thru 0 args of 61:int:const 2
  looping thru 2 args of 65:int[]:arrinit (%63, %64)
  looping thru 0 args of 63:int:const 3
  looping thru 0 args of 64:int:const 4
  looping thru 2 args of 68:int[]:arrinit (%66, %67)
  looping thru 0 args of 66:int:const 5
  looping thru 0 args of 67:int:const 6
assign 1 := 1
checking: 72:ConstrainedRecord_Valid_9:Matrix:read (%27)
  looping thru 1 args of 72:ConstrainedRecord_Valid_9:Matrix:read (%27)
  looping thru 1 args of 27:ConstrainedRecord_Valid_9:Matrix:decl m3 = 26
  looping thru 2 args of 26:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:run(%24, %25)
  looping thru 1 args of 24:ConstrainedRecord_Valid_9:Matrix:read (%11)
  looping thru 1 args of 11:ConstrainedRecord_Valid_9:Matrix:decl m1 = 10
  looping thru 3 args of 10:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%0, %1, %9)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 2
  looping thru 2 args of 9:int[][]:arrinit (%4, %8)
  looping thru 2 args of 4:int[]:arrinit (%2, %3)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 0
  looping thru 2 args of 8:int[]:arrinit (%6, %7)
  looping thru 1 args of 6:int:neg (%5)
  looping thru 0 args of 5:int:const 3
  looping thru 0 args of 7:int:const 2
  looping thru 1 args of 25:ConstrainedRecord_Valid_9:Matrix:read (%23)
  looping thru 1 args of 23:ConstrainedRecord_Valid_9:Matrix:decl m2 = 22
  looping thru 3 args of 22:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%12, %13, %21)
  looping thru 0 args of 12:int:const 2
  looping thru 0 args of 13:int:const 2
  looping thru 2 args of 21:int[][]:arrinit (%17, %20)
  looping thru 2 args of 17:int[]:arrinit (%15, %16)
  looping thru 1 args of 15:int:neg (%14)
  looping thru 0 args of 14:int:const 1
  looping thru 0 args of 16:int:const 4
  looping thru 2 args of 20:int[]:arrinit (%18, %19)
  looping thru 0 args of 18:int:const 3
  looping thru 0 args of 19:int:const 5
checking: 75:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:run(%73, %74)
  looping thru 2 args of 75:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:run(%73, %74)
  looping thru 1 args of 73:ConstrainedRecord_Valid_9:Matrix:read (%11)
  looping thru 1 args of 11:ConstrainedRecord_Valid_9:Matrix:decl m1 = 10
  looping thru 3 args of 10:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%0, %1, %9)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 2
  looping thru 2 args of 9:int[][]:arrinit (%4, %8)
  looping thru 2 args of 4:int[]:arrinit (%2, %3)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 0
  looping thru 2 args of 8:int[]:arrinit (%6, %7)
  looping thru 1 args of 6:int:neg (%5)
  looping thru 0 args of 5:int:const 3
  looping thru 0 args of 7:int:const 2
  looping thru 1 args of 74:ConstrainedRecord_Valid_9:Matrix:read (%23)
  looping thru 1 args of 23:ConstrainedRecord_Valid_9:Matrix:decl m2 = 22
  looping thru 3 args of 22:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%12, %13, %21)
  looping thru 0 args of 12:int:const 2
  looping thru 0 args of 13:int:const 2
  looping thru 2 args of 21:int[][]:arrinit (%17, %20)
  looping thru 2 args of 17:int[]:arrinit (%15, %16)
  looping thru 1 args of 15:int:neg (%14)
  looping thru 0 args of 14:int:const 1
  looping thru 0 args of 16:int:const 4
  looping thru 2 args of 20:int[]:arrinit (%18, %19)
  looping thru 0 args of 18:int:const 3
  looping thru 0 args of 19:int:const 5
checking: 88:bool:eq (%77, %87)
  looping thru 2 args of 88:bool:eq (%77, %87)
  looping thru 1 args of 77:ConstrainedRecord_Valid_9:Matrix:read (%27)
  looping thru 1 args of 27:ConstrainedRecord_Valid_9:Matrix:decl m3 = 26
  looping thru 2 args of 26:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:run(%24, %25)
  looping thru 1 args of 24:ConstrainedRecord_Valid_9:Matrix:read (%11)
  looping thru 1 args of 11:ConstrainedRecord_Valid_9:Matrix:decl m1 = 10
  looping thru 3 args of 10:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%0, %1, %9)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 2
  looping thru 2 args of 9:int[][]:arrinit (%4, %8)
  looping thru 2 args of 4:int[]:arrinit (%2, %3)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 0
  looping thru 2 args of 8:int[]:arrinit (%6, %7)
  looping thru 1 args of 6:int:neg (%5)
  looping thru 0 args of 5:int:const 3
  looping thru 0 args of 7:int:const 2
  looping thru 1 args of 25:ConstrainedRecord_Valid_9:Matrix:read (%23)
  looping thru 1 args of 23:ConstrainedRecord_Valid_9:Matrix:decl m2 = 22
  looping thru 3 args of 22:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%12, %13, %21)
  looping thru 0 args of 12:int:const 2
  looping thru 0 args of 13:int:const 2
  looping thru 2 args of 21:int[][]:arrinit (%17, %20)
  looping thru 2 args of 17:int[]:arrinit (%15, %16)
  looping thru 1 args of 15:int:neg (%14)
  looping thru 0 args of 14:int:const 1
  looping thru 0 args of 16:int:const 4
  looping thru 2 args of 20:int[]:arrinit (%18, %19)
  looping thru 0 args of 18:int:const 3
  looping thru 0 args of 19:int:const 5
  looping thru 3 args of 87:{int[][] data,int height,int width}:recinit (%84, %85, %86)
  looping thru 2 args of 84:int[][]:arrinit (%80, %83)
  looping thru 2 args of 80:int[]:arrinit (%78, %79)
  looping thru 0 args of 78:int:const 22
  looping thru 0 args of 79:int:const 28
  looping thru 2 args of 83:int[]:arrinit (%81, %82)
  looping thru 0 args of 81:int:const 49
  looping thru 0 args of 82:int:const 64
  looping thru 0 args of 85:int:const 2
  looping thru 0 args of 86:int:const 2
assign 1 := 1
checking: 90:ConstrainedRecord_Valid_9:Matrix:read (%11)
  looping thru 1 args of 90:ConstrainedRecord_Valid_9:Matrix:read (%11)
  looping thru 1 args of 11:ConstrainedRecord_Valid_9:Matrix:decl m1 = 10
  looping thru 3 args of 10:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%0, %1, %9)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 2
  looping thru 2 args of 9:int[][]:arrinit (%4, %8)
  looping thru 2 args of 4:int[]:arrinit (%2, %3)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 0
  looping thru 2 args of 8:int[]:arrinit (%6, %7)
  looping thru 1 args of 6:int:neg (%5)
  looping thru 0 args of 5:int:const 3
  looping thru 0 args of 7:int:const 2
checking: 102:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%91, %92, %101)
  looping thru 3 args of 102:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%91, %92, %101)
  looping thru 0 args of 91:int:const 3
  looping thru 0 args of 92:int:const 2
  looping thru 2 args of 101:int[][]:arrinit (%96, %100)
  looping thru 3 args of 96:int[]:arrinit (%93, %94, %95)
  looping thru 0 args of 93:int:const 1
  looping thru 0 args of 94:int:const 2
  looping thru 0 args of 95:int:const 3
  looping thru 3 args of 100:int[]:arrinit (%97, %98, %99)
  looping thru 0 args of 97:int:const 4
  looping thru 0 args of 98:int:const 5
  looping thru 0 args of 99:int:const 6
assign 1 := 1
checking: 104:ConstrainedRecord_Valid_9:Matrix:read (%23)
  looping thru 1 args of 104:ConstrainedRecord_Valid_9:Matrix:read (%23)
  looping thru 1 args of 23:ConstrainedRecord_Valid_9:Matrix:decl m2 = 22
  looping thru 3 args of 22:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%12, %13, %21)
  looping thru 0 args of 12:int:const 2
  looping thru 0 args of 13:int:const 2
  looping thru 2 args of 21:int[][]:arrinit (%17, %20)
  looping thru 2 args of 17:int[]:arrinit (%15, %16)
  looping thru 1 args of 15:int:neg (%14)
  looping thru 0 args of 14:int:const 1
  looping thru 0 args of 16:int:const 4
  looping thru 2 args of 20:int[]:arrinit (%18, %19)
  looping thru 0 args of 18:int:const 3
  looping thru 0 args of 19:int:const 5
checking: 123:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%105, %106, %122)
  looping thru 3 args of 123:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%105, %106, %122)
  looping thru 0 args of 105:int:const 4
  looping thru 0 args of 106:int:const 3
  looping thru 3 args of 122:int[][]:arrinit (%111, %116, %121)
  looping thru 4 args of 111:int[]:arrinit (%107, %108, %109, %110)
  looping thru 0 args of 107:int:const 1
  looping thru 0 args of 108:int:const 2
  looping thru 0 args of 109:int:const 3
  looping thru 0 args of 110:int:const 4
  looping thru 4 args of 116:int[]:arrinit (%112, %113, %114, %115)
  looping thru 0 args of 112:int:const 5
  looping thru 0 args of 113:int:const 6
  looping thru 0 args of 114:int:const 7
  looping thru 0 args of 115:int:const 8
  looping thru 4 args of 121:int[]:arrinit (%117, %118, %119, %120)
  looping thru 0 args of 117:int:const 9
  looping thru 0 args of 118:int:const 10
  looping thru 0 args of 119:int:const 11
  looping thru 0 args of 120:int:const 12
assign 1 := 1
checking: 125:ConstrainedRecord_Valid_9:Matrix:read (%27)
  looping thru 1 args of 125:ConstrainedRecord_Valid_9:Matrix:read (%27)
  looping thru 1 args of 27:ConstrainedRecord_Valid_9:Matrix:decl m3 = 26
  looping thru 2 args of 26:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:run(%24, %25)
  looping thru 1 args of 24:ConstrainedRecord_Valid_9:Matrix:read (%11)
  looping thru 1 args of 11:ConstrainedRecord_Valid_9:Matrix:decl m1 = 10
  looping thru 3 args of 10:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%0, %1, %9)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 2
  looping thru 2 args of 9:int[][]:arrinit (%4, %8)
  looping thru 2 args of 4:int[]:arrinit (%2, %3)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 0
  looping thru 2 args of 8:int[]:arrinit (%6, %7)
  looping thru 1 args of 6:int:neg (%5)
  looping thru 0 args of 5:int:const 3
  looping thru 0 args of 7:int:const 2
  looping thru 1 args of 25:ConstrainedRecord_Valid_9:Matrix:read (%23)
  looping thru 1 args of 23:ConstrainedRecord_Valid_9:Matrix:decl m2 = 22
  looping thru 3 args of 22:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%12, %13, %21)
  looping thru 0 args of 12:int:const 2
  looping thru 0 args of 13:int:const 2
  looping thru 2 args of 21:int[][]:arrinit (%17, %20)
  looping thru 2 args of 17:int[]:arrinit (%15, %16)
  looping thru 1 args of 15:int:neg (%14)
  looping thru 0 args of 14:int:const 1
  looping thru 0 args of 16:int:const 4
  looping thru 2 args of 20:int[]:arrinit (%18, %19)
  looping thru 0 args of 18:int:const 3
  looping thru 0 args of 19:int:const 5
checking: 128:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:run(%126, %127)
  looping thru 2 args of 128:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:run(%126, %127)
  looping thru 1 args of 126:ConstrainedRecord_Valid_9:Matrix:read (%11)
  looping thru 1 args of 11:ConstrainedRecord_Valid_9:Matrix:decl m1 = 10
  looping thru 3 args of 10:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%0, %1, %9)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 2
  looping thru 2 args of 9:int[][]:arrinit (%4, %8)
  looping thru 2 args of 4:int[]:arrinit (%2, %3)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 0
  looping thru 2 args of 8:int[]:arrinit (%6, %7)
  looping thru 1 args of 6:int:neg (%5)
  looping thru 0 args of 5:int:const 3
  looping thru 0 args of 7:int:const 2
  looping thru 1 args of 127:ConstrainedRecord_Valid_9:Matrix:read (%23)
  looping thru 1 args of 23:ConstrainedRecord_Valid_9:Matrix:decl m2 = 22
  looping thru 3 args of 22:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%12, %13, %21)
  looping thru 0 args of 12:int:const 2
  looping thru 0 args of 13:int:const 2
  looping thru 2 args of 21:int[][]:arrinit (%17, %20)
  looping thru 2 args of 17:int[]:arrinit (%15, %16)
  looping thru 1 args of 15:int:neg (%14)
  looping thru 0 args of 14:int:const 1
  looping thru 0 args of 16:int:const 4
  looping thru 2 args of 20:int[]:arrinit (%18, %19)
  looping thru 0 args of 18:int:const 3
  looping thru 0 args of 19:int:const 5
checking: 145:bool:eq (%130, %144)
  looping thru 2 args of 145:bool:eq (%130, %144)
  looping thru 1 args of 130:ConstrainedRecord_Valid_9:Matrix:read (%27)
  looping thru 1 args of 27:ConstrainedRecord_Valid_9:Matrix:decl m3 = 26
  looping thru 2 args of 26:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:run(%24, %25)
  looping thru 1 args of 24:ConstrainedRecord_Valid_9:Matrix:read (%11)
  looping thru 1 args of 11:ConstrainedRecord_Valid_9:Matrix:decl m1 = 10
  looping thru 3 args of 10:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%0, %1, %9)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 2
  looping thru 2 args of 9:int[][]:arrinit (%4, %8)
  looping thru 2 args of 4:int[]:arrinit (%2, %3)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 0
  looping thru 2 args of 8:int[]:arrinit (%6, %7)
  looping thru 1 args of 6:int:neg (%5)
  looping thru 0 args of 5:int:const 3
  looping thru 0 args of 7:int:const 2
  looping thru 1 args of 25:ConstrainedRecord_Valid_9:Matrix:read (%23)
  looping thru 1 args of 23:ConstrainedRecord_Valid_9:Matrix:decl m2 = 22
  looping thru 3 args of 22:ConstrainedRecord_Valid_9:Matrix:call ConstrainedRecord_Valid_9:Matrix(%12, %13, %21)
  looping thru 0 args of 12:int:const 2
  looping thru 0 args of 13:int:const 2
  looping thru 2 args of 21:int[][]:arrinit (%17, %20)
  looping thru 2 args of 17:int[]:arrinit (%15, %16)
  looping thru 1 args of 15:int:neg (%14)
  looping thru 0 args of 14:int:const 1
  looping thru 0 args of 16:int:const 4
  looping thru 2 args of 20:int[]:arrinit (%18, %19)
  looping thru 0 args of 18:int:const 3
  looping thru 0 args of 19:int:const 5
  looping thru 3 args of 144:{int[][] data,int height,int width}:recinit (%141, %142, %143)
  looping thru 2 args of 141:int[][]:arrinit (%135, %140)
  looping thru 4 args of 135:int[]:arrinit (%131, %132, %133, %134)
  looping thru 0 args of 131:int:const 38
  looping thru 0 args of 132:int:const 44
  looping thru 0 args of 133:int:const 50
  looping thru 0 args of 134:int:const 56
  looping thru 4 args of 140:int[]:arrinit (%136, %137, %138, %139)
  looping thru 0 args of 136:int:const 83
  looping thru 0 args of 137:int:const 98
  looping thru 0 args of 138:int:const 113
  looping thru 0 args of 139:int:const 128
  looping thru 0 args of 142:int:const 2
  looping thru 0 args of 143:int:const 4
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ConstrainedRecord_Valid_9.bpl(94,5): Error BP5003: A postcondition might not hold on this return path.
ConstrainedRecord_Valid_9.bpl(51,5): Related location: This is the postcondition that might not hold.
Execution trace:
    ConstrainedRecord_Valid_9.bpl(61,12): anon0
    ConstrainedRecord_Valid_9.bpl(63,5): anon7_LoopHead
    ConstrainedRecord_Valid_9.bpl(63,5): anon7_LoopDone
ConstrainedRecord_Valid_9.bpl(94,5): Error BP5003: A postcondition might not hold on this return path.
ConstrainedRecord_Valid_9.bpl(52,5): Related location: This is the postcondition that might not hold.
Execution trace:
    ConstrainedRecord_Valid_9.bpl(61,12): anon0
    ConstrainedRecord_Valid_9.bpl(63,5): anon7_LoopHead
    ConstrainedRecord_Valid_9.bpl(63,5): anon7_LoopDone

Boogie program verifier finished with 2 verified, 2 errors
===== ConstrainedReference_Valid_1.whiley =====
checking: 9:bool:istype (%5, %6)
  looping thru 2 args of 9:bool:istype (%5, %6)
  looping thru 1 args of 5:&int:read (%0)
  looping thru 0 args of 0:&int:decl v
  looping thru 0 args of 6:type:const &ConstrainedReference_Valid_1:nat
checking: 13:int:add (%11, %12)
  looping thru 2 args of 13:int:add (%11, %12)
  looping thru 1 args of 11:int:deref (%10)
  looping thru 1 args of 10:&int:read (%7)
  looping thru 1 args of 7:&int:alias (%0)
  looping thru 0 args of 0:&int:decl v
  looping thru 0 args of 12:int:const 1
wyboogie.NotImplementedYet: dereference in 11:int:deref (%10)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:986)
	at wyboogie.Wyil2Boogie.infixOp(Wyil2Boogie.java:1078)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1001)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeIf(Wyil2Boogie.java:827)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:626)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== ConstrainedUnion_Valid_1.whiley =====
checking: 9:bool:istype (%5, %6)
  looping thru 2 args of 9:bool:istype (%5, %6)
  looping thru 1 args of 5:bool|int:read (%0)
  looping thru 0 args of 0:bool|int:decl v
  looping thru 0 args of 6:type:const bool|ConstrainedUnion_Valid_1:nat
checking: 10:int:const 1
  looping thru 0 args of 10:int:const 1
checking: 14:int:const 0
  looping thru 0 args of 14:int:const 0
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call ConstrainedUnion_Valid_1:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 1
wyboogie.NotImplementedYet: call to method (f) from inside an expression in 1:int:call ConstrainedUnion_Valid_1:f(%0)
	at wyboogie.Wyil2Boogie.writeInvoke(Wyil2Boogie.java:1151)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:972)
	at wyboogie.Wyil2Boogie.writeEquality(Wyil2Boogie.java:1237)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1032)
	at wyboogie.Wyil2Boogie.boolExpr(Wyil2Boogie.java:934)
	at wyboogie.Wyil2Boogie.writeAssume(Wyil2Boogie.java:703)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:598)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Contractive_Valid_1.whiley =====
checking: 2:Contractive_Valid_1:Contractive:read (%0)
  looping thru 1 args of 2:Contractive_Valid_1:Contractive:read (%0)
  looping thru 0 args of 0:Contractive_Valid_1:Contractive:decl x
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:Contractive_Valid_1:Contractive:read (%2)
  looping thru 1 args of 2:Contractive_Valid_1:Contractive:decl x = 1
  looping thru 1 args of 1:Contractive_Valid_1:Contractive:call Contractive_Valid_1:f(%0)
  looping thru 0 args of 0:null:const null
  looping thru 0 args of 4:null:const null
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Contractive_Valid_2.whiley =====
checking: 2:Contractive_Valid_2:C1:read (%0)
  looping thru 1 args of 2:Contractive_Valid_2:C1:read (%0)
  looping thru 0 args of 0:Contractive_Valid_2:C1:decl x
checking: 2:Contractive_Valid_2:C2:read (%0)
  looping thru 1 args of 2:Contractive_Valid_2:C2:read (%0)
  looping thru 0 args of 0:Contractive_Valid_2:C2:decl x
checking: 2:Contractive_Valid_2:C3:read (%0)
  looping thru 1 args of 2:Contractive_Valid_2:C3:read (%0)
  looping thru 0 args of 0:Contractive_Valid_2:C3:decl x
checking: 2:Contractive_Valid_2:C3:read (%0)
  looping thru 1 args of 2:Contractive_Valid_2:C3:read (%0)
  looping thru 0 args of 0:Contractive_Valid_2:C3:decl x
wyboogie.NotImplementedYet: call to method (f) from inside an expression in 1:Contractive_Valid_2:C3:call Contractive_Valid_2:f(%0)
	at wyboogie.Wyil2Boogie.writeInvoke(Wyil2Boogie.java:1151)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:972)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Define_Valid_1.whiley =====
checking: 14:bool:eq (%12, %13)
  looping thru 2 args of 14:bool:eq (%12, %13)
  looping thru 1 args of 12:int:read (%11)
  looping thru 1 args of 11:int:decl x = 10
  looping thru 1 args of 10:int:recfield %9 x
  looping thru 1 args of 9:{int x,int y}:read (%8)
  looping thru 1 args of 8:Define_Valid_1:point:decl p = 7
  looping thru 2 args of 7:{int x,int y}:recinit (%5, %6)
  looping thru 0 args of 5:int:const 1
  looping thru 0 args of 6:int:const 2
  looping thru 0 args of 13:int:const 1
checking: 20:bool:eq (%18, %19)
  looping thru 2 args of 20:bool:eq (%18, %19)
conjecture: 0 <= 0 && 0 < arraylen(li)
  looping thru 2 args of 18:int:arridx (%16, %17)
  looping thru 1 args of 16:int[]:read (%4)
  looping thru 1 args of 4:Define_Valid_1:listint:decl li = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 17:int:const 0
  looping thru 0 args of 19:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Define_Valid_2.whiley =====
checking: 8:bool:eq (%4, %7)
  looping thru 2 args of 8:bool:eq (%4, %7)
  looping thru 1 args of 4:{bool x,bool y}:read (%3)
  looping thru 1 args of 3:Define_Valid_2:dr2point:decl p = 2
  looping thru 2 args of 2:{bool x,bool y}:recinit (%0, %1)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const false
  looping thru 2 args of 7:{bool x,bool y}:recinit (%5, %6)
  looping thru 0 args of 5:bool:const true
  looping thru 0 args of 6:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Define_Valid_3.whiley =====
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:Define_Valid_3:odd:decl y = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 3:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Define_Valid_4.whiley =====
checking: 7:{Define_Valid_4:codeOp op,int[] payload}:read (%6)
  looping thru 1 args of 7:{Define_Valid_4:codeOp op,int[] payload}:read (%6)
  looping thru 1 args of 6:Define_Valid_4:code:decl y = 5
  looping thru 2 args of 5:{Define_Valid_4:codeOp op,int[] payload}:recinit (%2, %4)
  looping thru 1 args of 2:Define_Valid_4:codeOp:read (%0)
  looping thru 0 args of 0:Define_Valid_4:codeOp:decl x
  looping thru 1 args of 4:int[]:arrinit (%3)
  looping thru 0 args of 3:int:const 0
checking: 6:bool:eq (%1, %5)
  looping thru 2 args of 6:bool:eq (%1, %5)
  looping thru 1 args of 1:Define_Valid_4:code:call Define_Valid_4:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 2 args of 5:{int op,int[] payload}:recinit (%2, %4)
  looping thru 0 args of 2:int:const 1
  looping thru 1 args of 4:int[]:arrinit (%3)
  looping thru 0 args of 3:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== DoWhile_Valid_1.whiley =====
assign 1 := 1
checking: 12:int:read (%7)
  looping thru 1 args of 12:int:read (%7)
  looping thru 1 args of 7:int:decl r = 6
  looping thru 0 args of 6:int:const 0
checking: 17:int:add (%13, %16)
  looping thru 2 args of 17:int:add (%13, %16)
  looping thru 1 args of 13:int:read (%7)
  looping thru 1 args of 7:int:decl r = 6
  looping thru 0 args of 6:int:const 0
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(args)
  looping thru 2 args of 16:int:arridx (%14, %15)
  looping thru 1 args of 14:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl args
  looping thru 1 args of 15:int:read (%9)
  looping thru 1 args of 9:int:decl i = 8
  looping thru 0 args of 8:int:const 0
assign 1 := 1
checking: 19:int:read (%9)
  looping thru 1 args of 19:int:read (%9)
  looping thru 1 args of 9:int:decl i = 8
  looping thru 0 args of 8:int:const 0
checking: 22:int:add (%20, %21)
  looping thru 2 args of 22:int:add (%20, %21)
  looping thru 1 args of 20:int:read (%9)
  looping thru 1 args of 9:int:decl i = 8
  looping thru 0 args of 8:int:const 0
  looping thru 0 args of 21:int:const 1
checking: 35:int:read (%7)
  looping thru 1 args of 35:int:read (%7)
  looping thru 1 args of 7:int:decl r = 6
  looping thru 0 args of 6:int:const 0
checking: 6:bool:eq (%4, %5)
  looping thru 2 args of 6:bool:eq (%4, %5)
  looping thru 1 args of 4:int:call DoWhile_Valid_1:f(%3)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 5:int:const 3
wyboogie.NotImplementedYet: call to method (f) from inside an expression in 4:int:call DoWhile_Valid_1:f(%3)
	at wyboogie.Wyil2Boogie.writeInvoke(Wyil2Boogie.java:1151)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:972)
	at wyboogie.Wyil2Boogie.writeEquality(Wyil2Boogie.java:1237)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1032)
	at wyboogie.Wyil2Boogie.boolExpr(Wyil2Boogie.java:934)
	at wyboogie.Wyil2Boogie.writeAssume(Wyil2Boogie.java:703)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:598)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== DoWhile_Valid_2.whiley =====
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 4:int:const 2
assign 1 := 1
checking: 9:int:read (%1)
  looping thru 1 args of 9:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
checking: 12:int:add (%10, %11)
  looping thru 2 args of 12:int:add (%10, %11)
  looping thru 1 args of 10:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 11:int:const 1
checking: 21:bool:eq (%19, %20)
  looping thru 2 args of 21:bool:eq (%19, %20)
  looping thru 1 args of 19:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 20:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== DoWhile_Valid_3.whiley =====
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 4:int:const 2
assign 1 := 1
checking: 9:int:read (%1)
  looping thru 1 args of 9:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
checking: 12:int:add (%10, %11)
  looping thru 2 args of 12:int:add (%10, %11)
  looping thru 1 args of 10:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 11:int:const 1
checking: 21:bool:eq (%19, %20)
  looping thru 2 args of 21:bool:eq (%19, %20)
  looping thru 1 args of 19:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 20:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== DoWhile_Valid_4.whiley =====
assign 1 := 1
checking: 8:DoWhile_Valid_4:Link:read (%3)
  looping thru 1 args of 8:DoWhile_Valid_4:Link:read (%3)
  looping thru 1 args of 3:DoWhile_Valid_4:LinkedList:decl iter = 2
  looping thru 1 args of 2:DoWhile_Valid_4:Link:read (%0)
  looping thru 0 args of 0:DoWhile_Valid_4:Link:decl list
checking: 10:DoWhile_Valid_4:LinkedList:recfield %9 next
  looping thru 1 args of 10:DoWhile_Valid_4:LinkedList:recfield %9 next
  looping thru 1 args of 9:DoWhile_Valid_4:Link:read (%3)
  looping thru 1 args of 3:DoWhile_Valid_4:LinkedList:decl iter = 2
  looping thru 1 args of 2:DoWhile_Valid_4:Link:read (%0)
  looping thru 0 args of 0:DoWhile_Valid_4:Link:decl list
assign 1 := 1
checking: 12:int:read (%5)
  looping thru 1 args of 12:int:read (%5)
  looping thru 1 args of 5:int:decl distance = 4
  looping thru 0 args of 4:int:const 0
checking: 15:int:add (%13, %14)
  looping thru 2 args of 15:int:add (%13, %14)
  looping thru 1 args of 13:int:read (%5)
  looping thru 1 args of 5:int:decl distance = 4
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 14:int:const 1
checking: 24:int:add (%22, %23)
  looping thru 2 args of 24:int:add (%22, %23)
  looping thru 1 args of 22:DoWhile_Valid_4:LinkedList:read (%3)
  looping thru 1 args of 3:DoWhile_Valid_4:LinkedList:decl iter = 2
  looping thru 1 args of 2:DoWhile_Valid_4:Link:read (%0)
  looping thru 0 args of 0:DoWhile_Valid_4:Link:decl list
  looping thru 1 args of 23:int:read (%5)
  looping thru 1 args of 5:int:decl distance = 4
  looping thru 0 args of 4:int:const 0
assign 1 := 1
checking: 2:int:read (%1)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:DoWhile_Valid_4:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
checking: 4:{int next}:recinit (%3)
  looping thru 1 args of 4:{int next}:recinit (%3)
  looping thru 1 args of 3:int:read (%1)
  looping thru 1 args of 1:DoWhile_Valid_4:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
assign 1 := 1
checking: 6:{int next}:read (%1)
  looping thru 1 args of 6:{int next}:read (%1)
  looping thru 1 args of 1:DoWhile_Valid_4:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
checking: 8:{{int next} next}:recinit (%7)
  looping thru 1 args of 8:{{int next} next}:recinit (%7)
  looping thru 1 args of 7:{int next}:read (%1)
  looping thru 1 args of 1:DoWhile_Valid_4:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:DoWhile_Valid_4:Leaf:call DoWhile_Valid_4:dist(%10)
  looping thru 1 args of 10:{{int next} next}:read (%1)
  looping thru 1 args of 1:DoWhile_Valid_4:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
  looping thru 0 args of 12:int:const 125
assign 1 := 1
checking: 15:{{int next} next}:read (%1)
  looping thru 1 args of 15:{{int next} next}:read (%1)
  looping thru 1 args of 1:DoWhile_Valid_4:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
checking: 17:{{{int next} next} next}:recinit (%16)
  looping thru 1 args of 17:{{{int next} next} next}:recinit (%16)
  looping thru 1 args of 16:{{int next} next}:read (%1)
  looping thru 1 args of 1:DoWhile_Valid_4:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
assign 1 := 1
checking: 19:{{{int next} next} next}:read (%1)
  looping thru 1 args of 19:{{{int next} next} next}:read (%1)
  looping thru 1 args of 1:DoWhile_Valid_4:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
checking: 21:{{{{int next} next} next} next}:recinit (%20)
  looping thru 1 args of 21:{{{{int next} next} next} next}:recinit (%20)
  looping thru 1 args of 20:{{{int next} next} next}:read (%1)
  looping thru 1 args of 1:DoWhile_Valid_4:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
checking: 26:bool:eq (%24, %25)
  looping thru 2 args of 26:bool:eq (%24, %25)
  looping thru 1 args of 24:DoWhile_Valid_4:Leaf:call DoWhile_Valid_4:dist(%23)
  looping thru 1 args of 23:{{{{int next} next} next} next}:read (%1)
  looping thru 1 args of 1:DoWhile_Valid_4:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
  looping thru 0 args of 25:int:const 127
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== DoWhile_Valid_5.whiley =====
assign 1 := 1
checking: 12:int:read (%9)
  looping thru 1 args of 12:int:read (%9)
  looping thru 1 args of 9:int:decl r = 8
  looping thru 0 args of 8:int:const 0
checking: 17:int:add (%13, %16)
  looping thru 2 args of 17:int:add (%13, %16)
  looping thru 1 args of 13:int:read (%9)
  looping thru 1 args of 9:int:decl r = 8
  looping thru 0 args of 8:int:const 0
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 16:int:arridx (%14, %15)
  looping thru 1 args of 14:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 15:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
assign 1 := 1
checking: 19:int:read (%7)
  looping thru 1 args of 19:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
checking: 22:int:add (%20, %21)
  looping thru 2 args of 22:int:add (%20, %21)
  looping thru 1 args of 20:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 21:int:const 1
checking: 33:int:read (%9)
  looping thru 1 args of 33:int:read (%9)
  looping thru 1 args of 9:int:decl r = 8
  looping thru 0 args of 8:int:const 0
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:call DoWhile_Valid_5:sum(%1)
  looping thru 1 args of 1:int[]:arrinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 3:int:const 1
checking: 11:bool:eq (%9, %10)
  looping thru 2 args of 11:bool:eq (%9, %10)
  looping thru 1 args of 9:int:call DoWhile_Valid_5:sum(%8)
  looping thru 2 args of 8:int[]:arrinit (%6, %7)
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 7:int:const 2
  looping thru 0 args of 10:int:const 3
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:int:call DoWhile_Valid_5:sum(%16)
  looping thru 3 args of 16:int[]:arrinit (%13, %14, %15)
  looping thru 0 args of 13:int:const 1
  looping thru 0 args of 14:int:const 2
  looping thru 0 args of 15:int:const 3
  looping thru 0 args of 18:int:const 6
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
DoWhile_Valid_5.bpl(28,9): Error BP5001: This assertion might not hold.
Execution trace:
    DoWhile_Valid_5.bpl(21,7): anon0
    DoWhile_Valid_5.bpl(24,5): anon3_LoopHead
    DoWhile_Valid_5.bpl(27,19): anon3_LoopBody

Boogie program verifier finished with 1 verified, 1 error
===== DoWhile_Valid_6.whiley =====
assign 1 := 1
checking: 21:int:read (%19)
  looping thru 1 args of 21:int:read (%19)
  looping thru 1 args of 19:int:decl i = 18
  looping thru 1 args of 18:int:arrlen (%17)
  looping thru 1 args of 17:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
checking: 24:int:sub (%22, %23)
  looping thru 2 args of 24:int:sub (%22, %23)
  looping thru 1 args of 22:int:read (%19)
  looping thru 1 args of 19:int:decl i = 18
  looping thru 1 args of 18:int:arrlen (%17)
  looping thru 1 args of 17:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 0 args of 23:int:const 1
checking: 46:int:read (%19)
  looping thru 1 args of 46:int:read (%19)
  looping thru 1 args of 19:int:decl i = 18
  looping thru 1 args of 18:int:arrlen (%17)
  looping thru 1 args of 17:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 2 args of 11:int:call DoWhile_Valid_6:lastIndexOf(%9, %10)
  looping thru 9 args of 9:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6, %7, %8)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 4:int:const 5
  looping thru 0 args of 5:int:const 4
  looping thru 0 args of 6:int:const 3
  looping thru 0 args of 7:int:const 2
  looping thru 0 args of 8:int:const 1
  looping thru 0 args of 10:int:const 1
  looping thru 0 args of 12:int:const 8
checking: 28:bool:eq (%26, %27)
  looping thru 2 args of 28:bool:eq (%26, %27)
  looping thru 2 args of 26:int:call DoWhile_Valid_6:lastIndexOf(%24, %25)
  looping thru 9 args of 24:int[]:arrinit (%15, %16, %17, %18, %19, %20, %21, %22, %23)
  looping thru 0 args of 15:int:const 1
  looping thru 0 args of 16:int:const 2
  looping thru 0 args of 17:int:const 3
  looping thru 0 args of 18:int:const 4
  looping thru 0 args of 19:int:const 5
  looping thru 0 args of 20:int:const 4
  looping thru 0 args of 21:int:const 3
  looping thru 0 args of 22:int:const 2
  looping thru 0 args of 23:int:const 1
  looping thru 0 args of 25:int:const 2
  looping thru 0 args of 27:int:const 7
checking: 43:bool:eq (%41, %42)
  looping thru 2 args of 43:bool:eq (%41, %42)
  looping thru 2 args of 41:int:call DoWhile_Valid_6:lastIndexOf(%39, %40)
  looping thru 9 args of 39:int[]:arrinit (%30, %31, %32, %33, %34, %35, %36, %37, %38)
  looping thru 0 args of 30:int:const 1
  looping thru 0 args of 31:int:const 2
  looping thru 0 args of 32:int:const 3
  looping thru 0 args of 33:int:const 4
  looping thru 0 args of 34:int:const 5
  looping thru 0 args of 35:int:const 4
  looping thru 0 args of 36:int:const 3
  looping thru 0 args of 37:int:const 2
  looping thru 0 args of 38:int:const 1
  looping thru 0 args of 40:int:const 3
  looping thru 0 args of 42:int:const 6
checking: 58:bool:eq (%56, %57)
  looping thru 2 args of 58:bool:eq (%56, %57)
  looping thru 2 args of 56:int:call DoWhile_Valid_6:lastIndexOf(%54, %55)
  looping thru 9 args of 54:int[]:arrinit (%45, %46, %47, %48, %49, %50, %51, %52, %53)
  looping thru 0 args of 45:int:const 1
  looping thru 0 args of 46:int:const 2
  looping thru 0 args of 47:int:const 3
  looping thru 0 args of 48:int:const 4
  looping thru 0 args of 49:int:const 5
  looping thru 0 args of 50:int:const 4
  looping thru 0 args of 51:int:const 3
  looping thru 0 args of 52:int:const 2
  looping thru 0 args of 53:int:const 1
  looping thru 0 args of 55:int:const 4
  looping thru 0 args of 57:int:const 5
checking: 73:bool:eq (%71, %72)
  looping thru 2 args of 73:bool:eq (%71, %72)
  looping thru 2 args of 71:int:call DoWhile_Valid_6:lastIndexOf(%69, %70)
  looping thru 9 args of 69:int[]:arrinit (%60, %61, %62, %63, %64, %65, %66, %67, %68)
  looping thru 0 args of 60:int:const 1
  looping thru 0 args of 61:int:const 2
  looping thru 0 args of 62:int:const 3
  looping thru 0 args of 63:int:const 4
  looping thru 0 args of 64:int:const 5
  looping thru 0 args of 65:int:const 4
  looping thru 0 args of 66:int:const 3
  looping thru 0 args of 67:int:const 2
  looping thru 0 args of 68:int:const 1
  looping thru 0 args of 70:int:const 5
  looping thru 0 args of 72:int:const 4
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
DoWhile_Valid_6.bpl(24,39): error: ")" expected
1 parse errors detected in DoWhile_Valid_6.bpl
===== DoWhile_Valid_7.whiley =====
assign 1 := 1
checking: 6:int:read (%1)
  looping thru 1 args of 6:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
checking: 9:int:add (%7, %8)
  looping thru 2 args of 9:int:add (%7, %8)
  looping thru 1 args of 7:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 8:int:const 1
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 12:int:const 3
wyboogie.NotImplementedYet: continue in 14::cont
	at wyboogie.Wyil2Boogie.writeContinue(Wyil2Boogie.java:780)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:612)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeIf(Wyil2Boogie.java:827)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:626)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeDoWhile(Wyil2Boogie.java:808)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:618)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== DoWhile_Valid_8.whiley =====
checking: 14:bool:lteq (%12, %13)
  looping thru 2 args of 14:bool:lteq (%12, %13)
  looping thru 1 args of 12:int:read (%0)
  looping thru 0 args of 0:int:decl n
  looping thru 0 args of 13:int:const 0
assign 1 := 1
checking: 18:int:read (%10)
  looping thru 1 args of 18:int:read (%10)
  looping thru 1 args of 10:int:decl i = 9
  looping thru 0 args of 9:int:const 0
checking: 21:int:add (%19, %20)
  looping thru 2 args of 21:int:add (%19, %20)
  looping thru 1 args of 19:int:read (%10)
  looping thru 1 args of 10:int:decl i = 9
  looping thru 0 args of 9:int:const 0
  looping thru 0 args of 20:int:const 1
checking: 39:int:read (%10)
  looping thru 1 args of 39:int:read (%10)
  looping thru 1 args of 10:int:decl i = 9
  looping thru 0 args of 9:int:const 0
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:call DoWhile_Valid_8:count(%1)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 3:int:const 0
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:int:call DoWhile_Valid_8:count(%6)
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 8:int:const 0
checking: 14:bool:eq (%12, %13)
  looping thru 2 args of 14:bool:eq (%12, %13)
  looping thru 1 args of 12:int:call DoWhile_Valid_8:count(%11)
  looping thru 0 args of 11:int:const 1
  looping thru 0 args of 13:int:const 1
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:int:call DoWhile_Valid_8:count(%16)
  looping thru 0 args of 16:int:const 2
  looping thru 0 args of 18:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
DoWhile_Valid_8.bpl(24,9): Error BP5004: This loop invariant might not hold on entry.
Execution trace:
    DoWhile_Valid_8.bpl(21,7): anon0
DoWhile_Valid_8.bpl(24,9): Error BP5005: This loop invariant might not be maintained by the loop.
Execution trace:
    DoWhile_Valid_8.bpl(21,7): anon0
    DoWhile_Valid_8.bpl(23,5): anon5_LoopHead
    DoWhile_Valid_8.bpl(26,19): anon5_LoopBody
    DoWhile_Valid_8.bpl(27,9): anon6_Else

Boogie program verifier finished with 1 verified, 2 errors
===== EffectiveList_Valid_1.whiley =====
checking: 22:bool:lt (%19, %21)
  looping thru 2 args of 22:bool:lt (%19, %21)
  looping thru 1 args of 19:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
  looping thru 1 args of 21:int:arrlen (%20)
  looping thru 1 args of 20:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
checking: 27:bool:lt (%25, %26)
  looping thru 2 args of 27:bool:lt (%25, %26)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 25:int:arridx (%23, %24)
  looping thru 1 args of 23:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 24:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 26:int:const 0
assign 1 := 1
checking: 30:null|bool:arridx (%28, %29)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(r)
  looping thru 2 args of 30:null|bool:arridx (%28, %29)
  looping thru 1 args of 28:null|bool[]:read (%6)
  looping thru 1 args of 6:EffectiveList_Valid_1:nbool[]:decl r = 5
  looping thru 2 args of 5:bool[]:arrgen (%2, %4)
  looping thru 0 args of 2:bool:const false
  looping thru 1 args of 4:int:arrlen (%3)
  looping thru 1 args of 3:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 29:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
checking: 31:bool:const true
  looping thru 0 args of 31:bool:const true
assign 1 := 1
checking: 36:null|bool:arridx (%34, %35)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(r)
  looping thru 2 args of 36:null|bool:arridx (%34, %35)
  looping thru 1 args of 34:null|bool[]:read (%6)
  looping thru 1 args of 6:EffectiveList_Valid_1:nbool[]:decl r = 5
  looping thru 2 args of 5:bool[]:arrgen (%2, %4)
  looping thru 0 args of 2:bool:const false
  looping thru 1 args of 4:int:arrlen (%3)
  looping thru 1 args of 3:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 35:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
checking: 37:null:const null
  looping thru 0 args of 37:null:const null
assign 1 := 1
checking: 41:int:read (%8)
  looping thru 1 args of 41:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
checking: 44:int:add (%42, %43)
  looping thru 2 args of 44:int:add (%42, %43)
  looping thru 1 args of 42:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 43:int:const 1
checking: 48:null|bool[]:read (%6)
  looping thru 1 args of 48:null|bool[]:read (%6)
  looping thru 1 args of 6:EffectiveList_Valid_1:nbool[]:decl r = 5
  looping thru 2 args of 5:bool[]:arrgen (%2, %4)
  looping thru 0 args of 2:bool:const false
  looping thru 1 args of 4:int:arrlen (%3)
  looping thru 1 args of 3:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
checking: 9:bool:eq (%5, %8)
  looping thru 2 args of 9:bool:eq (%5, %8)
  looping thru 1 args of 5:EffectiveList_Valid_1:nbool[]:call EffectiveList_Valid_1:f(%4)
  looping thru 1 args of 4:int[]:read (%3)
  looping thru 1 args of 3:int[]:decl e = 2
  looping thru 2 args of 2:int[]:arrgen (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
  looping thru 2 args of 8:bool[]:arrgen (%6, %7)
  looping thru 0 args of 6:bool:const false
  looping thru 0 args of 7:int:const 0
assign 1 := 1
checking: 11:int[]:read (%3)
  looping thru 1 args of 11:int[]:read (%3)
  looping thru 1 args of 3:int[]:decl e = 2
  looping thru 2 args of 2:int[]:arrgen (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
checking: 16:int[]:arrinit (%12, %13, %14, %15)
  looping thru 4 args of 16:int[]:arrinit (%12, %13, %14, %15)
  looping thru 0 args of 12:int:const 1
  looping thru 0 args of 13:int:const 2
  looping thru 0 args of 14:int:const 3
  looping thru 0 args of 15:int:const 4
checking: 25:bool:eq (%19, %24)
  looping thru 2 args of 25:bool:eq (%19, %24)
  looping thru 1 args of 19:EffectiveList_Valid_1:nbool[]:call EffectiveList_Valid_1:f(%18)
  looping thru 1 args of 18:int[]:read (%3)
  looping thru 1 args of 3:int[]:decl e = 2
  looping thru 2 args of 2:int[]:arrgen (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
  looping thru 4 args of 24:null[]:arrinit (%20, %21, %22, %23)
  looping thru 0 args of 20:null:const null
  looping thru 0 args of 21:null:const null
  looping thru 0 args of 22:null:const null
  looping thru 0 args of 23:null:const null
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Ensures_Valid_1.whiley =====
checking: 15:bool:eq (%13, %14)
  looping thru 2 args of 15:bool:eq (%13, %14)
  looping thru 1 args of 13:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 14:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 16:int:const 1
  looping thru 0 args of 16:int:const 1
checking: 21:int:add (%19, %20)
  looping thru 2 args of 21:int:add (%19, %20)
  looping thru 1 args of 19:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 20:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 2 args of 2:int:call Ensures_Valid_1:add(%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 3:int:const 3
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 2 args of 8:int:call Ensures_Valid_1:add(%6, %7)
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 7:int:const 1
  looping thru 0 args of 9:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Ensures_Valid_2.whiley =====
MUTATED INPUT x : int
assign 1 := 1
checking: 5:int:read (%0)
  looping thru 1 args of 5:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 8:int:add (%6, %7)
  looping thru 2 args of 8:int:add (%6, %7)
  looping thru 1 args of 6:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 7:int:const 1
checking: 10:int:read (%0)
  looping thru 1 args of 10:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:read (%2)
  looping thru 1 args of 2:int:decl y = 1
  looping thru 1 args of 1:int:call Ensures_Valid_2:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 4:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Ensures_Valid_3.whiley =====
checking: 49:bool:lt (%46, %48)
  looping thru 2 args of 49:bool:lt (%46, %48)
  looping thru 1 args of 46:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
  looping thru 1 args of 48:int:arrlen (%47)
  looping thru 1 args of 47:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
checking: 54:bool:gteq (%52, %53)
  looping thru 2 args of 54:bool:gteq (%52, %53)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 52:int:arridx (%50, %51)
  looping thru 1 args of 50:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 51:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
  looping thru 0 args of 53:int:const 0
assign 1 := 1
checking: 55:int:read (%23)
  looping thru 1 args of 55:int:read (%23)
  looping thru 1 args of 23:int:decl count = 22
  looping thru 0 args of 22:int:const 0
checking: 58:int:add (%56, %57)
  looping thru 2 args of 58:int:add (%56, %57)
  looping thru 1 args of 56:int:read (%23)
  looping thru 1 args of 23:int:decl count = 22
  looping thru 0 args of 22:int:const 0
  looping thru 0 args of 57:int:const 1
assign 1 := 1
checking: 62:int:read (%18)
  looping thru 1 args of 62:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
checking: 65:int:add (%63, %64)
  looping thru 2 args of 65:int:add (%63, %64)
  looping thru 1 args of 63:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
  looping thru 0 args of 64:int:const 1
assign 1 := 1
checking: 73:int:read (%18)
  looping thru 1 args of 73:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
checking: 74:int:const 0
  looping thru 0 args of 74:int:const 0
checking: 115:bool:land (%110, %114)
  looping thru 2 args of 110:bool:lt (%107, %109)
  looping thru 1 args of 107:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
  looping thru 1 args of 109:int:arrlen (%108)
  looping thru 1 args of 108:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 2 args of 114:bool:lt (%111, %113)
  looping thru 1 args of 111:int:read (%77)
  looping thru 1 args of 77:int:decl j = 76
  looping thru 0 args of 76:int:const 0
  looping thru 1 args of 113:int:arrlen (%112)
  looping thru 1 args of 112:int[]:read (%72)
  looping thru 1 args of 72:int[]:decl zs = 71
  looping thru 2 args of 71:int[]:arrgen (%69, %70)
  looping thru 0 args of 69:int:const 0
  looping thru 1 args of 70:int:read (%23)
  looping thru 1 args of 23:int:decl count = 22
  looping thru 0 args of 22:int:const 0
checking: 120:bool:gteq (%118, %119)
  looping thru 2 args of 120:bool:gteq (%118, %119)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 118:int:arridx (%116, %117)
  looping thru 1 args of 116:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 117:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
  looping thru 0 args of 119:int:const 0
assign 1 := 1
checking: 123:int:arridx (%121, %122)
conjecture: 0 <= toInt(j) && toInt(j) < arraylen(zs)
  looping thru 2 args of 123:int:arridx (%121, %122)
  looping thru 1 args of 121:int[]:read (%72)
  looping thru 1 args of 72:int[]:decl zs = 71
  looping thru 2 args of 71:int[]:arrgen (%69, %70)
  looping thru 0 args of 69:int:const 0
  looping thru 1 args of 70:int:read (%23)
  looping thru 1 args of 23:int:decl count = 22
  looping thru 0 args of 22:int:const 0
  looping thru 1 args of 122:int:read (%77)
  looping thru 1 args of 77:int:decl j = 76
  looping thru 0 args of 76:int:const 0
checking: 126:int:arridx (%124, %125)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 126:int:arridx (%124, %125)
  looping thru 1 args of 124:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 125:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
assign 1 := 1
checking: 128:int:read (%77)
  looping thru 1 args of 128:int:read (%77)
  looping thru 1 args of 77:int:decl j = 76
  looping thru 0 args of 76:int:const 0
checking: 131:int:add (%129, %130)
  looping thru 2 args of 131:int:add (%129, %130)
  looping thru 1 args of 129:int:read (%77)
  looping thru 1 args of 77:int:decl j = 76
  looping thru 0 args of 76:int:const 0
  looping thru 0 args of 130:int:const 1
assign 1 := 1
checking: 135:int:read (%18)
  looping thru 1 args of 135:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
checking: 138:int:add (%136, %137)
  looping thru 2 args of 138:int:add (%136, %137)
  looping thru 1 args of 136:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
  looping thru 0 args of 137:int:const 1
checking: 142:int[]:read (%72)
  looping thru 1 args of 142:int[]:read (%72)
  looping thru 1 args of 72:int[]:decl zs = 71
  looping thru 2 args of 71:int[]:arrgen (%69, %70)
  looping thru 0 args of 69:int:const 0
  looping thru 1 args of 70:int:read (%23)
  looping thru 1 args of 23:int:decl count = 22
  looping thru 0 args of 22:int:const 0
checking: 22:bool:eq (%17, %21)
  looping thru 2 args of 22:bool:eq (%17, %21)
  looping thru 1 args of 17:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl a1 = 6
  looping thru 1 args of 6:int[]:call Ensures_Valid_3:selectOver(%5)
  looping thru 4 args of 5:int[]:arrinit (%0, %2, %3, %4)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 2:int:neg (%1)
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:const 4
  looping thru 3 args of 21:int[]:arrinit (%18, %19, %20)
  looping thru 0 args of 18:int:const 1
  looping thru 0 args of 19:int:const 3
  looping thru 0 args of 20:int:const 4
checking: 28:bool:eq (%24, %27)
  looping thru 2 args of 28:bool:eq (%24, %27)
  looping thru 1 args of 24:int[]:read (%16)
  looping thru 1 args of 16:int[]:decl a2 = 15
  looping thru 1 args of 15:int[]:call Ensures_Valid_3:selectOver(%14)
  looping thru 4 args of 14:int[]:arrinit (%8, %10, %12, %13)
  looping thru 0 args of 8:int:const 1
  looping thru 1 args of 10:int:neg (%9)
  looping thru 0 args of 9:int:const 2
  looping thru 1 args of 12:int:neg (%11)
  looping thru 0 args of 11:int:const 3
  looping thru 0 args of 13:int:const 4
  looping thru 2 args of 27:int[]:arrinit (%25, %26)
  looping thru 0 args of 25:int:const 1
  looping thru 0 args of 26:int:const 4
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Ensures_Valid_3.bpl(56,5): Error BP5003: A postcondition might not hold on this return path.
Ensures_Valid_3.bpl(18,5): Related location: This is the postcondition that might not hold.
Execution trace:
    Ensures_Valid_3.bpl(26,7): anon0
    Ensures_Valid_3.bpl(29,5): anon9_LoopHead
    Ensures_Valid_3.bpl(29,5): anon9_LoopDone
    Ensures_Valid_3.bpl(42,5): anon11_LoopHead
    Ensures_Valid_3.bpl(42,5): anon11_LoopDone

Boogie program verifier finished with 1 verified, 1 error
===== Ensures_Valid_4.whiley =====
checking: 12:int:read (%0)
  looping thru 1 args of 12:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call Ensures_Valid_4:f(%0)
  looping thru 0 args of 0:int:const 10
  looping thru 0 args of 2:int:const 10
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Ensures_Valid_5.whiley =====
MUTATED INPUT x : int
assign 1 := 1
checking: 5:int:read (%0)
  looping thru 1 args of 5:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 8:int:add (%6, %7)
  looping thru 2 args of 8:int:add (%6, %7)
  looping thru 1 args of 6:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 7:int:const 1
checking: 10:int:read (%0)
  looping thru 1 args of 10:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call Ensures_Valid_5:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Ensures_Valid_6.whiley =====
checking: 14:bool:gteq (%12, %13)
  looping thru 2 args of 14:bool:gteq (%12, %13)
  looping thru 1 args of 12:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 13:int:const 0
checking: 15:int:read (%0)
  looping thru 1 args of 15:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 18:null:const null
  looping thru 0 args of 18:null:const null
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:null|int:call Ensures_Valid_6:abs(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 1
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:null|int:call Ensures_Valid_6:abs(%6)
  looping thru 1 args of 6:int:neg (%5)
  looping thru 0 args of 5:int:const 1
  looping thru 0 args of 8:null:const null
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Ensures_Valid_7.whiley =====
checking: 24:bool:istype (%20, %21)
  looping thru 2 args of 24:bool:istype (%20, %21)
  looping thru 1 args of 20:null|int:read (%0)
  looping thru 0 args of 0:null|int:decl x
  looping thru 0 args of 21:type:const int
checking: 27:bool:gteq (%25, %26)
  looping thru 2 args of 27:bool:gteq (%25, %26)
  looping thru 1 args of 25:int:read (%22)
  looping thru 1 args of 22:int:alias (%0)
  looping thru 0 args of 0:null|int:decl x
  looping thru 0 args of 26:int:const 0
checking: 28:int:read (%22)
  looping thru 1 args of 28:int:read (%22)
  looping thru 1 args of 22:int:alias (%0)
  looping thru 0 args of 0:null|int:decl x
checking: 32:int:neg (%31)
  looping thru 1 args of 32:int:neg (%31)
  looping thru 1 args of 31:int:read (%22)
  looping thru 1 args of 22:int:alias (%0)
  looping thru 0 args of 0:null|int:decl x
checking: 37:int:const 0
  looping thru 0 args of 37:int:const 0
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call Ensures_Valid_7:abs(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 1
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:int:call Ensures_Valid_7:abs(%6)
  looping thru 1 args of 6:int:neg (%5)
  looping thru 0 args of 5:int:const 1
  looping thru 0 args of 8:int:const 1
checking: 14:bool:eq (%12, %13)
  looping thru 2 args of 14:bool:eq (%12, %13)
  looping thru 1 args of 12:int:call Ensures_Valid_7:abs(%11)
  looping thru 0 args of 11:null:const null
  looping thru 0 args of 13:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Ensures_Valid_8.whiley =====
MUTATED INPUT x : int
checking: 7:bool:lt (%5, %6)
  looping thru 2 args of 7:bool:lt (%5, %6)
  looping thru 1 args of 5:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 6:int:const 0
assign 1 := 1
checking: 8:int:read (%0)
  looping thru 1 args of 8:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 10:int:neg (%9)
  looping thru 1 args of 10:int:neg (%9)
  looping thru 1 args of 9:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 14:int:read (%0)
  looping thru 1 args of 14:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call Ensures_Valid_8:abs(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 1
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:int:call Ensures_Valid_8:abs(%6)
  looping thru 1 args of 6:int:neg (%5)
  looping thru 0 args of 5:int:const 1
  looping thru 0 args of 8:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Fail_Valid_1.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:null|int:read (%0)
  looping thru 0 args of 0:null|int:decl x
  looping thru 0 args of 3:type:const Fail_Valid_1:nat
checking: 7:bool:const true
  looping thru 0 args of 7:bool:const true
checking: 14:bool:istype (%10, %11)
  looping thru 2 args of 14:bool:istype (%10, %11)
  looping thru 1 args of 10:null|int:read (%5)
  looping thru 1 args of 5:null|int:alias (%0)
  looping thru 0 args of 0:null|int:decl x
  looping thru 0 args of 11:type:const Fail_Valid_1:neg
checking: 15:bool:const false
  looping thru 0 args of 15:bool:const false
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:null|bool:call Fail_Valid_1:f(%1)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 3:bool:const false
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:null|bool:call Fail_Valid_1:f(%6)
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 8:bool:const true
checking: 14:bool:eq (%12, %13)
  looping thru 2 args of 14:bool:eq (%12, %13)
  looping thru 1 args of 12:null|bool:call Fail_Valid_1:f(%11)
  looping thru 0 args of 11:int:const 1
  looping thru 0 args of 13:bool:const true
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Fail_Valid_1.bpl(34,13): Error BP5001: This assertion might not hold.
Execution trace:
    Fail_Valid_1.bpl(26,5): anon0
    Fail_Valid_1.bpl(30,9): anon5_Else
    Fail_Valid_1.bpl(34,13): anon6_Else

Boogie program verifier finished with 1 verified, 1 error
===== Fail_Valid_2.whiley =====
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:read (%2)
  looping thru 1 args of 2:int:decl x = 1
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 4:int:const 0
checking: 6:int:read (%2)
  looping thru 1 args of 6:int:read (%2)
  looping thru 1 args of 2:int:decl x = 1
  looping thru 0 args of 1:int:const 0
checking: 2:bool:eq (%0, %1)
  looping thru 2 args of 2:bool:eq (%0, %1)
  looping thru 0 args of 0:int:call Fail_Valid_2:zero()
  looping thru 0 args of 1:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== FunctionRef_Valid_1.whiley =====
checking: 4:int:add (%2, %3)
  looping thru 2 args of 4:int:add (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 3:int:const 1
checking: 4:int:mul (%2, %3)
  looping thru 2 args of 4:int:mul (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 3:int:const 2
checking: 4:int:icall %2 (%3)
  looping thru 1 args of 4:int:icall %2 (%3)
  looping thru 1 args of 2:FunctionRef_Valid_1:func_t:read (%0)
  looping thru 0 args of 0:FunctionRef_Valid_1:func_t:decl func
wyboogie.NotImplementedYet: indirect invoke in 4:int:icall %2 (%3)
	at wyboogie.Wyil2Boogie.writeIndirectInvoke(Wyil2Boogie.java:1140)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:969)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== FunctionRef_Valid_10.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:FunctionRef_Valid_10:LinkedList:read (%0)
  looping thru 0 args of 0:FunctionRef_Valid_10:LinkedList:decl l
  looping thru 0 args of 3:type:const null
checking: 7:int:const 0
  looping thru 0 args of 7:int:const 0
checking: 15:int:add (%11, %14)
  looping thru 2 args of 15:int:add (%11, %14)
  looping thru 1 args of 11:int:recfield %10 data
  looping thru 1 args of 10:FunctionRef_Valid_10:LinkedList:read (%5)
  looping thru 1 args of 5:FunctionRef_Valid_10:LinkedList:alias (%0)
  looping thru 0 args of 0:FunctionRef_Valid_10:LinkedList:decl l
  looping thru 1 args of 14:int:call FunctionRef_Valid_10:sum(%13)
  looping thru 1 args of 13:X<null|{int data,X next}>:recfield %12 next
  looping thru 1 args of 12:FunctionRef_Valid_10:LinkedList:read (%5)
  looping thru 1 args of 5:FunctionRef_Valid_10:LinkedList:alias (%0)
  looping thru 0 args of 0:FunctionRef_Valid_10:LinkedList:decl l
checking: 5:int:icall %3 (%4)
  looping thru 1 args of 5:int:icall %3 (%4)
  looping thru 1 args of 3:FunctionRef_Valid_10:Reducer:read (%0)
  looping thru 0 args of 0:FunctionRef_Valid_10:Reducer:decl r
wyboogie.NotImplementedYet: indirect invoke in 5:int:icall %3 (%4)
	at wyboogie.Wyil2Boogie.writeIndirectInvoke(Wyil2Boogie.java:1140)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:969)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== FunctionRef_Valid_11.whiley =====
wyboogie.NotImplementedYet: createConstant(&FunctionRef_Valid_11:sum():function(FunctionRef_Valid_11:LinkedList)->(int)):function(FunctionRef_Valid_11:LinkedList)->(int)
	at wyboogie.Wyil2Boogie.createConstant(Wyil2Boogie.java:1502)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1374)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:545)
	at java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:438)
	at wyboogie.Wyil2Boogie.createConstant(Wyil2Boogie.java:1491)
	at wyboogie.Wyil2Boogie.writeConstant(Wyil2Boogie.java:241)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:184)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== FunctionRef_Valid_12.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:null|FunctionRef_Valid_12:SizeGetter:read (%0)
  looping thru 0 args of 0:null|FunctionRef_Valid_12:SizeGetter:decl x
  looping thru 0 args of 3:type:const FunctionRef_Valid_12:SizeGetter
checking: 7:int:const 1
  looping thru 0 args of 7:int:const 1
checking: 10:int:const 0
  looping thru 0 args of 10:int:const 0
checking: 2:int:const 1
  looping thru 0 args of 2:int:const 1
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call FunctionRef_Valid_12:f(%0)
  looping thru 0 args of 0:function(FunctionRef_Valid_12:Sized)->(int):const &FunctionRef_Valid_12:getSize():function(FunctionRef_Valid_12:Sized)->(int)
  looping thru 0 args of 2:int:const 1
wyboogie.NotImplementedYet: createConstant(&FunctionRef_Valid_12:getSize():function(FunctionRef_Valid_12:Sized)->(int)):function(FunctionRef_Valid_12:Sized)->(int)
	at wyboogie.Wyil2Boogie.createConstant(Wyil2Boogie.java:1502)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:963)
	at wyboogie.Wyil2Boogie.writeInvoke(Wyil2Boogie.java:1159)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:972)
	at wyboogie.Wyil2Boogie.writeEquality(Wyil2Boogie.java:1237)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1032)
	at wyboogie.Wyil2Boogie.boolExpr(Wyil2Boogie.java:934)
	at wyboogie.Wyil2Boogie.writeAssume(Wyil2Boogie.java:703)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:598)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== FunctionRef_Valid_13.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:FunctionRef_Valid_13:SizeGetter|FunctionRef_Valid_13:SizeSetter:read (%0)
  looping thru 0 args of 0:FunctionRef_Valid_13:SizeGetter|FunctionRef_Valid_13:SizeSetter:decl x
  looping thru 0 args of 3:type:const FunctionRef_Valid_13:SizeGetter
checking: 7:int:const 1
  looping thru 0 args of 7:int:const 1
checking: 10:int:const 0
  looping thru 0 args of 10:int:const 0
checking: 3:int:recfield %2 value
  looping thru 1 args of 3:int:recfield %2 value
  looping thru 1 args of 2:FunctionRef_Valid_13:Sized:read (%0)
  looping thru 0 args of 0:FunctionRef_Valid_13:Sized:decl _this
checking: 4:{int value}:recinit (%3)
  looping thru 1 args of 4:{int value}:recinit (%3)
  looping thru 1 args of 3:int:read (%1)
  looping thru 0 args of 1:int:decl value
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call FunctionRef_Valid_13:f(%0)
  looping thru 0 args of 0:function(FunctionRef_Valid_13:Sized)->(int):const &FunctionRef_Valid_13:getSize():function(FunctionRef_Valid_13:Sized)->(int)
  looping thru 0 args of 2:int:const 1
wyboogie.NotImplementedYet: createConstant(&FunctionRef_Valid_13:getSize():function(FunctionRef_Valid_13:Sized)->(int)):function(FunctionRef_Valid_13:Sized)->(int)
	at wyboogie.Wyil2Boogie.createConstant(Wyil2Boogie.java:1502)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:963)
	at wyboogie.Wyil2Boogie.writeInvoke(Wyil2Boogie.java:1159)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:972)
	at wyboogie.Wyil2Boogie.writeEquality(Wyil2Boogie.java:1237)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1032)
	at wyboogie.Wyil2Boogie.boolExpr(Wyil2Boogie.java:934)
	at wyboogie.Wyil2Boogie.writeAssume(Wyil2Boogie.java:703)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:598)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== FunctionRef_Valid_2.whiley =====
checking: 2:int:const 0
  looping thru 0 args of 2:int:const 0
checking: 4:int:icall %2 (%3)
  looping thru 1 args of 4:int:icall %2 (%3)
  looping thru 1 args of 2:function(int)->(int):read (%0)
  looping thru 0 args of 0:function(int)->(int):decl func
wyboogie.NotImplementedYet: indirect invoke in 4:int:icall %2 (%3)
	at wyboogie.Wyil2Boogie.writeIndirectInvoke(Wyil2Boogie.java:1140)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:969)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== FunctionRef_Valid_4.whiley =====
wyboogie.NotImplementedYet: createConstant(&FunctionRef_Valid_4:f1():function(int)->(int)):function(int)->(int)
	at wyboogie.Wyil2Boogie.createConstant(Wyil2Boogie.java:1502)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1374)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:545)
	at java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:438)
	at wyboogie.Wyil2Boogie.createConstant(Wyil2Boogie.java:1491)
	at wyboogie.Wyil2Boogie.writeConstant(Wyil2Boogie.java:241)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:184)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== FunctionRef_Valid_5.whiley =====
mangle test : method()->() to test$2
checking: 2:int:read (%0)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 6:int:icall %4 (%5)
  looping thru 1 args of 6:int:icall %4 (%5)
  looping thru 1 args of 4:function(int)->(int):recfield %3 read
  looping thru 1 args of 3:FunctionRef_Valid_5:Func:read (%0)
  looping thru 0 args of 0:FunctionRef_Valid_5:Func:decl f
wyboogie.NotImplementedYet: indirect invoke in 6:int:icall %4 (%5)
	at wyboogie.Wyil2Boogie.writeIndirectInvoke(Wyil2Boogie.java:1140)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:969)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== FunctionRef_Valid_6.whiley =====
mangle test : method()->() to test$2
checking: 2:int:read (%0)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 6:int:icall %4 (%5)
  looping thru 1 args of 6:int:icall %4 (%5)
  looping thru 1 args of 4:function(int)->(int):recfield %3 read
  looping thru 1 args of 3:FunctionRef_Valid_6:Func:read (%0)
  looping thru 0 args of 0:FunctionRef_Valid_6:Func:decl f
wyboogie.NotImplementedYet: indirect invoke in 6:int:icall %4 (%5)
	at wyboogie.Wyil2Boogie.writeIndirectInvoke(Wyil2Boogie.java:1140)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:969)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== FunctionRef_Valid_7.whiley =====
mangle test : method()->() to test$2
checking: 7:int:add (%3, %6)
  looping thru 2 args of 7:int:add (%3, %6)
  looping thru 1 args of 3:int:read (%1)
  looping thru 0 args of 1:int:decl x
  looping thru 1 args of 6:int:recfield %5 data
  looping thru 1 args of 5:{int data}:deref (%4)
  looping thru 1 args of 4:FunctionRef_Valid_7:Proc:read (%0)
  looping thru 0 args of 0:FunctionRef_Valid_7:Proc:decl _this
wyboogie.NotImplementedYet: dereference in 5:{int data}:deref (%4)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:986)
	at wyboogie.Wyil2Boogie.writeFieldLoad(Wyil2Boogie.java:1133)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:966)
	at wyboogie.Wyil2Boogie.infixOp(Wyil2Boogie.java:1079)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1001)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== FunctionRef_Valid_8.whiley =====
mangle test : method()->() to test$2
checking: 3:int:neg (%2)
  looping thru 1 args of 3:int:neg (%2)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl a
checking: 2:int:read (%0)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 5:int:icall %3 (%4)
  looping thru 1 args of 5:int:icall %3 (%4)
  looping thru 1 args of 3:function(int)->(int):read (%0)
  looping thru 0 args of 0:function(int)->(int):decl read
wyboogie.NotImplementedYet: indirect invoke in 5:int:icall %3 (%4)
	at wyboogie.Wyil2Boogie.writeIndirectInvoke(Wyil2Boogie.java:1140)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:969)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== FunctionRef_Valid_9.whiley =====
mangle test : method()->() to test$2
checking: 5:int:add (%3, %4)
  looping thru 2 args of 5:int:add (%3, %4)
  looping thru 1 args of 3:int:read (%1)
  looping thru 0 args of 1:int:decl x
  looping thru 0 args of 4:int:const 1
checking: 7:int:icall %5 (%6)
  looping thru 1 args of 7:int:icall %5 (%6)
  looping thru 1 args of 5:function(int)->(int):recfield %4 func
  looping thru 1 args of 4:{function(int)->(int) func}:deref (%3)
  looping thru 1 args of 3:FunctionRef_Valid_9:Proc:read (%0)
  looping thru 0 args of 0:FunctionRef_Valid_9:Proc:decl _this
wyboogie.NotImplementedYet: indirect invoke in 7:int:icall %5 (%6)
	at wyboogie.Wyil2Boogie.writeIndirectInvoke(Wyil2Boogie.java:1140)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:969)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Function_Valid_1.whiley =====
mangle f : function(int)->(int) to f$2
checking: 2:int:const 1
  looping thru 0 args of 2:int:const 1
checking: 2:int:const 2
  looping thru 0 args of 2:int:const 2
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call Function_Valid_1:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 2
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:call Function_Valid_1:f(%5)
  looping thru 0 args of 5:bool:const false
  looping thru 0 args of 7:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Function_Valid_11.whiley =====
Error compiling Function_Valid_11.whiley
./Function_Valid_11.whiley:15: unable to resolve name (f(int) is ambiguous
	found: Function_Valid_11:f : function(Function_Valid_11:fr8nat)->(bool)
	found: Function_Valid_11:f : function(Function_Valid_11:fr8neg)->(bool))
    assume f(x) == true
           ^^^^

===== Function_Valid_12.whiley =====
mangle f : function(int[])->(int[]) to f$2
mangle f : function(bool[])->(bool[]) to f$3
checking: 6:int:add (%3, %5)
  looping thru 2 args of 6:int:add (%3, %5)
  looping thru 1 args of 3:int:recfield %2 op
  looping thru 1 args of 2:Function_Valid_12:msg:read (%0)
  looping thru 0 args of 0:Function_Valid_12:msg:decl m
  looping thru 1 args of 5:int:recfield %4 s
  looping thru 1 args of 4:Function_Valid_12:msg:read (%0)
  looping thru 0 args of 0:Function_Valid_12:msg:decl m
checking: 2:int[]:read (%0)
  looping thru 1 args of 2:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
checking: 2:bool[]:read (%0)
  looping thru 1 args of 2:bool[]:read (%0)
  looping thru 0 args of 0:bool[]:decl ls
checking: 9:bool:eq (%4, %8)
  looping thru 2 args of 9:bool:eq (%4, %8)
  looping thru 1 args of 4:int[]:call Function_Valid_12:f(%3)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 3 args of 8:int[]:arrinit (%5, %6, %7)
  looping thru 0 args of 5:int:const 1
  looping thru 0 args of 6:int:const 2
  looping thru 0 args of 7:int:const 3
checking: 20:bool:eq (%15, %19)
  looping thru 2 args of 20:bool:eq (%15, %19)
  looping thru 1 args of 15:bool[]:call Function_Valid_12:f(%14)
  looping thru 3 args of 14:bool[]:arrinit (%11, %12, %13)
  looping thru 0 args of 11:bool:const true
  looping thru 0 args of 12:bool:const false
  looping thru 0 args of 13:bool:const true
  looping thru 3 args of 19:bool[]:arrinit (%16, %17, %18)
  looping thru 0 args of 16:bool:const true
  looping thru 0 args of 17:bool:const false
  looping thru 0 args of 18:bool:const true
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 4 verified, 0 errors
===== Function_Valid_13.whiley =====
checking: 2:int:read (%0)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 7:bool:neq (%4, %6)
  looping thru 2 args of 7:bool:neq (%4, %6)
  looping thru 1 args of 4:int:call Function_Valid_13:f(%3)
  looping thru 1 args of 3:int:read (%0)
  looping thru 0 args of 0:int:decl i
  looping thru 1 args of 6:int:call Function_Valid_13:f(%5)
  looping thru 1 args of 5:int:read (%1)
  looping thru 0 args of 1:int:decl j
checking: 10:{int x,int y}:recinit (%8, %9)
  looping thru 2 args of 10:{int x,int y}:recinit (%8, %9)
  looping thru 1 args of 8:int:read (%0)
  looping thru 0 args of 0:int:decl i
  looping thru 1 args of 9:int:read (%1)
  looping thru 0 args of 1:int:decl j
checking: 16:{int x,int y}:recinit (%13, %15)
  looping thru 2 args of 16:{int x,int y}:recinit (%13, %15)
  looping thru 0 args of 13:int:const 1
  looping thru 1 args of 15:int:neg (%14)
  looping thru 0 args of 14:int:const 1
checking: 9:bool:eq (%4, %8)
  looping thru 2 args of 9:bool:eq (%4, %8)
  looping thru 1 args of 4:Function_Valid_13:Point:read (%3)
  looping thru 1 args of 3:Function_Valid_13:Point:decl rs = 2
  looping thru 2 args of 2:Function_Valid_13:Point:call Function_Valid_13:Point(%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 2 args of 8:{int x,int y}:recinit (%5, %7)
  looping thru 0 args of 5:int:const 1
  looping thru 1 args of 7:int:neg (%6)
  looping thru 0 args of 6:int:const 1
assign 1 := 1
checking: 11:Function_Valid_13:Point:read (%3)
  looping thru 1 args of 11:Function_Valid_13:Point:read (%3)
  looping thru 1 args of 3:Function_Valid_13:Point:decl rs = 2
  looping thru 2 args of 2:Function_Valid_13:Point:call Function_Valid_13:Point(%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
checking: 14:Function_Valid_13:Point:call Function_Valid_13:Point(%12, %13)
  looping thru 2 args of 14:Function_Valid_13:Point:call Function_Valid_13:Point(%12, %13)
  looping thru 0 args of 12:int:const 1
  looping thru 0 args of 13:int:const 2
checking: 20:bool:eq (%16, %19)
  looping thru 2 args of 20:bool:eq (%16, %19)
  looping thru 1 args of 16:Function_Valid_13:Point:read (%3)
  looping thru 1 args of 3:Function_Valid_13:Point:decl rs = 2
  looping thru 2 args of 2:Function_Valid_13:Point:call Function_Valid_13:Point(%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 2 args of 19:{int x,int y}:recinit (%17, %18)
  looping thru 0 args of 17:int:const 1
  looping thru 0 args of 18:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Function_Valid_14.whiley =====
mangle f : function(bool)->(int) to f$2
mangle f : function(int[])->(int) to f$3
checking: 2:int:const 1
  looping thru 0 args of 2:int:const 1
checking: 2:int:const 2
  looping thru 0 args of 2:int:const 2
checking: 2:int:const 3
  looping thru 0 args of 2:int:const 3
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call Function_Valid_14:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 1
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:call Function_Valid_14:f(%5)
  looping thru 0 args of 5:bool:const false
  looping thru 0 args of 7:int:const 2
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 1 args of 14:int:call Function_Valid_14:f(%13)
  looping thru 3 args of 13:int[]:arrinit (%10, %11, %12)
  looping thru 0 args of 10:int:const 1
  looping thru 0 args of 11:int:const 2
  looping thru 0 args of 12:int:const 3
  looping thru 0 args of 15:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 4 verified, 0 errors
===== Function_Valid_15.whiley =====
Error compiling Function_Valid_15.whiley
./Function_Valid_15.whiley:3: unknown variable
type msg1 is {int op, int s} where op == 1
                                   ^^

===== Function_Valid_16.whiley =====
checking: 7:int:add (%5, %6)
  looping thru 2 args of 7:int:add (%5, %6)
  looping thru 1 args of 5:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 6:int:const 1
checking: 8:int:add (%6, %7)
  looping thru 2 args of 8:int:add (%6, %7)
  looping thru 1 args of 6:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 7:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 6:bool:lt (%4, %5)
  looping thru 2 args of 6:bool:lt (%4, %5)
  looping thru 1 args of 4:int:read (%1)
  looping thru 1 args of 1:int:decl a = 0
  looping thru 0 args of 0:int:const 2
  looping thru 1 args of 5:int:read (%3)
  looping thru 1 args of 3:int:decl b = 2
  looping thru 0 args of 2:int:const 1
assign 1 := 1
checking: 7:int:read (%1)
  looping thru 1 args of 7:int:read (%1)
  looping thru 1 args of 1:int:decl a = 0
  looping thru 0 args of 0:int:const 2
checking: 9:int:call Function_Valid_16:f(%8)
  looping thru 1 args of 9:int:call Function_Valid_16:f(%8)
  looping thru 1 args of 8:int:read (%3)
  looping thru 1 args of 3:int:decl b = 2
  looping thru 0 args of 2:int:const 1
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:int:read (%16)
  looping thru 1 args of 16:int:decl x = 15
  looping thru 2 args of 15:int:call Function_Valid_16:g(%13, %14)
  looping thru 1 args of 13:int:read (%1)
  looping thru 1 args of 1:int:decl a = 0
  looping thru 0 args of 0:int:const 2
  looping thru 1 args of 14:int:read (%3)
  looping thru 1 args of 3:int:decl b = 2
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 18:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Function_Valid_17.whiley =====
checking: 4:int:add (%2, %3)
  looping thru 2 args of 4:int:add (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 3:int:const 1
checking: 5:int:add (%3, %4)
  looping thru 2 args of 5:int:add (%3, %4)
  looping thru 1 args of 3:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 4:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 6:bool:lt (%4, %5)
  looping thru 2 args of 6:bool:lt (%4, %5)
  looping thru 1 args of 4:int:read (%1)
  looping thru 1 args of 1:int:decl a = 0
  looping thru 0 args of 0:int:const 2
  looping thru 1 args of 5:int:read (%3)
  looping thru 1 args of 3:int:decl b = 2
  looping thru 0 args of 2:int:const 1
assign 1 := 1
checking: 7:int:read (%1)
  looping thru 1 args of 7:int:read (%1)
  looping thru 1 args of 1:int:decl a = 0
  looping thru 0 args of 0:int:const 2
checking: 9:int:call Function_Valid_17:f(%8)
  looping thru 1 args of 9:int:call Function_Valid_17:f(%8)
  looping thru 1 args of 8:int:read (%3)
  looping thru 1 args of 3:int:decl b = 2
  looping thru 0 args of 2:int:const 1
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:int:read (%16)
  looping thru 1 args of 16:int:decl x = 15
  looping thru 2 args of 15:int:call Function_Valid_17:g(%13, %14)
  looping thru 1 args of 13:int:read (%1)
  looping thru 1 args of 1:int:decl a = 0
  looping thru 0 args of 0:int:const 2
  looping thru 1 args of 14:int:read (%3)
  looping thru 1 args of 3:int:decl b = 2
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 18:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Function_Valid_18.whiley =====
checking: 15:bool:gteq (%13, %14)
  looping thru 2 args of 15:bool:gteq (%13, %14)
  looping thru 1 args of 13:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 14:int:const 0
checking: 16:int:read (%0)
  looping thru 1 args of 16:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 20:int:neg (%19)
  looping thru 1 args of 20:int:neg (%19)
  looping thru 1 args of 19:int:read (%0)
  looping thru 0 args of 0:int:decl x
wyboogie.NotImplementedYet: comparison of void intersection type: Function_Valid_18:nat and Function_Valid_18:nat in 4:bool:eq (%2, %3)
	at wyboogie.Wyil2Boogie.writeEquality(Wyil2Boogie.java:1234)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1032)
	at wyboogie.Wyil2Boogie.boolExpr(Wyil2Boogie.java:934)
	at wyboogie.Wyil2Boogie.writeConjunction(Wyil2Boogie.java:476)
	at wyboogie.Wyil2Boogie.writeFunction(Wyil2Boogie.java:439)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:278)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Function_Valid_2.whiley =====
checking: 2:int:read (%0)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:call Function_Valid_2:f(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl y = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 4:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Function_Valid_20.whiley =====
checking: 2:Function_Valid_20:fr2nat:read (%0)
  looping thru 1 args of 2:Function_Valid_20:fr2nat:read (%0)
  looping thru 0 args of 0:Function_Valid_20:fr2nat:decl x
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:call Function_Valid_20:f(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl y = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 4:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Function_Valid_21.whiley =====
checking: 2:Function_Valid_21:fr2nat:read (%0)
  looping thru 1 args of 2:Function_Valid_21:fr2nat:read (%0)
  looping thru 0 args of 0:Function_Valid_21:fr2nat:decl x
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:call Function_Valid_21:f(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl y = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 4:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Function_Valid_3.whiley =====
checking: 2:int:read (%0)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:call Function_Valid_3:f(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl y = 0
  looping thru 0 args of 0:int:const 234987234987234982304980130982398723
  looping thru 1 args of 4:int:read (%1)
  looping thru 1 args of 1:int:decl y = 0
  looping thru 0 args of 0:int:const 234987234987234982304980130982398723
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Function_Valid_4.whiley =====
checking: 4:int:add (%2, %3)
  looping thru 2 args of 4:int:add (%2, %3)
  looping thru 1 args of 2:Function_Valid_4:fr4nat:read (%0)
  looping thru 0 args of 0:Function_Valid_4:fr4nat:decl x
  looping thru 0 args of 3:int:const 1
checking: 2:Function_Valid_4:fr4nat:read (%0)
  looping thru 1 args of 2:Function_Valid_4:fr4nat:read (%0)
  looping thru 0 args of 0:Function_Valid_4:fr4nat:decl x
checking: 6:bool:eq (%4, %5)
  looping thru 2 args of 6:bool:eq (%4, %5)
  looping thru 1 args of 4:int:call Function_Valid_4:f(%3)
  looping thru 1 args of 3:Function_Valid_4:fr4nat:call Function_Valid_4:g(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl y = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 5:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Function_Valid_5.whiley =====
checking: 4:int:add (%2, %3)
  looping thru 2 args of 4:int:add (%2, %3)
  looping thru 1 args of 2:Function_Valid_5:fr4nat:read (%0)
  looping thru 0 args of 0:Function_Valid_5:fr4nat:decl x
  looping thru 0 args of 3:int:const 1
checking: 2:Function_Valid_5:fr4nat:read (%0)
  looping thru 1 args of 2:Function_Valid_5:fr4nat:read (%0)
  looping thru 0 args of 0:Function_Valid_5:fr4nat:decl x
checking: 6:bool:eq (%4, %5)
  looping thru 2 args of 6:bool:eq (%4, %5)
  looping thru 1 args of 4:int:call Function_Valid_5:f(%3)
  looping thru 1 args of 3:Function_Valid_5:fr4nat:call Function_Valid_5:g(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl y = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 5:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Function_Valid_6.whiley =====
checking: 23:bool:lt (%20, %22)
  looping thru 2 args of 23:bool:lt (%20, %22)
  looping thru 1 args of 20:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
  looping thru 1 args of 22:int:arrlen (%21)
  looping thru 1 args of 21:Function_Valid_6:fr5nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_6:fr5nat[]:decl xs
checking: 28:bool:gt (%26, %27)
  looping thru 2 args of 28:bool:gt (%26, %27)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 26:Function_Valid_6:fr5nat:arridx (%24, %25)
  looping thru 1 args of 24:Function_Valid_6:fr5nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_6:fr5nat[]:decl xs
  looping thru 1 args of 25:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 27:int:const 1
assign 1 := 1
checking: 31:int|Function_Valid_6:fr5nat:arridx (%29, %30)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(ys)
  looping thru 2 args of 31:int|Function_Valid_6:fr5nat:arridx (%29, %30)
  looping thru 1 args of 29:int|Function_Valid_6:fr5nat[]:read (%6)
  looping thru 1 args of 6:Function_Valid_6:fr5nat[]:decl ys = 5
  looping thru 2 args of 5:int[]:arrgen (%2, %4)
  looping thru 0 args of 2:int:const 0
  looping thru 1 args of 4:int:arrlen (%3)
  looping thru 1 args of 3:Function_Valid_6:fr5nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_6:fr5nat[]:decl xs
  looping thru 1 args of 30:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
checking: 34:Function_Valid_6:fr5nat:arridx (%32, %33)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 34:Function_Valid_6:fr5nat:arridx (%32, %33)
  looping thru 1 args of 32:Function_Valid_6:fr5nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_6:fr5nat[]:decl xs
  looping thru 1 args of 33:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
assign 1 := 1
checking: 38:int:read (%8)
  looping thru 1 args of 38:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
checking: 41:int:add (%39, %40)
  looping thru 2 args of 41:int:add (%39, %40)
  looping thru 1 args of 39:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 40:int:const 1
checking: 45:int|Function_Valid_6:fr5nat[]:read (%6)
  looping thru 1 args of 45:int|Function_Valid_6:fr5nat[]:read (%6)
  looping thru 1 args of 6:Function_Valid_6:fr5nat[]:decl ys = 5
  looping thru 2 args of 5:int[]:arrgen (%2, %4)
  looping thru 0 args of 2:int:const 0
  looping thru 1 args of 4:int:arrlen (%3)
  looping thru 1 args of 3:Function_Valid_6:fr5nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_6:fr5nat[]:decl xs
checking: 2:Function_Valid_6:fr5nat[]:read (%0)
  looping thru 1 args of 2:Function_Valid_6:fr5nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_6:fr5nat[]:decl x
checking: 12:bool:eq (%7, %11)
  looping thru 2 args of 12:bool:eq (%7, %11)
  looping thru 1 args of 7:int[]:call Function_Valid_6:f(%6)
  looping thru 1 args of 6:Function_Valid_6:fr5nat[]:call Function_Valid_6:g(%5)
  looping thru 1 args of 5:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl ys = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 3 args of 11:int[]:arrinit (%8, %9, %10)
  looping thru 0 args of 8:int:const 0
  looping thru 0 args of 9:int:const 2
  looping thru 0 args of 10:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Function_Valid_7.whiley =====
checking: 22:bool:lt (%19, %21)
  looping thru 2 args of 22:bool:lt (%19, %21)
  looping thru 1 args of 19:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
  looping thru 1 args of 21:int:arrlen (%20)
  looping thru 1 args of 20:Function_Valid_7:fr5nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_7:fr5nat[]:decl xs
checking: 27:bool:gt (%25, %26)
  looping thru 2 args of 27:bool:gt (%25, %26)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 25:Function_Valid_7:fr5nat:arridx (%23, %24)
  looping thru 1 args of 23:Function_Valid_7:fr5nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_7:fr5nat[]:decl xs
  looping thru 1 args of 24:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 26:int:const 1
assign 1 := 1
checking: 30:int|Function_Valid_7:fr5nat:arridx (%28, %29)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(ys)
  looping thru 2 args of 30:int|Function_Valid_7:fr5nat:arridx (%28, %29)
  looping thru 1 args of 28:int|Function_Valid_7:fr5nat[]:read (%6)
  looping thru 1 args of 6:Function_Valid_7:fr5nat[]:decl ys = 5
  looping thru 2 args of 5:int[]:arrgen (%2, %4)
  looping thru 0 args of 2:int:const 0
  looping thru 1 args of 4:int:arrlen (%3)
  looping thru 1 args of 3:Function_Valid_7:fr5nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_7:fr5nat[]:decl xs
  looping thru 1 args of 29:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
checking: 33:Function_Valid_7:fr5nat:arridx (%31, %32)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 33:Function_Valid_7:fr5nat:arridx (%31, %32)
  looping thru 1 args of 31:Function_Valid_7:fr5nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_7:fr5nat[]:decl xs
  looping thru 1 args of 32:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
assign 1 := 1
checking: 37:int:read (%8)
  looping thru 1 args of 37:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
checking: 40:int:add (%38, %39)
  looping thru 2 args of 40:int:add (%38, %39)
  looping thru 1 args of 38:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 39:int:const 1
checking: 44:int|Function_Valid_7:fr5nat[]:read (%6)
  looping thru 1 args of 44:int|Function_Valid_7:fr5nat[]:read (%6)
  looping thru 1 args of 6:Function_Valid_7:fr5nat[]:decl ys = 5
  looping thru 2 args of 5:int[]:arrgen (%2, %4)
  looping thru 0 args of 2:int:const 0
  looping thru 1 args of 4:int:arrlen (%3)
  looping thru 1 args of 3:Function_Valid_7:fr5nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_7:fr5nat[]:decl xs
checking: 2:Function_Valid_7:fr5nat[]:read (%0)
  looping thru 1 args of 2:Function_Valid_7:fr5nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_7:fr5nat[]:decl x
checking: 12:bool:eq (%7, %11)
  looping thru 2 args of 12:bool:eq (%7, %11)
  looping thru 1 args of 7:int[]:call Function_Valid_7:f(%6)
  looping thru 1 args of 6:Function_Valid_7:fr5nat[]:call Function_Valid_7:g(%5)
  looping thru 1 args of 5:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl ys = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 3 args of 11:int[]:arrinit (%8, %9, %10)
  looping thru 0 args of 8:int:const 0
  looping thru 0 args of 9:int:const 2
  looping thru 0 args of 10:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Function_Valid_8.whiley =====
checking: 23:bool:lt (%20, %22)
  looping thru 2 args of 23:bool:lt (%20, %22)
  looping thru 1 args of 20:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
  looping thru 1 args of 22:int:arrlen (%21)
  looping thru 1 args of 21:Function_Valid_8:nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_8:nat[]:decl xs
checking: 28:bool:gt (%26, %27)
  looping thru 2 args of 28:bool:gt (%26, %27)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 26:Function_Valid_8:nat:arridx (%24, %25)
  looping thru 1 args of 24:Function_Valid_8:nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_8:nat[]:decl xs
  looping thru 1 args of 25:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 27:int:const 1
assign 1 := 1
checking: 31:int|Function_Valid_8:nat:arridx (%29, %30)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(ys)
  looping thru 2 args of 31:int|Function_Valid_8:nat:arridx (%29, %30)
  looping thru 1 args of 29:int|Function_Valid_8:nat[]:read (%6)
  looping thru 1 args of 6:Function_Valid_8:nat[]:decl ys = 5
  looping thru 2 args of 5:int[]:arrgen (%2, %4)
  looping thru 0 args of 2:int:const 0
  looping thru 1 args of 4:int:arrlen (%3)
  looping thru 1 args of 3:Function_Valid_8:nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_8:nat[]:decl xs
  looping thru 1 args of 30:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
checking: 34:Function_Valid_8:nat:arridx (%32, %33)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 34:Function_Valid_8:nat:arridx (%32, %33)
  looping thru 1 args of 32:Function_Valid_8:nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_8:nat[]:decl xs
  looping thru 1 args of 33:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
assign 1 := 1
checking: 38:int:read (%8)
  looping thru 1 args of 38:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
checking: 41:int:add (%39, %40)
  looping thru 2 args of 41:int:add (%39, %40)
  looping thru 1 args of 39:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 40:int:const 1
checking: 45:int|Function_Valid_8:nat[]:read (%6)
  looping thru 1 args of 45:int|Function_Valid_8:nat[]:read (%6)
  looping thru 1 args of 6:Function_Valid_8:nat[]:decl ys = 5
  looping thru 2 args of 5:int[]:arrgen (%2, %4)
  looping thru 0 args of 2:int:const 0
  looping thru 1 args of 4:int:arrlen (%3)
  looping thru 1 args of 3:Function_Valid_8:nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_8:nat[]:decl xs
checking: 2:int[]:read (%0)
  looping thru 1 args of 2:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl x
checking: 12:bool:eq (%7, %11)
  looping thru 2 args of 12:bool:eq (%7, %11)
  looping thru 1 args of 7:int[]:call Function_Valid_8:f(%6)
  looping thru 1 args of 6:Function_Valid_8:nat[]:call Function_Valid_8:g(%5)
  looping thru 1 args of 5:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl ys = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 3 args of 11:int[]:arrinit (%8, %9, %10)
  looping thru 0 args of 8:int:const 0
  looping thru 0 args of 9:int:const 2
  looping thru 0 args of 10:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Function_Valid_9.whiley =====
checking: 22:bool:lt (%19, %21)
  looping thru 2 args of 22:bool:lt (%19, %21)
  looping thru 1 args of 19:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
  looping thru 1 args of 21:int:arrlen (%20)
  looping thru 1 args of 20:Function_Valid_9:nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_9:nat[]:decl xs
checking: 27:bool:gt (%25, %26)
  looping thru 2 args of 27:bool:gt (%25, %26)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 25:Function_Valid_9:nat:arridx (%23, %24)
  looping thru 1 args of 23:Function_Valid_9:nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_9:nat[]:decl xs
  looping thru 1 args of 24:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 26:int:const 1
assign 1 := 1
checking: 30:int|Function_Valid_9:nat:arridx (%28, %29)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(ys)
  looping thru 2 args of 30:int|Function_Valid_9:nat:arridx (%28, %29)
  looping thru 1 args of 28:int|Function_Valid_9:nat[]:read (%6)
  looping thru 1 args of 6:Function_Valid_9:nat[]:decl ys = 5
  looping thru 2 args of 5:int[]:arrgen (%2, %4)
  looping thru 0 args of 2:int:const 0
  looping thru 1 args of 4:int:arrlen (%3)
  looping thru 1 args of 3:Function_Valid_9:nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_9:nat[]:decl xs
  looping thru 1 args of 29:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
checking: 33:Function_Valid_9:nat:arridx (%31, %32)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 33:Function_Valid_9:nat:arridx (%31, %32)
  looping thru 1 args of 31:Function_Valid_9:nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_9:nat[]:decl xs
  looping thru 1 args of 32:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
assign 1 := 1
checking: 37:int:read (%8)
  looping thru 1 args of 37:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
checking: 40:int:add (%38, %39)
  looping thru 2 args of 40:int:add (%38, %39)
  looping thru 1 args of 38:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 39:int:const 1
checking: 44:int|Function_Valid_9:nat[]:read (%6)
  looping thru 1 args of 44:int|Function_Valid_9:nat[]:read (%6)
  looping thru 1 args of 6:Function_Valid_9:nat[]:decl ys = 5
  looping thru 2 args of 5:int[]:arrgen (%2, %4)
  looping thru 0 args of 2:int:const 0
  looping thru 1 args of 4:int:arrlen (%3)
  looping thru 1 args of 3:Function_Valid_9:nat[]:read (%0)
  looping thru 0 args of 0:Function_Valid_9:nat[]:decl xs
checking: 2:int[]:read (%0)
  looping thru 1 args of 2:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl x
checking: 21:bool:eq (%12, %20)
  looping thru 2 args of 21:bool:eq (%12, %20)
  looping thru 1 args of 12:int[]:call Function_Valid_9:f(%11)
  looping thru 1 args of 11:Function_Valid_9:nat[]:call Function_Valid_9:g(%10)
  looping thru 1 args of 10:int[]:read (%9)
  looping thru 1 args of 9:int[]:decl ys = 8
  looping thru 7 args of 8:int[]:arrinit (%1, %2, %3, %4, %5, %6, %7)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 12309812
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 2
  looping thru 0 args of 4:int:const 2987
  looping thru 0 args of 5:int:const 2349872
  looping thru 0 args of 6:int:const 234987234987
  looping thru 0 args of 7:int:const 234987234987234
  looping thru 7 args of 20:int[]:arrinit (%13, %14, %15, %16, %17, %18, %19)
  looping thru 0 args of 13:int:const 0
  looping thru 0 args of 14:int:const 0
  looping thru 0 args of 15:int:const 2
  looping thru 0 args of 16:int:const 2987
  looping thru 0 args of 17:int:const 2349872
  looping thru 0 args of 18:int:const 234987234987
  looping thru 0 args of 19:int:const 234987234987234
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== HexAssign_Valid_1.whiley =====
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 200
  looping thru 0 args of 3:int:const 200
assign 1 := 1
checking: 6:int:read (%1)
  looping thru 1 args of 6:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 200
checking: 7:int:const 1
  looping thru 0 args of 7:int:const 1
checking: 11:bool:eq (%9, %10)
  looping thru 2 args of 11:bool:eq (%9, %10)
  looping thru 1 args of 9:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 200
  looping thru 0 args of 10:int:const 1
assign 1 := 1
checking: 13:int:read (%1)
  looping thru 1 args of 13:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 200
checking: 14:int:const 0
  looping thru 0 args of 14:int:const 0
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 1 args of 16:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 200
  looping thru 0 args of 17:int:const 0
assign 1 := 1
checking: 20:int:read (%1)
  looping thru 1 args of 20:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 200
checking: 21:int:const 24343
  looping thru 0 args of 21:int:const 24343
checking: 25:bool:eq (%23, %24)
  looping thru 2 args of 25:bool:eq (%23, %24)
  looping thru 1 args of 23:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 200
  looping thru 0 args of 24:int:const 24343
assign 1 := 1
checking: 27:int:read (%1)
  looping thru 1 args of 27:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 200
checking: 28:int:const 2143
  looping thru 0 args of 28:int:const 2143
checking: 32:bool:eq (%30, %31)
  looping thru 2 args of 32:bool:eq (%30, %31)
  looping thru 1 args of 30:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 200
  looping thru 0 args of 31:int:const 2143
assign 1 := 1
checking: 34:int:read (%1)
  looping thru 1 args of 34:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 200
checking: 35:int:const 2143
  looping thru 0 args of 35:int:const 2143
checking: 39:bool:eq (%37, %38)
  looping thru 2 args of 39:bool:eq (%37, %38)
  looping thru 1 args of 37:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 200
  looping thru 0 args of 38:int:const 2143
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== IfElse_Valid_1.whiley =====
checking: 4:bool:lt (%2, %3)
  looping thru 2 args of 4:bool:lt (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 3:int:const 10
checking: 6:int:neg (%5)
  looping thru 1 args of 6:int:neg (%5)
  looping thru 0 args of 5:int:const 1
checking: 11:bool:gt (%9, %10)
  looping thru 2 args of 11:bool:gt (%9, %10)
  looping thru 1 args of 9:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 10:int:const 10
checking: 12:int:const 1
  looping thru 0 args of 12:int:const 1
checking: 15:int:const 0
  looping thru 0 args of 15:int:const 0
checking: 4:bool:eq (%1, %3)
  looping thru 2 args of 4:bool:eq (%1, %3)
  looping thru 1 args of 1:int:call IfElse_Valid_1:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 3:int:neg (%2)
  looping thru 0 args of 2:int:const 1
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:int:call IfElse_Valid_1:f(%6)
  looping thru 0 args of 6:int:const 10
  looping thru 0 args of 8:int:const 0
checking: 14:bool:eq (%12, %13)
  looping thru 2 args of 14:bool:eq (%12, %13)
  looping thru 1 args of 12:int:call IfElse_Valid_1:f(%11)
  looping thru 0 args of 11:int:const 11
  looping thru 0 args of 13:int:const 1
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:int:call IfElse_Valid_1:f(%16)
  looping thru 0 args of 16:int:const 1212
  looping thru 0 args of 18:int:const 1
checking: 26:bool:eq (%23, %25)
  looping thru 2 args of 26:bool:eq (%23, %25)
  looping thru 1 args of 23:int:call IfElse_Valid_1:f(%22)
  looping thru 1 args of 22:int:neg (%21)
  looping thru 0 args of 21:int:const 1212
  looping thru 1 args of 25:int:neg (%24)
  looping thru 0 args of 24:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== IfElse_Valid_2.whiley =====
checking: 4:bool:lt (%2, %3)
  looping thru 2 args of 4:bool:lt (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 3:int:const 10
checking: 5:int:const 1
  looping thru 0 args of 5:int:const 1
checking: 10:bool:gt (%8, %9)
  looping thru 2 args of 10:bool:gt (%8, %9)
  looping thru 1 args of 8:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 9:int:const 10
checking: 11:int:const 2
  looping thru 0 args of 11:int:const 2
checking: 17:int:const 0
  looping thru 0 args of 17:int:const 0
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call IfElse_Valid_2:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 1
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:call IfElse_Valid_2:f(%5)
  looping thru 0 args of 5:int:const 10
  looping thru 0 args of 7:int:const 0
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:int:call IfElse_Valid_2:f(%10)
  looping thru 0 args of 10:int:const 11
  looping thru 0 args of 12:int:const 2
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 1 args of 16:int:call IfElse_Valid_2:f(%15)
  looping thru 0 args of 15:int:const 1212
  looping thru 0 args of 17:int:const 2
checking: 24:bool:eq (%22, %23)
  looping thru 2 args of 24:bool:eq (%22, %23)
  looping thru 1 args of 22:int:call IfElse_Valid_2:f(%21)
  looping thru 1 args of 21:int:neg (%20)
  looping thru 0 args of 20:int:const 1212
  looping thru 0 args of 23:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== IfElse_Valid_3.whiley =====
checking: 4:bool:lt (%2, %3)
  looping thru 2 args of 4:bool:lt (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 3:int:const 10
checking: 5:int:const 1
  looping thru 0 args of 5:int:const 1
checking: 8:int:const 2
  looping thru 0 args of 8:int:const 2
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call IfElse_Valid_3:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 1
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:call IfElse_Valid_3:f(%5)
  looping thru 0 args of 5:int:const 10
  looping thru 0 args of 7:int:const 2
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:int:call IfElse_Valid_3:f(%10)
  looping thru 0 args of 10:int:const 11
  looping thru 0 args of 12:int:const 2
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 1 args of 16:int:call IfElse_Valid_3:f(%15)
  looping thru 0 args of 15:int:const 1212
  looping thru 0 args of 17:int:const 2
checking: 24:bool:eq (%22, %23)
  looping thru 2 args of 24:bool:eq (%22, %23)
  looping thru 1 args of 22:int:call IfElse_Valid_3:f(%21)
  looping thru 1 args of 21:int:neg (%20)
  looping thru 0 args of 20:int:const 1212
  looping thru 0 args of 23:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== IfElse_Valid_4.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:IfElse_Valid_4:LinkedList:read (%0)
  looping thru 0 args of 0:IfElse_Valid_4:LinkedList:decl ls
  looping thru 0 args of 3:type:const null
checking: 7:int:const 0
  looping thru 0 args of 7:int:const 0
checking: 15:int:add (%11, %14)
  looping thru 2 args of 15:int:add (%11, %14)
  looping thru 1 args of 11:int:recfield %10 data
  looping thru 1 args of 10:IfElse_Valid_4:LinkedList:read (%5)
  looping thru 1 args of 5:IfElse_Valid_4:LinkedList:alias (%0)
  looping thru 0 args of 0:IfElse_Valid_4:LinkedList:decl ls
  looping thru 1 args of 14:int:call IfElse_Valid_4:sum_1(%13)
  looping thru 1 args of 13:X<null|{int data,X next}>:recfield %12 next
  looping thru 1 args of 12:IfElse_Valid_4:LinkedList:read (%5)
  looping thru 1 args of 5:IfElse_Valid_4:LinkedList:alias (%0)
  looping thru 0 args of 0:IfElse_Valid_4:LinkedList:decl ls
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:IfElse_Valid_4:LinkedList:read (%0)
  looping thru 0 args of 0:IfElse_Valid_4:LinkedList:decl ls
  looping thru 0 args of 3:null:const null
checking: 5:int:const 0
  looping thru 0 args of 5:int:const 0
checking: 13:int:add (%9, %12)
  looping thru 2 args of 13:int:add (%9, %12)
  looping thru 1 args of 9:int:recfield %8 data
  looping thru 1 args of 8:IfElse_Valid_4:LinkedList:read (%0)
  looping thru 0 args of 0:IfElse_Valid_4:LinkedList:decl ls
  looping thru 1 args of 12:int:call IfElse_Valid_4:sum_2(%11)
  looping thru 1 args of 11:X<null|{int data,X next}>:recfield %10 next
  looping thru 1 args of 10:IfElse_Valid_4:LinkedList:read (%0)
  looping thru 0 args of 0:IfElse_Valid_4:LinkedList:decl ls
checking: 4:bool:neq (%2, %3)
  looping thru 2 args of 4:bool:neq (%2, %3)
  looping thru 1 args of 2:IfElse_Valid_4:LinkedList:read (%0)
  looping thru 0 args of 0:IfElse_Valid_4:LinkedList:decl ls
  looping thru 0 args of 3:null:const null
checking: 10:int:add (%6, %9)
  looping thru 2 args of 10:int:add (%6, %9)
  looping thru 1 args of 6:int:recfield %5 data
  looping thru 1 args of 5:IfElse_Valid_4:LinkedList:read (%0)
  looping thru 0 args of 0:IfElse_Valid_4:LinkedList:decl ls
  looping thru 1 args of 9:int:call IfElse_Valid_4:sum_3(%8)
  looping thru 1 args of 8:X<null|{int data,X next}>:recfield %7 next
  looping thru 1 args of 7:IfElse_Valid_4:LinkedList:read (%0)
  looping thru 0 args of 0:IfElse_Valid_4:LinkedList:decl ls
checking: 13:int:const 0
  looping thru 0 args of 13:int:const 0
assign 1 := 1
checking: 4:{int data,null next}:read (%3)
  looping thru 1 args of 4:{int data,null next}:read (%3)
  looping thru 1 args of 3:IfElse_Valid_4:LinkedList:decl ls = 2
  looping thru 2 args of 2:{int data,null next}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:null:const null
checking: 7:{int data,{int data,null next} next}:recinit (%5, %6)
  looping thru 2 args of 7:{int data,{int data,null next} next}:recinit (%5, %6)
  looping thru 0 args of 5:int:const 2
  looping thru 1 args of 6:{int data,null next}:read (%3)
  looping thru 1 args of 3:IfElse_Valid_4:LinkedList:decl ls = 2
  looping thru 2 args of 2:{int data,null next}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:null:const null
assign 1 := 1
checking: 9:{int data,{int data,null next} next}:read (%3)
  looping thru 1 args of 9:{int data,{int data,null next} next}:read (%3)
  looping thru 1 args of 3:IfElse_Valid_4:LinkedList:decl ls = 2
  looping thru 2 args of 2:{int data,null next}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:null:const null
checking: 12:{int data,{int data,{int data,null next} next} next}:recinit (%10, %11)
  looping thru 2 args of 12:{int data,{int data,{int data,null next} next} next}:recinit (%10, %11)
  looping thru 0 args of 10:int:const 3
  looping thru 1 args of 11:{int data,{int data,null next} next}:read (%3)
  looping thru 1 args of 3:IfElse_Valid_4:LinkedList:decl ls = 2
  looping thru 2 args of 2:{int data,null next}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:null:const null
checking: 17:bool:eq (%15, %16)
  looping thru 2 args of 17:bool:eq (%15, %16)
  looping thru 1 args of 15:int:call IfElse_Valid_4:sum_1(%14)
  looping thru 1 args of 14:{int data,{int data,{int data,null next} next} next}:read (%3)
  looping thru 1 args of 3:IfElse_Valid_4:LinkedList:decl ls = 2
  looping thru 2 args of 2:{int data,null next}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:null:const null
  looping thru 0 args of 16:int:const 6
checking: 22:bool:eq (%20, %21)
  looping thru 2 args of 22:bool:eq (%20, %21)
  looping thru 1 args of 20:int:call IfElse_Valid_4:sum_2(%19)
  looping thru 1 args of 19:{int data,{int data,{int data,null next} next} next}:read (%3)
  looping thru 1 args of 3:IfElse_Valid_4:LinkedList:decl ls = 2
  looping thru 2 args of 2:{int data,null next}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:null:const null
  looping thru 0 args of 21:int:const 6
checking: 27:bool:eq (%25, %26)
  looping thru 2 args of 27:bool:eq (%25, %26)
  looping thru 1 args of 25:int:call IfElse_Valid_4:sum_3(%24)
  looping thru 1 args of 24:{int data,{int data,{int data,null next} next} next}:read (%3)
  looping thru 1 args of 3:IfElse_Valid_4:LinkedList:decl ls = 2
  looping thru 2 args of 2:{int data,null next}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:null:const null
  looping thru 0 args of 26:int:const 6
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 4 verified, 0 errors
===== IfElse_Valid_5.whiley =====
checking: 5:bool:gteq (%3, %4)
  looping thru 2 args of 5:bool:gteq (%3, %4)
  looping thru 1 args of 3:int:recfield %2 flag
  looping thru 1 args of 2:IfElse_Valid_5:Record:read (%0)
  looping thru 0 args of 0:IfElse_Valid_5:Record:decl d
  looping thru 0 args of 4:int:const 0
checking: 11:bool:gt (%9, %10)
  looping thru 2 args of 11:bool:gt (%9, %10)
  looping thru 1 args of 9:int:recfield %8 flag
  looping thru 1 args of 8:IfElse_Valid_5:Record:read (%0)
  looping thru 0 args of 0:IfElse_Valid_5:Record:decl d
  looping thru 0 args of 10:int:const 0
checking: 12:int:read (%7)
  looping thru 1 args of 12:int:read (%7)
  looping thru 1 args of 7:int:decl r = 6
  looping thru 0 args of 6:int:const 1
checking: 19:int:const 0
  looping thru 0 args of 19:int:const 0
checking: 24:int:neg (%23)
  looping thru 1 args of 24:int:neg (%23)
  looping thru 0 args of 23:int:const 1
checking: 6:bool:eq (%4, %5)
  looping thru 2 args of 6:bool:eq (%4, %5)
  looping thru 1 args of 4:int:call IfElse_Valid_5:getFlag(%3)
  looping thru 1 args of 3:{int flag}:read (%2)
  looping thru 1 args of 2:IfElse_Valid_5:Record:decl r = 1
  looping thru 1 args of 1:{int flag}:recinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 5:int:const 1
assign 1 := 1
checking: 8:{int flag}:read (%2)
  looping thru 1 args of 8:{int flag}:read (%2)
  looping thru 1 args of 2:IfElse_Valid_5:Record:decl r = 1
  looping thru 1 args of 1:{int flag}:recinit (%0)
  looping thru 0 args of 0:int:const 1
checking: 10:{int flag}:recinit (%9)
  looping thru 1 args of 10:{int flag}:recinit (%9)
  looping thru 0 args of 9:int:const 0
checking: 16:bool:eq (%13, %15)
  looping thru 2 args of 16:bool:eq (%13, %15)
  looping thru 1 args of 13:int:call IfElse_Valid_5:getFlag(%12)
  looping thru 1 args of 12:{int flag}:read (%2)
  looping thru 1 args of 2:IfElse_Valid_5:Record:decl r = 1
  looping thru 1 args of 1:{int flag}:recinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 15:int:neg (%14)
  looping thru 0 args of 14:int:const 1
assign 1 := 1
checking: 18:{int flag}:read (%2)
  looping thru 1 args of 18:{int flag}:read (%2)
  looping thru 1 args of 2:IfElse_Valid_5:Record:decl r = 1
  looping thru 1 args of 1:{int flag}:recinit (%0)
  looping thru 0 args of 0:int:const 1
checking: 21:{int flag}:recinit (%20)
  looping thru 1 args of 21:{int flag}:recinit (%20)
  looping thru 1 args of 20:int:neg (%19)
  looping thru 0 args of 19:int:const 1
checking: 26:bool:eq (%24, %25)
  looping thru 2 args of 26:bool:eq (%24, %25)
  looping thru 1 args of 24:int:call IfElse_Valid_5:getFlag(%23)
  looping thru 1 args of 23:{int flag}:read (%2)
  looping thru 1 args of 2:IfElse_Valid_5:Record:decl r = 1
  looping thru 1 args of 1:{int flag}:recinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 25:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Import_Valid_1.whiley =====
checking: 4:bool:lt (%2, %3)
  looping thru 2 args of 4:bool:lt (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 3:int:const 0
checking: 5:int:const 0
  looping thru 0 args of 5:int:const 0
checking: 8:int:read (%0)
  looping thru 1 args of 8:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call Import_Valid_1:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Import_Valid_2.whiley =====
checking: 8:int:arridx (%6, %7)
conjecture: 0 <= 0 && 0 < arraylen(x)
  looping thru 2 args of 8:int:arridx (%6, %7)
  looping thru 1 args of 6:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl x
  looping thru 0 args of 7:int:const 0
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call Import_Valid_2:f(%0)
  looping thru 0 args of 0:int[]:const [49]
  looping thru 0 args of 2:int:const 49
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Import_Valid_3.whiley =====
mangle toInt : function(int[])->(int) to toInt$2
checking: 14:bool:lt (%11, %13)
  looping thru 2 args of 14:bool:lt (%11, %13)
  looping thru 1 args of 11:int:read (%5)
  looping thru 1 args of 5:int:decl i = 4
  looping thru 0 args of 4:int:const 0
  looping thru 1 args of 13:int:arrlen (%12)
  looping thru 1 args of 12:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
assign 1 := 1
checking: 15:int:read (%3)
  looping thru 1 args of 15:int:read (%3)
  looping thru 1 args of 3:int:decl r = 2
  looping thru 0 args of 2:int:const 0
checking: 20:int:add (%16, %19)
  looping thru 2 args of 20:int:add (%16, %19)
  looping thru 1 args of 16:int:read (%3)
  looping thru 1 args of 3:int:decl r = 2
  looping thru 0 args of 2:int:const 0
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(ls)
  looping thru 2 args of 19:int:arridx (%17, %18)
  looping thru 1 args of 17:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 1 args of 18:int:read (%5)
  looping thru 1 args of 5:int:decl i = 4
  looping thru 0 args of 4:int:const 0
assign 1 := 1
checking: 22:int:read (%5)
  looping thru 1 args of 22:int:read (%5)
  looping thru 1 args of 5:int:decl i = 4
  looping thru 0 args of 4:int:const 0
checking: 25:int:add (%23, %24)
  looping thru 2 args of 25:int:add (%23, %24)
  looping thru 1 args of 23:int:read (%5)
  looping thru 1 args of 5:int:decl i = 4
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 24:int:const 1
checking: 29:int:read (%3)
  looping thru 1 args of 29:int:read (%3)
  looping thru 1 args of 3:int:decl r = 2
  looping thru 0 args of 2:int:const 0
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:int:call Import_Valid_3:toInt(%6)
  looping thru 1 args of 6:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl ls = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 8:int:const 10
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Import_Valid_4.whiley =====
Error compiling Import_Valid_4.whiley
./Import_Valid_4.whiley:7: unknown type encountered
function g(real x) -> int[]:
           ^^^^

===== Import_Valid_5.whiley =====
Error compiling Import_Valid_5.whiley
./Import_Valid_5.whiley:3: unable to resolve name (name not found: toString)
    assume toString(1223374) == "1223374"
           ^^^^^^^^^^^^^^^^^

===== Import_Valid_6.whiley =====
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 2 args of 6:int:add (%4, %5)
  looping thru 1 args of 4:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 5:int:read (%3)
  looping thru 1 args of 3:int:decl y = 2
  looping thru 0 args of 2:int:const 2
  looping thru 0 args of 7:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== IntConst_Valid_1.whiley =====
assign 1 := 1
checking: 2:int:read (%1)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 1234567891011121314151617181920
checking: 5:int:add (%3, %4)
  looping thru 2 args of 5:int:add (%3, %4)
  looping thru 1 args of 3:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 1234567891011121314151617181920
  looping thru 0 args of 4:int:const 1
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 1234567891011121314151617181920
  looping thru 0 args of 8:int:const 1234567891011121314151617181921
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== IntDefine_Valid_1.whiley =====
checking: 4:bool:gt (%2, %3)
  looping thru 2 args of 4:bool:gt (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 3:int:const 2
checking: 7:int:read (%6)
  looping thru 1 args of 7:int:read (%6)
  looping thru 1 args of 6:int:decl y = 5
  looping thru 1 args of 5:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 11:int:const 0
  looping thru 0 args of 11:int:const 0
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call IntDefine_Valid_1:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 0
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:call IntDefine_Valid_1:f(%5)
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 7:int:const 0
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:int:call IntDefine_Valid_1:f(%10)
  looping thru 0 args of 10:int:const 3
  looping thru 0 args of 12:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== IntDefine_Valid_2.whiley =====
checking: 4:bool:gt (%2, %3)
  looping thru 2 args of 4:bool:gt (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 3:int:const 2
checking: 7:int:read (%6)
  looping thru 1 args of 7:int:read (%6)
  looping thru 1 args of 6:int:decl y = 5
  looping thru 1 args of 5:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 11:int:const 0
  looping thru 0 args of 11:int:const 0
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call IntDefine_Valid_2:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 0
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:call IntDefine_Valid_2:f(%5)
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 7:int:const 0
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:int:call IntDefine_Valid_2:f(%10)
  looping thru 0 args of 10:int:const 3
  looping thru 0 args of 12:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== IntDiv_Valid_1.whiley =====
checking: 8:int:div (%6, %7)
  looping thru 2 args of 8:int:div (%6, %7)
  looping thru 1 args of 6:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 7:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 2 args of 2:int:call IntDiv_Valid_1:f(%0, %1)
  looping thru 0 args of 0:int:const 10
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 3:int:const 5
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 2 args of 8:int:call IntDiv_Valid_1:f(%6, %7)
  looping thru 0 args of 6:int:const 9
  looping thru 0 args of 7:int:const 3
  looping thru 0 args of 9:int:const 3
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 2 args of 14:int:call IntDiv_Valid_1:f(%12, %13)
  looping thru 0 args of 12:int:const 10
  looping thru 0 args of 13:int:const 3
  looping thru 0 args of 15:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== IntDiv_Valid_3.whiley =====
checking: 7:bool:const true
  looping thru 0 args of 7:bool:const true
assign 1 := 1
checking: 8:int:read (%6)
  looping thru 1 args of 8:int:read (%6)
  looping thru 0 args of 6:int:decl z
checking: 11:int:div (%9, %10)
  looping thru 2 args of 11:int:div (%9, %10)
  looping thru 1 args of 9:IntDiv_Valid_3:pos:read (%0)
  looping thru 0 args of 0:IntDiv_Valid_3:pos:decl x
  looping thru 1 args of 10:int:read (%1)
  looping thru 0 args of 1:int:decl y
assign 1 := 1
checking: 14:int:read (%6)
  looping thru 1 args of 14:int:read (%6)
  looping thru 0 args of 6:int:decl z
checking: 17:int:div (%15, %16)
  looping thru 2 args of 17:int:div (%15, %16)
  looping thru 1 args of 15:int:read (%1)
  looping thru 0 args of 1:int:decl y
  looping thru 1 args of 16:IntDiv_Valid_3:pos:read (%0)
  looping thru 0 args of 0:IntDiv_Valid_3:pos:decl x
checking: 21:int:read (%6)
  looping thru 1 args of 21:int:read (%6)
  looping thru 0 args of 6:int:decl z
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 2 args of 2:IntDiv_Valid_3:nat:call IntDiv_Valid_3:f(%0, %1)
  looping thru 0 args of 0:int:const 10
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 3:int:const 5
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== IntDiv_Valid_4.whiley =====
checking: 4:int:div (%2, %3)
  looping thru 2 args of 4:int:div (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 3:int:const 3
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call IntDiv_Valid_4:f(%0)
  looping thru 0 args of 0:int:const 10
  looping thru 0 args of 2:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== IntDiv_Valid_5.whiley =====
MUTATED INPUT x : int
MUTATED INPUT y : int
assign 1 := 1
checking: 8:int:read (%0)
  looping thru 1 args of 8:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 11:int:add (%9, %10)
  looping thru 2 args of 11:int:add (%9, %10)
  looping thru 1 args of 9:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 10:int:const 2
assign 1 := 1
checking: 13:int:read (%1)
  looping thru 1 args of 13:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 16:int:add (%14, %15)
  looping thru 2 args of 16:int:add (%14, %15)
  looping thru 1 args of 14:int:read (%1)
  looping thru 0 args of 1:int:decl y
  looping thru 0 args of 15:int:const 1
checking: 22:bool:eq (%20, %21)
  looping thru 2 args of 22:bool:eq (%20, %21)
  looping thru 2 args of 20:int:mul (%18, %19)
  looping thru 0 args of 18:int:const 2
  looping thru 1 args of 19:int:read (%1)
  looping thru 0 args of 1:int:decl y
  looping thru 1 args of 21:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 26:{int nx,int ny}:recinit (%24, %25)
  looping thru 2 args of 26:{int nx,int ny}:recinit (%24, %25)
  looping thru 1 args of 24:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 25:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 6:bool:eq (%2, %5)
  looping thru 2 args of 6:bool:eq (%2, %5)
  looping thru 2 args of 2:{int nx,int ny}:call IntDiv_Valid_5:f(%0, %1)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 1
  looping thru 2 args of 5:{int nx,int ny}:recinit (%3, %4)
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 4:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== IntMul_Valid_1.whiley =====
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:read (%5)
  looping thru 1 args of 5:int:decl x = 4
  looping thru 2 args of 4:int:add (%2, %3)
  looping thru 2 args of 2:int:mul (%0, %1)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 3
  looping thru 0 args of 3:int:const 1
  looping thru 0 args of 7:int:const 7
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== IntMul_Valid_2.whiley =====
checking: 12:bool:eq (%10, %11)
  looping thru 2 args of 12:bool:eq (%10, %11)
  looping thru 1 args of 10:int:read (%9)
  looping thru 1 args of 9:int:decl z = 8
  looping thru 2 args of 8:int:sub (%6, %7)
  looping thru 2 args of 6:int:mul (%4, %5)
  looping thru 1 args of 4:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 8
  looping thru 1 args of 5:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 8
  looping thru 1 args of 7:int:read (%3)
  looping thru 1 args of 3:int:decl y = 2
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 11:int:const 63
assign 1 := 1
checking: 14:int:read (%9)
  looping thru 1 args of 14:int:read (%9)
  looping thru 1 args of 9:int:decl z = 8
  looping thru 2 args of 8:int:sub (%6, %7)
  looping thru 2 args of 6:int:mul (%4, %5)
  looping thru 1 args of 4:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 8
  looping thru 1 args of 5:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 8
  looping thru 1 args of 7:int:read (%3)
  looping thru 1 args of 3:int:decl y = 2
  looping thru 0 args of 2:int:const 1
checking: 19:int:sub (%17, %18)
  looping thru 2 args of 19:int:sub (%17, %18)
  looping thru 2 args of 17:int:mul (%15, %16)
  looping thru 1 args of 15:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 8
  looping thru 1 args of 16:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 8
  looping thru 1 args of 18:int:read (%3)
  looping thru 1 args of 3:int:decl y = 2
  looping thru 0 args of 2:int:const 1
checking: 23:bool:eq (%21, %22)
  looping thru 2 args of 23:bool:eq (%21, %22)
  looping thru 1 args of 21:int:read (%9)
  looping thru 1 args of 9:int:decl z = 8
  looping thru 2 args of 8:int:sub (%6, %7)
  looping thru 2 args of 6:int:mul (%4, %5)
  looping thru 1 args of 4:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 8
  looping thru 1 args of 5:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 8
  looping thru 1 args of 7:int:read (%3)
  looping thru 1 args of 3:int:decl y = 2
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 22:int:const 63
assign 1 := 1
checking: 25:int:read (%9)
  looping thru 1 args of 25:int:read (%9)
  looping thru 1 args of 9:int:decl z = 8
  looping thru 2 args of 8:int:sub (%6, %7)
  looping thru 2 args of 6:int:mul (%4, %5)
  looping thru 1 args of 4:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 8
  looping thru 1 args of 5:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 8
  looping thru 1 args of 7:int:read (%3)
  looping thru 1 args of 3:int:decl y = 2
  looping thru 0 args of 2:int:const 1
checking: 30:int:mul (%26, %29)
  looping thru 2 args of 30:int:mul (%26, %29)
  looping thru 1 args of 26:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 8
  looping thru 2 args of 29:int:sub (%27, %28)
  looping thru 1 args of 27:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 8
  looping thru 1 args of 28:int:read (%3)
  looping thru 1 args of 3:int:decl y = 2
  looping thru 0 args of 2:int:const 1
checking: 34:bool:eq (%32, %33)
  looping thru 2 args of 34:bool:eq (%32, %33)
  looping thru 1 args of 32:int:read (%9)
  looping thru 1 args of 9:int:decl z = 8
  looping thru 2 args of 8:int:sub (%6, %7)
  looping thru 2 args of 6:int:mul (%4, %5)
  looping thru 1 args of 4:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 8
  looping thru 1 args of 5:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 8
  looping thru 1 args of 7:int:read (%3)
  looping thru 1 args of 3:int:decl y = 2
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 33:int:const 56
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== IntOp_Valid_1.whiley =====
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 112233445566778899
  looping thru 0 args of 3:int:const 112233445566778899
assign 1 := 1
checking: 6:int:read (%1)
  looping thru 1 args of 6:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 112233445566778899
checking: 9:int:add (%7, %8)
  looping thru 2 args of 9:int:add (%7, %8)
  looping thru 1 args of 7:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 112233445566778899
  looping thru 0 args of 8:int:const 1
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 112233445566778899
  looping thru 0 args of 12:int:const 112233445566778900
assign 1 := 1
checking: 15:int:read (%1)
  looping thru 1 args of 15:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 112233445566778899
checking: 18:int:sub (%16, %17)
  looping thru 2 args of 18:int:sub (%16, %17)
  looping thru 1 args of 16:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 112233445566778899
  looping thru 0 args of 17:int:const 556
checking: 22:bool:eq (%20, %21)
  looping thru 2 args of 22:bool:eq (%20, %21)
  looping thru 1 args of 20:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 112233445566778899
  looping thru 0 args of 21:int:const 112233445566778344
assign 1 := 1
checking: 24:int:read (%1)
  looping thru 1 args of 24:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 112233445566778899
checking: 27:int:mul (%25, %26)
  looping thru 2 args of 27:int:mul (%25, %26)
  looping thru 1 args of 25:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 112233445566778899
  looping thru 0 args of 26:int:const 123
checking: 31:bool:eq (%29, %30)
  looping thru 2 args of 31:bool:eq (%29, %30)
  looping thru 1 args of 29:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 112233445566778899
  looping thru 0 args of 30:int:const 13804713804713736312
assign 1 := 1
checking: 33:int:read (%1)
  looping thru 1 args of 33:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 112233445566778899
checking: 36:int:div (%34, %35)
  looping thru 2 args of 36:int:div (%34, %35)
  looping thru 1 args of 34:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 112233445566778899
  looping thru 0 args of 35:int:const 2
checking: 40:bool:eq (%38, %39)
  looping thru 2 args of 40:bool:eq (%38, %39)
  looping thru 1 args of 38:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 112233445566778899
  looping thru 0 args of 39:int:const 6902356902356868156
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Intersection_Valid_1.whiley =====
checking: 2:Intersection_Valid_1:IntInt:read (%0)
  looping thru 1 args of 2:Intersection_Valid_1:IntInt:read (%0)
  looping thru 0 args of 0:Intersection_Valid_1:IntInt:decl i
checking: 2:int:read (%0)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl i
checking: 2:Intersection_Valid_1:AnyInt:read (%0)
  looping thru 1 args of 2:Intersection_Valid_1:AnyInt:read (%0)
  looping thru 0 args of 0:Intersection_Valid_1:AnyInt:decl i
checking: 2:int:read (%0)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl i
checking: 2:Intersection_Valid_1:IntAny:read (%0)
  looping thru 1 args of 2:Intersection_Valid_1:IntAny:read (%0)
  looping thru 0 args of 0:Intersection_Valid_1:IntAny:decl i
checking: 2:int:read (%0)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl i
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call Intersection_Valid_1:f1(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 1
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:Intersection_Valid_1:IntInt:call Intersection_Valid_1:f2(%5)
  looping thru 0 args of 5:int:const 1
  looping thru 0 args of 7:int:const 1
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:int:call Intersection_Valid_1:f3(%10)
  looping thru 0 args of 10:int:const 1
  looping thru 0 args of 12:int:const 1
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 1 args of 16:Intersection_Valid_1:AnyInt:call Intersection_Valid_1:f4(%15)
  looping thru 0 args of 15:int:const 1
  looping thru 0 args of 17:int:const 1
checking: 23:bool:eq (%21, %22)
  looping thru 2 args of 23:bool:eq (%21, %22)
  looping thru 1 args of 21:int:call Intersection_Valid_1:f5(%20)
  looping thru 0 args of 20:int:const 1
  looping thru 0 args of 22:int:const 1
checking: 28:bool:eq (%26, %27)
  looping thru 2 args of 28:bool:eq (%26, %27)
  looping thru 1 args of 26:Intersection_Valid_1:IntAny:call Intersection_Valid_1:f6(%25)
  looping thru 0 args of 25:int:const 1
  looping thru 0 args of 27:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 7 verified, 0 errors
===== Intersection_Valid_2.whiley =====
checking: 3:int:recfield %2 data
  looping thru 1 args of 3:int:recfield %2 data
  looping thru 1 args of 2:Intersection_Valid_2:InterList:read (%0)
  looping thru 0 args of 0:Intersection_Valid_2:InterList:decl l
checking: 7:bool:eq (%5, %6)
  looping thru 2 args of 7:bool:eq (%5, %6)
  looping thru 1 args of 5:int:call Intersection_Valid_2:f(%4)
  looping thru 1 args of 4:{int data,null next}:read (%3)
  looping thru 1 args of 3:Intersection_Valid_2:LinkedList:decl list = 2
  looping thru 2 args of 2:{int data,null next}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1234
  looping thru 0 args of 1:null:const null
  looping thru 0 args of 6:int:const 1234
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Lambda_Valid_1.whiley =====
checking: 5:function(int)->(int):lambda (%4) function(int)->(int)
  looping thru 1 args of 5:function(int)->(int):lambda (%4) function(int)->(int)
  looping thru 2 args of 4:int:add (%2, %3)
  looping thru 1 args of 2:int:read (%1)
  looping thru 0 args of 1:int:decl x
  looping thru 0 args of 3:int:const 1
wyboogie.NotImplementedYet: lambda in 5:function(int)->(int):lambda (%4) function(int)->(int)
	at wyboogie.Wyil2Boogie.writeLambda(Wyil2Boogie.java:1168)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:975)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lambda_Valid_10.whiley =====
wyboogie.NotImplementedYet: lambda in 2:function(int)->(int):lambda (%1) function(int)->(int)
	at wyboogie.Wyil2Boogie.writeLambda(Wyil2Boogie.java:1168)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:975)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lambda_Valid_11.whiley =====
wyboogie.NotImplementedYet: lambda in 2:method()->(&int):lambda (%1) method()->(&int)
	at wyboogie.Wyil2Boogie.writeLambda(Wyil2Boogie.java:1168)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:975)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lambda_Valid_12.whiley =====
wyboogie.NotImplementedYet: new record/object in 1:&int:new (%0)
	at wyboogie.Wyil2Boogie.writeNewObject(Wyil2Boogie.java:1175)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:982)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lambda_Valid_2.whiley =====
checking: 6:function(int)->(int):lambda (%5) function(int)->(int)
  looping thru 1 args of 6:function(int)->(int):lambda (%5) function(int)->(int)
  looping thru 2 args of 5:int:add (%3, %4)
  looping thru 1 args of 3:int:read (%2)
  looping thru 0 args of 2:int:decl x
  looping thru 1 args of 4:int:read (%0)
  looping thru 0 args of 0:int:decl y
wyboogie.NotImplementedYet: lambda in 6:function(int)->(int):lambda (%5) function(int)->(int)
	at wyboogie.Wyil2Boogie.writeLambda(Wyil2Boogie.java:1168)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:975)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lambda_Valid_3.whiley =====
mangle toByte : function(Lambda_Valid_3:char)->(byte) to toByte$2
MUTATED INPUT v : Lambda_Valid_3:char
checking: 14:bool:lt (%12, %13)
  looping thru 2 args of 14:bool:lt (%12, %13)
  looping thru 1 args of 12:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 13:int:const 8
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 2 args of 17:int:rem (%15, %16)
  looping thru 1 args of 15:int|Lambda_Valid_3:char:read (%0)
  looping thru 0 args of 0:Lambda_Valid_3:char:decl v
  looping thru 0 args of 16:int:const 2
  looping thru 0 args of 18:int:const 1
assign 1 := 1
checking: 20:byte:read (%5)
  looping thru 1 args of 20:byte:read (%5)
  looping thru 1 args of 5:byte:decl r = 4
  looping thru 0 args of 4:byte:const 00000000b
checking: 23:byte:bor (%21, %22)
  looping thru 2 args of 23:byte:bor (%21, %22)
  looping thru 1 args of 21:byte:read (%5)
  looping thru 1 args of 5:byte:decl r = 4
  looping thru 0 args of 4:byte:const 00000000b
  looping thru 1 args of 22:byte:read (%3)
  looping thru 1 args of 3:byte:decl mask = 2
  looping thru 0 args of 2:byte:const 00000001b
wyboogie.NotImplementedYet: bitwise operators not supported yet: bor (%21, %22) in 23:byte:bor (%21, %22)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1029)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:758)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeIf(Wyil2Boogie.java:827)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:626)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeWhile(Wyil2Boogie.java:881)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:641)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lambda_Valid_4.whiley =====
mangle toByte : function(Lambda_Valid_4:char)->(byte) to toByte$2
mangle read : method(Lambda_Valid_4:string)->(byte[]) to read$2
MUTATED INPUT v : Lambda_Valid_4:char
checking: 14:bool:lt (%12, %13)
  looping thru 2 args of 14:bool:lt (%12, %13)
  looping thru 1 args of 12:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 13:int:const 8
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 2 args of 17:int:rem (%15, %16)
  looping thru 1 args of 15:int|Lambda_Valid_4:char:read (%0)
  looping thru 0 args of 0:Lambda_Valid_4:char:decl v
  looping thru 0 args of 16:int:const 2
  looping thru 0 args of 18:int:const 1
assign 1 := 1
checking: 20:byte:read (%5)
  looping thru 1 args of 20:byte:read (%5)
  looping thru 1 args of 5:byte:decl r = 4
  looping thru 0 args of 4:byte:const 00000000b
checking: 23:byte:bor (%21, %22)
  looping thru 2 args of 23:byte:bor (%21, %22)
  looping thru 1 args of 21:byte:read (%5)
  looping thru 1 args of 5:byte:decl r = 4
  looping thru 0 args of 4:byte:const 00000000b
  looping thru 1 args of 22:byte:read (%3)
  looping thru 1 args of 3:byte:decl mask = 2
  looping thru 0 args of 2:byte:const 00000001b
wyboogie.NotImplementedYet: bitwise operators not supported yet: bor (%21, %22) in 23:byte:bor (%21, %22)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1029)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:758)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeIf(Wyil2Boogie.java:827)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:626)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeWhile(Wyil2Boogie.java:881)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:641)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lambda_Valid_5.whiley =====
checking: 4:int:add (%2, %3)
  looping thru 2 args of 4:int:add (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 3:int:const 1
checking: 5:int:icall %3 (%4)
  looping thru 1 args of 5:int:icall %3 (%4)
  looping thru 1 args of 3:method(int)->(int):read (%0)
  looping thru 0 args of 0:method(int)->(int):decl func
wyboogie.NotImplementedYet: indirect invoke in 5:int:icall %3 (%4)
	at wyboogie.Wyil2Boogie.writeIndirectInvoke(Wyil2Boogie.java:1140)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:969)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lambda_Valid_6.whiley =====
checking: 4:int:add (%2, %3)
  looping thru 2 args of 4:int:add (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 3:int:const 1
wyboogie.NotImplementedYet: lambda in 7:function(int)->(int):lambda (%6) function(int)->(int)
	at wyboogie.Wyil2Boogie.writeLambda(Wyil2Boogie.java:1168)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:975)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lambda_Valid_7.whiley =====
checking: 7:int:add (%5, %6)
  looping thru 2 args of 7:int:add (%5, %6)
  looping thru 1 args of 5:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 6:int:const 1
wyboogie.NotImplementedYet: lambda in 10:function(int)->(int):lambda (%9) function(int)->(int)
	at wyboogie.Wyil2Boogie.writeLambda(Wyil2Boogie.java:1168)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:975)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lambda_Valid_8.whiley =====
checking: 5:int:add (%3, %4)
  looping thru 2 args of 5:int:add (%3, %4)
  looping thru 1 args of 3:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 4:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 6:function(int)->(int):lambda (%5) function(int)->(int)
  looping thru 1 args of 6:function(int)->(int):lambda (%5) function(int)->(int)
  looping thru 2 args of 5:int:call Lambda_Valid_8:g(%3, %4)
  looping thru 1 args of 3:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 4:int:read (%2)
  looping thru 0 args of 2:int:decl y
wyboogie.NotImplementedYet: lambda in 6:function(int)->(int):lambda (%5) function(int)->(int)
	at wyboogie.Wyil2Boogie.writeLambda(Wyil2Boogie.java:1168)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:975)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lambda_Valid_9.whiley =====
checking: 6:int:add (%3, %5)
  looping thru 2 args of 6:int:add (%3, %5)
  looping thru 1 args of 3:int:recfield %2 x
  looping thru 1 args of 2:Lambda_Valid_9:Point:read (%0)
  looping thru 0 args of 0:Lambda_Valid_9:Point:decl p
  looping thru 1 args of 5:int:recfield %4 y
  looping thru 1 args of 4:Lambda_Valid_9:Point:read (%0)
  looping thru 0 args of 0:Lambda_Valid_9:Point:decl p
checking: 3:int:recfield %2 x
  looping thru 1 args of 3:int:recfield %2 x
  looping thru 1 args of 2:Lambda_Valid_9:Point:read (%0)
  looping thru 0 args of 0:Lambda_Valid_9:Point:decl p
checking: 7:{function(Lambda_Valid_9:Point)->(int) getX,function(Lambda_Valid_9:Point)->(int) toString,int x,int y}:recinit (%3, %4, %5, %6)
  looping thru 4 args of 7:{function(Lambda_Valid_9:Point)->(int) getX,function(Lambda_Valid_9:Point)->(int) toString,int x,int y}:recinit (%3, %4, %5, %6)
  looping thru 0 args of 3:function(Lambda_Valid_9:Point)->(int):const &Lambda_Valid_9:getX():function(Lambda_Valid_9:Point)->(int)
  looping thru 0 args of 4:function(Lambda_Valid_9:Point)->(int):const &Lambda_Valid_9:toString():function(Lambda_Valid_9:Point)->(int)
  looping thru 1 args of 5:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 6:int:read (%1)
  looping thru 0 args of 1:int:decl y
wyboogie.NotImplementedYet: createConstant(&Lambda_Valid_9:getX():function(Lambda_Valid_9:Point)->(int)):function(Lambda_Valid_9:Point)->(int)
	at wyboogie.Wyil2Boogie.createConstant(Wyil2Boogie.java:1502)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:963)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:545)
	at java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:438)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:978)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== LengthOf_Valid_1.whiley =====
checking: 3:int:arrlen (%2)
  looping thru 1 args of 3:int:arrlen (%2)
  looping thru 1 args of 2:LengthOf_Valid_1:list:read (%0)
  looping thru 0 args of 0:LengthOf_Valid_1:list:decl l
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:call LengthOf_Valid_1:len(%5)
  looping thru 1 args of 5:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl l = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 7:int:const 3
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 1 args of 16:int:call LengthOf_Valid_1:len(%15)
  looping thru 1 args of 15:bool[]:read (%14)
  looping thru 1 args of 14:bool[]:decl s = 13
  looping thru 3 args of 13:bool[]:arrinit (%10, %11, %12)
  looping thru 0 args of 10:bool:const true
  looping thru 0 args of 11:bool:const false
  looping thru 0 args of 12:bool:const true
  looping thru 0 args of 17:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== LengthOf_Valid_4.whiley =====
checking: 3:int:arrlen (%2)
  looping thru 1 args of 3:int:arrlen (%2)
  looping thru 1 args of 2:LengthOf_Valid_4:listibr:read (%0)
  looping thru 0 args of 0:LengthOf_Valid_4:listibr:decl l
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:call LengthOf_Valid_4:len(%5)
  looping thru 1 args of 5:bool[]:read (%4)
  looping thru 1 args of 4:bool[]:decl s = 3
  looping thru 3 args of 3:bool[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const false
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 7:int:const 3
checking: 17:bool:eq (%15, %16)
  looping thru 2 args of 17:bool:eq (%15, %16)
  looping thru 1 args of 15:int:call LengthOf_Valid_4:len(%14)
  looping thru 1 args of 14:int[]:read (%13)
  looping thru 1 args of 13:int[]:decl l = 12
  looping thru 2 args of 12:int[]:arrinit (%10, %11)
  looping thru 0 args of 10:int:const 1
  looping thru 0 args of 11:int:const 2
  looping thru 0 args of 16:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== LengthOf_Valid_5.whiley =====
checking: 3:int:arrlen (%2)
  looping thru 1 args of 3:int:arrlen (%2)
  looping thru 1 args of 2:LengthOf_Valid_5:list:read (%0)
  looping thru 0 args of 0:LengthOf_Valid_5:list:decl l
checking: 7:bool:eq (%5, %6)
  looping thru 2 args of 7:bool:eq (%5, %6)
  looping thru 1 args of 5:int:call LengthOf_Valid_5:len(%4)
  looping thru 1 args of 4:int[]:read (%3)
  looping thru 1 args of 3:int[]:decl l = 2
  looping thru 2 args of 2:int[]:arrinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 6:int:const 2
checking: 14:bool:eq (%12, %13)
  looping thru 2 args of 14:bool:eq (%12, %13)
  looping thru 1 args of 12:int:call LengthOf_Valid_5:len(%11)
  looping thru 1 args of 11:int[]:read (%10)
  looping thru 1 args of 10:int[]:decl s = 9
  looping thru 0 args of 9:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 13:int:const 11
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Lifetime_Lambda_Valid_1.whiley =====
wyboogie.NotImplementedYet: lambda in 4:method<a,b>(&a:int,&b:int)->(&a:int):lambda (%3) method<a,b>(&a:int,&b:int)->(&a:int)
	at wyboogie.Wyil2Boogie.writeLambda(Wyil2Boogie.java:1168)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:975)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lifetime_Lambda_Valid_2.whiley =====
wyboogie.NotImplementedYet: lambda in 5:method<aa,bb>(&aa:int,&bb:int)->(int):lambda (%4) method<aa,bb>(&aa:int,&bb:int)->(int)
	at wyboogie.Wyil2Boogie.writeLambda(Wyil2Boogie.java:1168)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:975)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lifetime_Lambda_Valid_3.whiley =====
wyboogie.NotImplementedYet: lambda in 2:method()->(&int):lambda (%1) method()->(&int)
	at wyboogie.Wyil2Boogie.writeLambda(Wyil2Boogie.java:1168)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:975)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lifetime_Lambda_Valid_4.whiley =====
Error compiling Lifetime_Lambda_Valid_4.whiley
./Lifetime_Lambda_Valid_4.whiley:3: empty type encountered
type mymethod is method<a>(&*:mymethod)->(&a:mymethod)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

===== Lifetime_Lambda_Valid_5.whiley =====
wyboogie.NotImplementedYet: lambda in 4:method<b>(&b:int,&b:int)->(&int):lambda (%3) method<b>(&b:int,&b:int)->(&int)
	at wyboogie.Wyil2Boogie.writeLambda(Wyil2Boogie.java:1168)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:975)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lifetime_Lambda_Valid_6.whiley =====
wyboogie.NotImplementedYet: lambda in 3:method<b>(&b:int)->(&int):lambda (%2) method<b>(&b:int)->(&int)
	at wyboogie.Wyil2Boogie.writeLambda(Wyil2Boogie.java:1168)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:975)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lifetime_Lambda_Valid_7.whiley =====
wyboogie.NotImplementedYet: new record/object in 1:&this:int:new (%0)
	at wyboogie.Wyil2Boogie.writeNewObject(Wyil2Boogie.java:1175)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:982)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lifetime_Valid_1.whiley =====
wyboogie.NotImplementedYet: new record/object in 1:&int:new (%0)
	at wyboogie.Wyil2Boogie.writeNewObject(Wyil2Boogie.java:1175)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:982)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lifetime_Valid_10.whiley =====
checking: 3:&a:int:read (%0)
  looping thru 1 args of 3:&a:int:read (%0)
  looping thru 0 args of 0:&a:int:decl x
wyboogie.NotImplementedYet: new record/object in 1:&a:int:new (%0)
	at wyboogie.Wyil2Boogie.writeNewObject(Wyil2Boogie.java:1175)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:982)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeNamedBlock(Wyil2Boogie.java:867)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:636)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeNamedBlock(Wyil2Boogie.java:867)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:636)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lifetime_Valid_2.whiley =====
wyboogie.NotImplementedYet: new record/object in 1:&int:new (%0)
	at wyboogie.Wyil2Boogie.writeNewObject(Wyil2Boogie.java:1175)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:982)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lifetime_Valid_3.whiley =====
assign 1 := 1
checking: 5:&a:int:read (%4)
  looping thru 1 args of 5:&a:int:read (%4)
  looping thru 1 args of 4:&a:int:decl ptr1 = 3
  looping thru 1 args of 3:&a:int:read (%0)
  looping thru 0 args of 0:&a:int:decl x
checking: 7:&a:int:new (%6)
  looping thru 1 args of 7:&a:int:new (%6)
  looping thru 0 args of 6:int:const 1
wyboogie.NotImplementedYet: new record/object in 7:&a:int:new (%6)
	at wyboogie.Wyil2Boogie.writeNewObject(Wyil2Boogie.java:1175)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:982)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:758)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lifetime_Valid_4.whiley =====
checking: 4:&int:new (%3)
  looping thru 1 args of 4:&int:new (%3)
  looping thru 0 args of 3:int:const 3
wyboogie.NotImplementedYet: new record/object in 4:&int:new (%3)
	at wyboogie.Wyil2Boogie.writeNewObject(Wyil2Boogie.java:1175)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:982)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lifetime_Valid_5.whiley =====
assign 1 := 1
checking: 4:int:deref (%3)
  looping thru 1 args of 4:int:deref (%3)
  looping thru 1 args of 3:&a:int:read (%0)
  looping thru 0 args of 0:&a:int:decl x
checking: 8:int:add (%6, %7)
  looping thru 2 args of 8:int:add (%6, %7)
  looping thru 1 args of 6:int:deref (%5)
  looping thru 1 args of 5:&a:int:read (%0)
  looping thru 0 args of 0:&a:int:decl x
  looping thru 0 args of 7:int:const 1
wyboogie.NotImplementedYet: dereference in 4:int:deref (%3)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:986)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:750)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lifetime_Valid_6.whiley =====
checking: 5:&int:new (%4)
  looping thru 1 args of 5:&int:new (%4)
  looping thru 0 args of 4:int:const 3
wyboogie.NotImplementedYet: new record/object in 5:&int:new (%4)
	at wyboogie.Wyil2Boogie.writeNewObject(Wyil2Boogie.java:1175)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:982)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lifetime_Valid_7.whiley =====
mangle m : method<a>(&a:int,&int)->(int) to m$2
mangle m : method<a>(&int,&a:int)->(int) to m$3
mangle m2 : method<a,b>(&a:int,&b:int)->(int) to m2$2
checking: 3:int:const 1
  looping thru 0 args of 3:int:const 1
checking: 3:int:const 2
  looping thru 0 args of 3:int:const 2
checking: 3:int:const 3
  looping thru 0 args of 3:int:const 3
checking: 3:int:const 4
  looping thru 0 args of 3:int:const 4
checking: 3:int:const 5
  looping thru 0 args of 3:int:const 5
wyboogie.NotImplementedYet: new record/object in 1:&this:int:new (%0)
	at wyboogie.Wyil2Boogie.writeNewObject(Wyil2Boogie.java:1175)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:982)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeNamedBlock(Wyil2Boogie.java:867)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:636)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lifetime_Valid_8.whiley =====
mangle m : method<a>(&a:bool,&a:int,bool)->(&a:int) to m$2
mangle m : method<a>(&int,&a:int,int|bool)->(&a:int) to m$3
mangle m : method<a>(&int,&a:int,bool)->(&a:int) to m$4
checking: 5:&b:int:new (%4)
  looping thru 1 args of 5:&b:int:new (%4)
  looping thru 0 args of 4:int:const 1
wyboogie.NotImplementedYet: new record/object in 5:&b:int:new (%4)
	at wyboogie.Wyil2Boogie.writeNewObject(Wyil2Boogie.java:1175)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:982)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Lifetime_Valid_9.whiley =====
checking: 4:&a:int:new (%3)
  looping thru 1 args of 4:&a:int:new (%3)
  looping thru 0 args of 3:int:const 1
wyboogie.NotImplementedYet: new record/object in 4:&a:int:new (%3)
	at wyboogie.Wyil2Boogie.writeNewObject(Wyil2Boogie.java:1175)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:982)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== ListAccess_Valid_1.whiley =====
java.lang.IllegalArgumentException: function with no return values: wyil.lang.WyilFile$FunctionOrMethod@39ba5a14
	at wyboogie.Wyil2Boogie.writeFunction(Wyil2Boogie.java:405)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:278)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== ListAccess_Valid_3.whiley =====
java.lang.IllegalArgumentException: function with no return values: wyil.lang.WyilFile$FunctionOrMethod@17f6480
	at wyboogie.Wyil2Boogie.writeFunction(Wyil2Boogie.java:405)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:278)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== ListAccess_Valid_5.whiley =====
checking: 3:int:arrlen (%2)
  looping thru 1 args of 3:int:arrlen (%2)
  looping thru 1 args of 2:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl x
checking: 11:bool:eq (%9, %10)
  looping thru 2 args of 11:bool:eq (%9, %10)
  looping thru 1 args of 9:int:call ListAccess_Valid_5:f(%8)
conjecture: 0 <= 0 && 0 < arraylen(arr)
  looping thru 2 args of 8:int[]:arridx (%6, %7)
  looping thru 1 args of 6:int[][]:read (%5)
  looping thru 1 args of 5:int[][]:decl arr = 4
  looping thru 1 args of 4:int[][]:arrinit (%3)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 10:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListAccess_Valid_6.whiley =====
Error compiling ListAccess_Valid_6.whiley
./ListAccess_Valid_6.whiley:8: incomparable operands: null and int[]
        if r is int[]:
           ^^^^^^^^^^

===== ListAccess_Valid_8.whiley =====
MUTATED INPUT b : byte
checking: 11:bool:neq (%9, %10)
  looping thru 2 args of 11:bool:neq (%9, %10)
  looping thru 1 args of 9:byte:read (%0)
  looping thru 0 args of 0:byte:decl b
  looping thru 0 args of 10:byte:const 00000000b
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 2 args of 14:byte:band (%12, %13)
  looping thru 1 args of 12:byte:read (%0)
  looping thru 0 args of 0:byte:decl b
  looping thru 0 args of 13:byte:const 00000001b
  looping thru 0 args of 15:byte:const 00000001b
wyboogie.NotImplementedYet: bitwise operators not supported yet: band (%12, %13) in 14:byte:band (%12, %13)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1029)
	at wyboogie.Wyil2Boogie.writeEquality(Wyil2Boogie.java:1237)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1032)
	at wyboogie.Wyil2Boogie.boolExpr(Wyil2Boogie.java:934)
	at wyboogie.Wyil2Boogie.writeIf(Wyil2Boogie.java:826)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:626)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeWhile(Wyil2Boogie.java:881)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:641)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== ListAccess_Valid_9.whiley =====
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:bool:read (%10)
  looping thru 1 args of 10:bool:decl x = 9
conjecture: 0 <= 1 && 1 < arraylen(toRecord(r)[$items])
  looping thru 2 args of 9:bool:arridx (%7, %8)
  looping thru 1 args of 7:bool[]:recfield %6 items
  looping thru 1 args of 6:{bool[] items}:read (%5)
  looping thru 1 args of 5:ListAccess_Valid_9:Rec:decl r = 4
  looping thru 1 args of 4:{bool[] items}:recinit (%3)
  looping thru 3 args of 3:bool[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const true
  looping thru 0 args of 2:bool:const false
  looping thru 0 args of 8:int:const 1
  looping thru 0 args of 12:bool:const true
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ListAssign_Valid_1.whiley =====
assign 1 := 1
checking: 9:int:arridx (%7, %8)
conjecture: 0 <= 2 && 2 < arraylen(arr2)
  looping thru 2 args of 9:int:arridx (%7, %8)
  looping thru 1 args of 7:int[]:read (%6)
  looping thru 1 args of 6:int[]:decl arr2 = 5
  looping thru 1 args of 5:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl arr1 = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 8:int:const 2
checking: 10:int:const 2
  looping thru 0 args of 10:int:const 2
checking: 17:bool:neq (%14, %16)
  looping thru 2 args of 17:bool:neq (%14, %16)
conjecture: 0 <= 2 && 2 < arraylen(arr2)
  looping thru 2 args of 14:int:arridx (%12, %13)
  looping thru 1 args of 12:int[]:read (%6)
  looping thru 1 args of 6:int[]:decl arr2 = 5
  looping thru 1 args of 5:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl arr1 = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 13:int:const 2
  looping thru 1 args of 16:int:arrlen (%15)
  looping thru 1 args of 15:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl arr1 = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
checking: 24:bool:eq (%19, %23)
  looping thru 2 args of 24:bool:eq (%19, %23)
  looping thru 1 args of 19:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl arr1 = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 3 args of 23:int[]:arrinit (%20, %21, %22)
  looping thru 0 args of 20:int:const 1
  looping thru 0 args of 21:int:const 2
  looping thru 0 args of 22:int:const 3
checking: 31:bool:eq (%26, %30)
  looping thru 2 args of 31:bool:eq (%26, %30)
  looping thru 1 args of 26:int[]:read (%6)
  looping thru 1 args of 6:int[]:decl arr2 = 5
  looping thru 1 args of 5:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl arr1 = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 3 args of 30:int[]:arrinit (%27, %28, %29)
  looping thru 0 args of 27:int:const 1
  looping thru 0 args of 28:int:const 2
  looping thru 0 args of 29:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ListAssign_Valid_11.whiley =====
MUTATED INPUT a : int[]
assign 1 := 1
checking: 8:int:arridx (%6, %7)
conjecture: 0 <= 0 && 0 < arraylen(a)
  looping thru 2 args of 8:int:arridx (%6, %7)
  looping thru 1 args of 6:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl a
  looping thru 0 args of 7:int:const 0
checking: 9:int:const 5
  looping thru 0 args of 9:int:const 5
checking: 11:int[]:read (%0)
  looping thru 1 args of 11:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl a
checking: 11:bool:eq (%6, %10)
  looping thru 2 args of 11:bool:eq (%6, %10)
  looping thru 1 args of 6:int[]:call ListAssign_Valid_11:f(%5)
  looping thru 1 args of 5:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl b = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 3 args of 10:int[]:arrinit (%7, %8, %9)
  looping thru 0 args of 7:int:const 5
  looping thru 0 args of 8:int:const 2
  looping thru 0 args of 9:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListAssign_Valid_12.whiley =====
MUTATED INPUT xs : int[][]
assign 1 := 1
checking: 16:int:arridx (%14, %15)
conjecture: 0 <= 0 && 0 < arraylen(toArray(xs)[0])
  looping thru 2 args of 16:int:arridx (%14, %15)
conjecture: 0 <= 0 && 0 < arraylen(xs)
  looping thru 2 args of 14:int[]:arridx (%12, %13)
  looping thru 1 args of 12:int[][]:read (%0)
  looping thru 0 args of 0:int[][]:decl xs
  looping thru 0 args of 13:int:const 0
  looping thru 0 args of 15:int:const 0
checking: 21:int:arridx (%19, %20)
conjecture: 0 <= 0 && 0 < arraylen(toArray(xs)[0])
  looping thru 2 args of 21:int:arridx (%19, %20)
conjecture: 0 <= 0 && 0 < arraylen(xs)
  looping thru 2 args of 19:int[]:arridx (%17, %18)
  looping thru 1 args of 17:int[][]:read (%0)
  looping thru 0 args of 0:int[][]:decl xs
  looping thru 0 args of 18:int:const 0
  looping thru 0 args of 20:int:const 0
wyboogie.NotImplementedYet: array update of complex expression in 22::assign (%16) = (%21)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:718)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== ListAssign_Valid_2.whiley =====
checking: 2:ListAssign_Valid_2:intlist[]:read (%0)
  looping thru 1 args of 2:ListAssign_Valid_2:intlist[]:read (%0)
  looping thru 0 args of 0:ListAssign_Valid_2:intlist[]:decl l
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 2:int:const 0
assign 1 := 1
checking: 4:int|int[][]:read (%0)
  looping thru 1 args of 4:int|int[][]:read (%0)
  looping thru 0 args of 0:int|int[][]:decl x
checking: 8:int[]:arrinit (%5, %6, %7)
  looping thru 3 args of 8:int[]:arrinit (%5, %6, %7)
  looping thru 0 args of 5:int:const 1
  looping thru 0 args of 6:int:const 2
  looping thru 0 args of 7:int:const 3
assign 1 := 1
checking: 11:int|int[][]:read (%0)
  looping thru 1 args of 11:int|int[][]:read (%0)
  looping thru 0 args of 0:int|int[][]:decl x
checking: 19:int[][]:arrinit (%13, %16, %18)
  looping thru 3 args of 19:int[][]:arrinit (%13, %16, %18)
  looping thru 1 args of 13:int[]:arrinit (%12)
  looping thru 0 args of 12:int:const 1
  looping thru 2 args of 16:int[]:arrinit (%14, %15)
  looping thru 0 args of 14:int:const 2
  looping thru 0 args of 15:int:const 3
  looping thru 1 args of 18:int[]:arrinit (%17)
  looping thru 0 args of 17:int:const 5
assign 1 := 1
checking: 25:int|int[]:arridx (%23, %24)
conjecture: 0 <= 0 && 0 < arraylen(x)
  looping thru 2 args of 25:int|int[]:arridx (%23, %24)
  looping thru 1 args of 23:int[][]|int[]:read (%0)
  looping thru 0 args of 0:int|int[][]:decl x
  looping thru 0 args of 24:int:const 0
checking: 26:int:const 1
  looping thru 0 args of 26:int:const 1
checking: 34:bool:eq (%29, %33)
  looping thru 2 args of 34:bool:eq (%29, %33)
  looping thru 1 args of 29:any:call ListAssign_Valid_2:f(%28)
  looping thru 1 args of 28:int|int[][]:read (%0)
  looping thru 0 args of 0:int|int[][]:decl x
  looping thru 3 args of 33:int[]:arrinit (%30, %31, %32)
  looping thru 0 args of 30:int:const 1
  looping thru 0 args of 31:int:const 2
  looping thru 0 args of 32:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListAssign_Valid_3.whiley =====
MUTATED INPUT ls : int[][]
assign 1 := 1
checking: 17:int:arridx (%15, %16)
conjecture: 0 <= 0 && 0 < arraylen(toArray(ls)[0])
  looping thru 2 args of 17:int:arridx (%15, %16)
conjecture: 0 <= 0 && 0 < arraylen(ls)
  looping thru 2 args of 15:int[]:arridx (%13, %14)
  looping thru 1 args of 13:int[][]:read (%0)
  looping thru 0 args of 0:int[][]:decl ls
  looping thru 0 args of 14:int:const 0
  looping thru 0 args of 16:int:const 0
checking: 18:int:const 10
  looping thru 0 args of 18:int:const 10
wyboogie.NotImplementedYet: array update of complex expression in 19::assign (%17) = (%18)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:718)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== ListAssign_Valid_4.whiley =====
MUTATED INPUT board : ListAssign_Valid_4:Board
assign 1 := 1
checking: 10:ListAssign_Valid_4:Piece:arridx (%8, %9)
conjecture: 0 <= 0 && 0 < arraylen(toRecord(board)[$rows])
  looping thru 2 args of 10:ListAssign_Valid_4:Piece:arridx (%8, %9)
  looping thru 1 args of 8:ListAssign_Valid_4:Piece[]:recfield %7 rows
  looping thru 1 args of 7:ListAssign_Valid_4:Board:read (%0)
  looping thru 0 args of 0:ListAssign_Valid_4:Board:decl board
  looping thru 0 args of 9:int:const 0
checking: 11:{bool colour,int kind}:const {colour:=false,kind:=0}
  looping thru 0 args of 11:{bool colour,int kind}:const {colour:=false,kind:=0}
wyboogie.NotImplementedYet: array update of complex expression in 12::assign (%10) = (%11)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:718)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== ListAssign_Valid_5.whiley =====
MUTATED INPUT list : ListAssign_Valid_5:nint[][]
MUTATED INPUT list : ListAssign_Valid_5:nint[][]
assign 1 := 1
checking: 50:ListAssign_Valid_5:nint:arridx (%46, %49)
conjecture: 0 <= toInt(from) + 1 && toInt(from) + 1 < arraylen(toArray(list)[toInt(from)])
  looping thru 2 args of 50:ListAssign_Valid_5:nint:arridx (%46, %49)
conjecture: 0 <= toInt(from) && toInt(from) < arraylen(list)
  looping thru 2 args of 46:ListAssign_Valid_5:nint[]:arridx (%44, %45)
  looping thru 1 args of 44:ListAssign_Valid_5:nint[][]:read (%2)
  looping thru 0 args of 2:ListAssign_Valid_5:nint[][]:decl list
  looping thru 1 args of 45:int:read (%0)
  looping thru 0 args of 0:int:decl from
  looping thru 2 args of 49:int:add (%47, %48)
  looping thru 1 args of 47:int:read (%0)
  looping thru 0 args of 0:int:decl from
  looping thru 0 args of 48:int:const 1
checking: 51:null:const null
  looping thru 0 args of 51:null:const null
wyboogie.NotImplementedYet: array update of complex expression in 52::assign (%50) = (%51)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:718)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== ListAssign_Valid_6.whiley =====
assign 1 := 1
checking: 9:int:arridx (%7, %8)
conjecture: 0 <= 2 && 2 < arraylen(arr2)
  looping thru 2 args of 9:int:arridx (%7, %8)
  looping thru 1 args of 7:int[]:read (%6)
  looping thru 1 args of 6:int[]:decl arr2 = 5
  looping thru 1 args of 5:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl arr1 = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 4
  looping thru 0 args of 8:int:const 2
checking: 10:int:const 3
  looping thru 0 args of 10:int:const 3
checking: 17:bool:eq (%14, %16)
  looping thru 2 args of 17:bool:eq (%14, %16)
conjecture: 0 <= 2 && 2 < arraylen(arr2)
  looping thru 2 args of 14:int:arridx (%12, %13)
  looping thru 1 args of 12:int[]:read (%6)
  looping thru 1 args of 6:int[]:decl arr2 = 5
  looping thru 1 args of 5:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl arr1 = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 4
  looping thru 0 args of 13:int:const 2
  looping thru 1 args of 16:int:arrlen (%15)
  looping thru 1 args of 15:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl arr1 = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 4
checking: 24:bool:eq (%19, %23)
  looping thru 2 args of 24:bool:eq (%19, %23)
  looping thru 1 args of 19:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl arr1 = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 4
  looping thru 3 args of 23:int[]:arrinit (%20, %21, %22)
  looping thru 0 args of 20:int:const 1
  looping thru 0 args of 21:int:const 2
  looping thru 0 args of 22:int:const 4
checking: 31:bool:eq (%26, %30)
  looping thru 2 args of 31:bool:eq (%26, %30)
  looping thru 1 args of 26:int[]:read (%6)
  looping thru 1 args of 6:int[]:decl arr2 = 5
  looping thru 1 args of 5:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl arr1 = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 4
  looping thru 3 args of 30:int[]:arrinit (%27, %28, %29)
  looping thru 0 args of 27:int:const 1
  looping thru 0 args of 28:int:const 2
  looping thru 0 args of 29:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ListAssign_Valid_7.whiley =====
checking: 12:bool:neq (%9, %11)
  looping thru 2 args of 12:bool:neq (%9, %11)
  looping thru 1 args of 9:int:read (%0)
  looping thru 0 args of 0:int:decl i
  looping thru 1 args of 11:int:arrlen (%10)
  looping thru 1 args of 10:int[]:read (%6)
  looping thru 1 args of 6:int[]:decl arr1 = 5
  looping thru 3 args of 5:int[]:arrinit (%2, %3, %4)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 2
  looping thru 0 args of 4:int:const 64
assign 1 := 1
checking: 15:int:arridx (%13, %14)
conjecture: 0 <= 2 && 2 < arraylen(arr2)
  looping thru 2 args of 15:int:arridx (%13, %14)
  looping thru 1 args of 13:int[]:read (%8)
  looping thru 1 args of 8:int[]:decl arr2 = 7
  looping thru 1 args of 7:int[]:read (%6)
  looping thru 1 args of 6:int[]:decl arr1 = 5
  looping thru 3 args of 5:int[]:arrinit (%2, %3, %4)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 2
  looping thru 0 args of 4:int:const 64
  looping thru 0 args of 14:int:const 2
checking: 16:int:const 3
  looping thru 0 args of 16:int:const 3
assign 1 := 1
checking: 21:int:arridx (%19, %20)
conjecture: 0 <= 2 && 2 < arraylen(arr2)
  looping thru 2 args of 21:int:arridx (%19, %20)
  looping thru 1 args of 19:int[]:read (%8)
  looping thru 1 args of 8:int[]:decl arr2 = 7
  looping thru 1 args of 7:int[]:read (%6)
  looping thru 1 args of 6:int[]:decl arr1 = 5
  looping thru 3 args of 5:int[]:arrinit (%2, %3, %4)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 2
  looping thru 0 args of 4:int:const 64
  looping thru 0 args of 20:int:const 2
checking: 22:int:read (%0)
  looping thru 1 args of 22:int:read (%0)
  looping thru 0 args of 0:int:decl i
checking: 31:bool:eq (%28, %30)
  looping thru 2 args of 31:bool:eq (%28, %30)
conjecture: 0 <= 2 && 2 < arraylen(arr2)
  looping thru 2 args of 28:int:arridx (%26, %27)
  looping thru 1 args of 26:int[]:read (%8)
  looping thru 1 args of 8:int[]:decl arr2 = 7
  looping thru 1 args of 7:int[]:read (%6)
  looping thru 1 args of 6:int[]:decl arr1 = 5
  looping thru 3 args of 5:int[]:arrinit (%2, %3, %4)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 2
  looping thru 0 args of 4:int:const 64
  looping thru 0 args of 27:int:const 2
  looping thru 1 args of 30:int:arrlen (%29)
  looping thru 1 args of 29:int[]:read (%6)
  looping thru 1 args of 6:int[]:decl arr1 = 5
  looping thru 3 args of 5:int[]:arrinit (%2, %3, %4)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 2
  looping thru 0 args of 4:int:const 64
checking: 35:{int[] f1,int[] f2}:recinit (%33, %34)
  looping thru 2 args of 35:{int[] f1,int[] f2}:recinit (%33, %34)
  looping thru 1 args of 33:int[]:read (%6)
  looping thru 1 args of 6:int[]:decl arr1 = 5
  looping thru 3 args of 5:int[]:arrinit (%2, %3, %4)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 2
  looping thru 0 args of 4:int:const 64
  looping thru 1 args of 34:int[]:read (%8)
  looping thru 1 args of 8:int[]:decl arr2 = 7
  looping thru 1 args of 7:int[]:read (%6)
  looping thru 1 args of 6:int[]:decl arr1 = 5
  looping thru 3 args of 5:int[]:arrinit (%2, %3, %4)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 2
  looping thru 0 args of 4:int:const 64
checking: 11:bool:eq (%1, %10)
  looping thru 2 args of 11:bool:eq (%1, %10)
  looping thru 1 args of 1:{int[] f1,int[] f2}:call ListAssign_Valid_7:f(%0)
  looping thru 0 args of 0:int:const 2
  looping thru 2 args of 10:{int[] f1,int[] f2}:recinit (%5, %9)
  looping thru 3 args of 5:int[]:arrinit (%2, %3, %4)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 2
  looping thru 0 args of 4:int:const 64
  looping thru 3 args of 9:int[]:arrinit (%6, %7, %8)
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 7:int:const 2
  looping thru 0 args of 8:int:const 3
checking: 24:bool:eq (%14, %23)
  looping thru 2 args of 24:bool:eq (%14, %23)
  looping thru 1 args of 14:{int[] f1,int[] f2}:call ListAssign_Valid_7:f(%13)
  looping thru 0 args of 13:int:const 3
  looping thru 2 args of 23:{int[] f1,int[] f2}:recinit (%18, %22)
  looping thru 3 args of 18:int[]:arrinit (%15, %16, %17)
  looping thru 0 args of 15:int:const 1
  looping thru 0 args of 16:int:const 2
  looping thru 0 args of 17:int:const 64
  looping thru 3 args of 22:int[]:arrinit (%19, %20, %21)
  looping thru 0 args of 19:int:const 1
  looping thru 0 args of 20:int:const 2
  looping thru 0 args of 21:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListAssign_Valid_8.whiley =====
assign 1 := 1
checking: 12:int[]:arridx (%10, %11)
conjecture: 0 <= 0 && 0 < arraylen(a2)
  looping thru 2 args of 12:int[]:arridx (%10, %11)
  looping thru 1 args of 10:int[][]:read (%9)
  looping thru 1 args of 9:int[][]:decl a2 = 8
  looping thru 1 args of 8:int[][]:read (%7)
  looping thru 1 args of 7:int[][]:decl a1 = 6
  looping thru 2 args of 6:int[][]:arrinit (%3, %5)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 1 args of 5:int[]:arrinit (%4)
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 11:int:const 0
checking: 16:int[]:arrinit (%13, %14, %15)
  looping thru 3 args of 16:int[]:arrinit (%13, %14, %15)
  looping thru 0 args of 13:int:const 3
  looping thru 0 args of 14:int:const 4
  looping thru 0 args of 15:int:const 5
checking: 25:bool:eq (%20, %24)
  looping thru 2 args of 25:bool:eq (%20, %24)
conjecture: 0 <= 0 && 0 < arraylen(a1)
  looping thru 2 args of 20:int[]:arridx (%18, %19)
  looping thru 1 args of 18:int[][]:read (%7)
  looping thru 1 args of 7:int[][]:decl a1 = 6
  looping thru 2 args of 6:int[][]:arrinit (%3, %5)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 1 args of 5:int[]:arrinit (%4)
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 19:int:const 0
  looping thru 3 args of 24:int[]:arrinit (%21, %22, %23)
  looping thru 0 args of 21:int:const 1
  looping thru 0 args of 22:int:const 2
  looping thru 0 args of 23:int:const 3
checking: 32:bool:eq (%29, %31)
  looping thru 2 args of 32:bool:eq (%29, %31)
conjecture: 0 <= 1 && 1 < arraylen(a1)
  looping thru 2 args of 29:int[]:arridx (%27, %28)
  looping thru 1 args of 27:int[][]:read (%7)
  looping thru 1 args of 7:int[][]:decl a1 = 6
  looping thru 2 args of 6:int[][]:arrinit (%3, %5)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 1 args of 5:int[]:arrinit (%4)
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 28:int:const 1
  looping thru 1 args of 31:int[]:arrinit (%30)
  looping thru 0 args of 30:int:const 0
checking: 41:bool:eq (%36, %40)
  looping thru 2 args of 41:bool:eq (%36, %40)
conjecture: 0 <= 0 && 0 < arraylen(a2)
  looping thru 2 args of 36:int[]:arridx (%34, %35)
  looping thru 1 args of 34:int[][]:read (%9)
  looping thru 1 args of 9:int[][]:decl a2 = 8
  looping thru 1 args of 8:int[][]:read (%7)
  looping thru 1 args of 7:int[][]:decl a1 = 6
  looping thru 2 args of 6:int[][]:arrinit (%3, %5)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 1 args of 5:int[]:arrinit (%4)
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 35:int:const 0
  looping thru 3 args of 40:int[]:arrinit (%37, %38, %39)
  looping thru 0 args of 37:int:const 3
  looping thru 0 args of 38:int:const 4
  looping thru 0 args of 39:int:const 5
checking: 48:bool:eq (%45, %47)
  looping thru 2 args of 48:bool:eq (%45, %47)
conjecture: 0 <= 1 && 1 < arraylen(a2)
  looping thru 2 args of 45:int[]:arridx (%43, %44)
  looping thru 1 args of 43:int[][]:read (%9)
  looping thru 1 args of 9:int[][]:decl a2 = 8
  looping thru 1 args of 8:int[][]:read (%7)
  looping thru 1 args of 7:int[][]:decl a1 = 6
  looping thru 2 args of 6:int[][]:arrinit (%3, %5)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 1 args of 5:int[]:arrinit (%4)
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 44:int:const 1
  looping thru 1 args of 47:int[]:arrinit (%46)
  looping thru 0 args of 46:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ListAssign_Valid_9.whiley =====
checking: 7:int[]:arrinit (%5, %6)
  looping thru 2 args of 7:int[]:arrinit (%5, %6)
  looping thru 0 args of 5:int:const 1
  looping thru 0 args of 6:int:const 2
assign 1 := 1
checking: 6:int:arridx (%4, %5)
conjecture: 0 <= 0 && 0 < arraylen(a2)
  looping thru 2 args of 6:int:arridx (%4, %5)
  looping thru 1 args of 4:int[]:read (%3)
  looping thru 1 args of 3:int[]:decl a2 = 2
  looping thru 0 args of 2:int[]:call ListAssign_Valid_9:f()
  looping thru 0 args of 5:int:const 0
checking: 7:int:const 0
  looping thru 0 args of 7:int:const 0
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
conjecture: 0 <= 0 && 0 < arraylen(a1)
  looping thru 2 args of 11:int:arridx (%9, %10)
  looping thru 1 args of 9:int[]:read (%1)
  looping thru 1 args of 1:int[]:decl a1 = 0
  looping thru 0 args of 0:int[]:call ListAssign_Valid_9:f()
  looping thru 0 args of 10:int:const 0
  looping thru 0 args of 12:int:const 1
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
conjecture: 0 <= 1 && 1 < arraylen(a1)
  looping thru 2 args of 17:int:arridx (%15, %16)
  looping thru 1 args of 15:int[]:read (%1)
  looping thru 1 args of 1:int[]:decl a1 = 0
  looping thru 0 args of 0:int[]:call ListAssign_Valid_9:f()
  looping thru 0 args of 16:int:const 1
  looping thru 0 args of 18:int:const 2
checking: 25:bool:eq (%23, %24)
  looping thru 2 args of 25:bool:eq (%23, %24)
conjecture: 0 <= 0 && 0 < arraylen(a2)
  looping thru 2 args of 23:int:arridx (%21, %22)
  looping thru 1 args of 21:int[]:read (%3)
  looping thru 1 args of 3:int[]:decl a2 = 2
  looping thru 0 args of 2:int[]:call ListAssign_Valid_9:f()
  looping thru 0 args of 22:int:const 0
  looping thru 0 args of 24:int:const 0
checking: 31:bool:eq (%29, %30)
  looping thru 2 args of 31:bool:eq (%29, %30)
conjecture: 0 <= 1 && 1 < arraylen(a2)
  looping thru 2 args of 29:int:arridx (%27, %28)
  looping thru 1 args of 27:int[]:read (%3)
  looping thru 1 args of 3:int[]:decl a2 = 2
  looping thru 0 args of 2:int[]:call ListAssign_Valid_9:f()
  looping thru 0 args of 28:int:const 1
  looping thru 0 args of 30:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListEmpty_Valid_1.whiley =====
checking: 2:int[]:read (%0)
  looping thru 1 args of 2:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
checking: 7:bool:eq (%3, %6)
  looping thru 2 args of 7:bool:eq (%3, %6)
  looping thru 1 args of 3:int[]:call ListEmpty_Valid_1:f(%2)
  looping thru 2 args of 2:int[]:arrinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 4
  looping thru 2 args of 6:int[]:arrinit (%4, %5)
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 4
checking: 16:bool:eq (%12, %15)
  looping thru 2 args of 16:bool:eq (%12, %15)
  looping thru 1 args of 12:int[]:call ListEmpty_Valid_1:f(%11)
  looping thru 2 args of 11:int[]:arrgen (%9, %10)
  looping thru 0 args of 9:int:const 0
  looping thru 0 args of 10:int:const 0
  looping thru 2 args of 15:int[]:arrgen (%13, %14)
  looping thru 0 args of 13:int:const 0
  looping thru 0 args of 14:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListGenerator_Valid_1.whiley =====
checking: 13:int:arridx (%9, %12)
conjecture: 0 <= toInt(z) - 1 && toInt(z) - 1 < arraylen(x)
  looping thru 2 args of 13:int:arridx (%9, %12)
  looping thru 1 args of 9:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl x
  looping thru 2 args of 12:int:sub (%10, %11)
  looping thru 1 args of 10:int:read (%8)
  looping thru 1 args of 8:int:decl z = 7
  looping thru 1 args of 7:int:arrlen (%6)
  looping thru 1 args of 6:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl x
  looping thru 0 args of 11:int:const 1
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:call ListGenerator_Valid_1:f(%5)
  looping thru 1 args of 5:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl arr = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 7:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListGenerator_Valid_10.whiley =====
checking: 4:int[][]:arrgen (%2, %3)
  looping thru 2 args of 4:int[][]:arrgen (%2, %3)
  looping thru 1 args of 2:int[]:arrinit (%1)
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 3:int:const 1
checking: 4:bool:eq (%0, %3)
  looping thru 2 args of 4:bool:eq (%0, %3)
  looping thru 0 args of 0:int[][]:call ListGenerator_Valid_10:f()
  looping thru 1 args of 3:int[][]:arrinit (%2)
  looping thru 1 args of 2:int[]:arrinit (%1)
  looping thru 0 args of 1:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListGenerator_Valid_11.whiley =====
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
conjecture: 0 <= 0 && 0 < arraylen(ls)
  looping thru 2 args of 6:bool:arridx (%4, %5)
  looping thru 1 args of 4:bool[]:read (%3)
  looping thru 1 args of 3:bool[]:decl ls = 2
  looping thru 2 args of 2:bool[]:arrgen (%0, %1)
  looping thru 0 args of 0:bool:const false
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 5:int:const 0
  looping thru 0 args of 7:bool:const false
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:int:arrlen (%10)
  looping thru 1 args of 10:bool[]:read (%3)
  looping thru 1 args of 3:bool[]:decl ls = 2
  looping thru 2 args of 2:bool[]:arrgen (%0, %1)
  looping thru 0 args of 0:bool:const false
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 12:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ListGenerator_Valid_12.whiley =====
checking: 8:bool:eq (%4, %7)
  looping thru 2 args of 8:bool:eq (%4, %7)
  looping thru 1 args of 4:bool[]:read (%3)
  looping thru 1 args of 3:bool[]:decl ls = 2
  looping thru 2 args of 2:bool[]:arrgen (%0, %1)
  looping thru 0 args of 0:bool:const false
  looping thru 0 args of 1:int:const 2
  looping thru 2 args of 7:bool[]:arrinit (%5, %6)
  looping thru 0 args of 5:bool:const false
  looping thru 0 args of 6:bool:const false
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:int:arrlen (%10)
  looping thru 1 args of 10:bool[]:read (%3)
  looping thru 1 args of 3:bool[]:decl ls = 2
  looping thru 2 args of 2:bool[]:arrgen (%0, %1)
  looping thru 0 args of 0:bool:const false
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 12:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ListGenerator_Valid_2.whiley =====
checking: 14:bool:eq (%12, %13)
  looping thru 2 args of 14:bool:eq (%12, %13)
conjecture: 0 <= toInt(z) - 1 && toInt(z) - 1 < arraylen(x)
  looping thru 2 args of 12:int:arridx (%8, %11)
  looping thru 1 args of 8:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl x
  looping thru 2 args of 11:int:sub (%9, %10)
  looping thru 1 args of 9:int:read (%7)
  looping thru 1 args of 7:int:decl z = 6
  looping thru 1 args of 6:int:arrlen (%5)
  looping thru 1 args of 5:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl x
  looping thru 0 args of 10:int:const 1
  looping thru 0 args of 13:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListGenerator_Valid_3.whiley =====
checking: 11:bool:gt (%9, %10)
  looping thru 2 args of 11:bool:gt (%9, %10)
  looping thru 1 args of 9:int:arrlen (%8)
conjecture: 0 <= 0 && 0 < arraylen(x)
  looping thru 2 args of 8:int[]:arridx (%6, %7)
  looping thru 1 args of 6:int[][]:read (%0)
  looping thru 0 args of 0:int[][]:decl x
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 10:int:const 2
checking: 16:int:arridx (%14, %15)
conjecture: 0 <= 1 && 1 < arraylen(toArray(x)[0])
  looping thru 2 args of 16:int:arridx (%14, %15)
conjecture: 0 <= 0 && 0 < arraylen(x)
  looping thru 2 args of 14:int[]:arridx (%12, %13)
  looping thru 1 args of 12:int[][]:read (%0)
  looping thru 0 args of 0:int[][]:decl x
  looping thru 0 args of 13:int:const 0
  looping thru 0 args of 15:int:const 1
checking: 19:int:const 0
  looping thru 0 args of 19:int:const 0
checking: 11:bool:eq (%9, %10)
  looping thru 2 args of 11:bool:eq (%9, %10)
  looping thru 1 args of 9:int:call ListGenerator_Valid_3:f(%8)
  looping thru 1 args of 8:int[][]:read (%7)
  looping thru 1 args of 7:int[][]:decl arr = 6
  looping thru 2 args of 6:int[][]:arrinit (%3, %5)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 1 args of 5:int[]:arrinit (%4)
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 10:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListGenerator_Valid_5.whiley =====
checking: 3:int:arrlen (%2)
  looping thru 1 args of 3:int:arrlen (%2)
  looping thru 1 args of 2:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl x
checking: 7:bool:eq (%5, %6)
  looping thru 2 args of 7:bool:eq (%5, %6)
  looping thru 1 args of 5:int:call ListGenerator_Valid_5:f(%4)
  looping thru 1 args of 4:int[]:read (%3)
  looping thru 1 args of 3:int[]:decl arr = 2
  looping thru 2 args of 2:int[]:arrgen (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 6:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListGenerator_Valid_6.whiley =====
checking: 3:bool[]:arrgen (%1, %2)
  looping thru 2 args of 3:bool[]:arrgen (%1, %2)
  looping thru 0 args of 1:bool:const false
  looping thru 0 args of 2:int:const 3
checking: 5:bool:eq (%0, %4)
  looping thru 2 args of 5:bool:eq (%0, %4)
  looping thru 0 args of 0:bool[]:call ListGenerator_Valid_6:f()
  looping thru 3 args of 4:bool[]:arrinit (%1, %2, %3)
  looping thru 0 args of 1:bool:const false
  looping thru 0 args of 2:bool:const false
  looping thru 0 args of 3:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListGenerator_Valid_7.whiley =====
checking: 3:int[]:arrgen (%1, %2)
  looping thru 2 args of 3:int[]:arrgen (%1, %2)
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 2:int:const 4
checking: 6:bool:eq (%0, %5)
  looping thru 2 args of 6:bool:eq (%0, %5)
  looping thru 0 args of 0:int[]:call ListGenerator_Valid_7:f()
  looping thru 4 args of 5:int[]:arrinit (%1, %2, %3, %4)
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 2:int:const 0
  looping thru 0 args of 3:int:const 0
  looping thru 0 args of 4:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListGenerator_Valid_8.whiley =====
checking: 3:bool[]:arrgen (%1, %2)
  looping thru 2 args of 3:bool[]:arrgen (%1, %2)
  looping thru 0 args of 1:bool:const false
  looping thru 0 args of 2:int:const 2
checking: 4:bool:eq (%0, %3)
  looping thru 2 args of 4:bool:eq (%0, %3)
  looping thru 0 args of 0:bool[]:call ListGenerator_Valid_8:f()
  looping thru 2 args of 3:bool[]:arrinit (%1, %2)
  looping thru 0 args of 1:bool:const false
  looping thru 0 args of 2:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListGenerator_Valid_9.whiley =====
checking: 5:{bool b1,bool b2}[]:arrgen (%3, %4)
  looping thru 2 args of 5:{bool b1,bool b2}[]:arrgen (%3, %4)
  looping thru 2 args of 3:{bool b1,bool b2}:recinit (%1, %2)
  looping thru 0 args of 1:bool:const false
  looping thru 0 args of 2:bool:const false
  looping thru 0 args of 4:int:const 2
checking: 8:bool:eq (%4, %7)
  looping thru 2 args of 8:bool:eq (%4, %7)
  looping thru 0 args of 4:{bool b1,bool b2}[]:call ListGenerator_Valid_9:f()
  looping thru 2 args of 7:{bool b1,bool b2}[]:arrinit (%5, %6)
  looping thru 1 args of 5:{bool b1,bool b2}:read (%3)
  looping thru 1 args of 3:{bool b1,bool b2}:decl rec = 2
  looping thru 2 args of 2:{bool b1,bool b2}:recinit (%0, %1)
  looping thru 0 args of 0:bool:const false
  looping thru 0 args of 1:bool:const false
  looping thru 1 args of 6:{bool b1,bool b2}:read (%3)
  looping thru 1 args of 3:{bool b1,bool b2}:decl rec = 2
  looping thru 2 args of 2:{bool b1,bool b2}:recinit (%0, %1)
  looping thru 0 args of 0:bool:const false
  looping thru 0 args of 1:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListLength_Valid_1.whiley =====
checking: 3:int:arrlen (%2)
  looping thru 1 args of 3:int:arrlen (%2)
  looping thru 1 args of 2:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
checking: 6:bool:eq (%4, %5)
  looping thru 2 args of 6:bool:eq (%4, %5)
  looping thru 1 args of 4:ListLength_Valid_1:nat:call ListLength_Valid_1:f(%3)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 5:int:const 3
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:ListLength_Valid_1:nat:call ListLength_Valid_1:f(%10)
  looping thru 2 args of 10:int[]:arrgen (%8, %9)
  looping thru 0 args of 8:int:const 0
  looping thru 0 args of 9:int:const 0
  looping thru 0 args of 12:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListLength_Valid_2.whiley =====
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:arrlen (%5)
  looping thru 1 args of 5:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl arr = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 7:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ListLength_Valid_3.whiley =====
checking: 10:bool:lt (%7, %9)
  looping thru 2 args of 10:bool:lt (%7, %9)
conjecture: 0 <= 0 && 0 < arraylen(arr)
  looping thru 2 args of 7:int:arridx (%5, %6)
  looping thru 1 args of 5:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl arr = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 6:int:const 0
  looping thru 1 args of 9:int:arrlen (%8)
  looping thru 1 args of 8:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl arr = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
checking: 17:bool:lt (%14, %16)
  looping thru 2 args of 17:bool:lt (%14, %16)
conjecture: 0 <= 1 && 1 < arraylen(arr)
  looping thru 2 args of 14:int:arridx (%12, %13)
  looping thru 1 args of 12:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl arr = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 13:int:const 1
  looping thru 1 args of 16:int:arrlen (%15)
  looping thru 1 args of 15:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl arr = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
checking: 24:bool:eq (%21, %23)
  looping thru 2 args of 24:bool:eq (%21, %23)
conjecture: 0 <= 2 && 2 < arraylen(arr)
  looping thru 2 args of 21:int:arridx (%19, %20)
  looping thru 1 args of 19:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl arr = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 20:int:const 2
  looping thru 1 args of 23:int:arrlen (%22)
  looping thru 1 args of 22:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl arr = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== MessageRef_Valid_1.whiley =====
mangle test : method()->() to test$2
checking: 5:int:add (%3, %4)
  looping thru 2 args of 5:int:add (%3, %4)
  looping thru 1 args of 3:int:read (%1)
  looping thru 0 args of 1:int:decl x
  looping thru 0 args of 4:int:const 123
checking: 6:int:icall %3 (%4, %5)
  looping thru 1 args of 6:int:icall %3 (%4, %5)
  looping thru 1 args of 3:MessageRef_Valid_1:MyMeth:read (%0)
  looping thru 0 args of 0:MessageRef_Valid_1:MyMeth:decl m
wyboogie.NotImplementedYet: indirect invoke in 6:int:icall %3 (%4, %5)
	at wyboogie.Wyil2Boogie.writeIndirectInvoke(Wyil2Boogie.java:1140)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:969)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== MessageRef_Valid_2.whiley =====
wyboogie.NotImplementedYet: dereference in 5:{int position}:deref (%4)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:986)
	at wyboogie.Wyil2Boogie.writeFieldLoad(Wyil2Boogie.java:1133)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:966)
	at wyboogie.Wyil2Boogie.infixOp(Wyil2Boogie.java:1079)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1001)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== MessageSend_Valid_1.whiley =====
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:read (%1)
  looping thru 0 args of 1:int:decl x
  looping thru 0 args of 3:int:const 1
wyboogie.NotImplementedYet: new record/object in 2:&{int field}:new (%1)
	at wyboogie.Wyil2Boogie.writeNewObject(Wyil2Boogie.java:1175)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:982)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== MessageSend_Valid_2.whiley =====
checking: 4:int:recfield %3 state
  looping thru 1 args of 4:int:recfield %3 state
  looping thru 1 args of 3:{int state}:deref (%2)
  looping thru 1 args of 2:MessageSend_Valid_2:Proc:read (%0)
  looping thru 0 args of 0:MessageSend_Valid_2:Proc:decl _this
wyboogie.NotImplementedYet: dereference in 3:{int state}:deref (%2)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:986)
	at wyboogie.Wyil2Boogie.writeFieldLoad(Wyil2Boogie.java:1133)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:966)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== MessageSend_Valid_3.whiley =====
checking: 4:int:recfield %3 state
  looping thru 1 args of 4:int:recfield %3 state
  looping thru 1 args of 3:{int state}:deref (%2)
  looping thru 1 args of 2:MessageSend_Valid_3:Proc:read (%0)
  looping thru 0 args of 0:MessageSend_Valid_3:Proc:decl _this
wyboogie.NotImplementedYet: dereference in 3:{int state}:deref (%2)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:986)
	at wyboogie.Wyil2Boogie.writeFieldLoad(Wyil2Boogie.java:1133)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:966)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== MessageSend_Valid_4.whiley =====
checking: 4:int:recfield %3 state
  looping thru 1 args of 4:int:recfield %3 state
  looping thru 1 args of 3:{int state}:deref (%2)
  looping thru 1 args of 2:MessageSend_Valid_4:Proc:read (%0)
  looping thru 0 args of 0:MessageSend_Valid_4:Proc:decl _this
wyboogie.NotImplementedYet: dereference in 3:{int state}:deref (%2)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:986)
	at wyboogie.Wyil2Boogie.writeFieldLoad(Wyil2Boogie.java:1133)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:966)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== MessageSend_Valid_5.whiley =====
wyboogie.NotImplementedYet: dereference in 6:{int[] items,int result}:deref (%5)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:986)
	at wyboogie.Wyil2Boogie.writeFieldLoad(Wyil2Boogie.java:1133)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:966)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== MethodCall_Valid_1.whiley =====
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== MethodCall_Valid_2.whiley =====
checking: 1:int:const 1
  looping thru 0 args of 1:int:const 1
checking: 5:int[]:arrinit (%1, %2, %3, %4)
  looping thru 4 args of 5:int[]:arrinit (%1, %2, %3, %4)
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 2:int:const 2
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:call MethodCall_Valid_2:get()
wyboogie.NotImplementedYet: call to method (get) from inside an expression in 4:int:call MethodCall_Valid_2:get()
	at wyboogie.Wyil2Boogie.writeInvoke(Wyil2Boogie.java:1151)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:972)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:545)
	at java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:438)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:952)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== MethodCall_Valid_3.whiley =====
checking: 1:int:const 1
  looping thru 0 args of 1:int:const 1
checking: 4:{int x,int y}:recinit (%2, %3)
  looping thru 2 args of 4:{int x,int y}:recinit (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl y
  looping thru 0 args of 3:int:call MethodCall_Valid_3:get()
wyboogie.NotImplementedYet: call to method (get) from inside an expression in 3:int:call MethodCall_Valid_3:get()
	at wyboogie.Wyil2Boogie.writeInvoke(Wyil2Boogie.java:1151)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:972)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:545)
	at java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:438)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:978)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== MethodCall_Valid_4.whiley =====
wyboogie.NotImplementedYet: dereference in 6:{int[] items,int result}:deref (%5)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:986)
	at wyboogie.Wyil2Boogie.writeFieldLoad(Wyil2Boogie.java:1133)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:966)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== MethodRef_Valid_1.whiley =====
mangle test : method()->() to test$2
checking: 4:int:add (%2, %3)
  looping thru 2 args of 4:int:add (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 3:int:const 123
checking: 4:int:icall %2 (%3)
  looping thru 1 args of 4:int:icall %2 (%3)
  looping thru 1 args of 2:MethodRef_Valid_1:MyMeth:read (%0)
  looping thru 0 args of 0:MethodRef_Valid_1:MyMeth:decl m
wyboogie.NotImplementedYet: indirect invoke in 4:int:icall %2 (%3)
	at wyboogie.Wyil2Boogie.writeIndirectInvoke(Wyil2Boogie.java:1140)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:969)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== MethodRef_Valid_2.whiley =====
checking: 2:int:const 1
  looping thru 0 args of 2:int:const 1
checking: 6:int:icall %4 (%5)
  looping thru 1 args of 6:int:icall %4 (%5)
  looping thru 1 args of 4:method(int)->(int):recfield %3 read
  looping thru 1 args of 3:MethodRef_Valid_2:Reader:read (%0)
  looping thru 0 args of 0:MethodRef_Valid_2:Reader:decl r
wyboogie.NotImplementedYet: indirect invoke in 6:int:icall %4 (%5)
	at wyboogie.Wyil2Boogie.writeIndirectInvoke(Wyil2Boogie.java:1140)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:969)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Method_Valid_1.whiley =====
checking: 10:int[]:arrinit (%1, %2, %3, %4, %5, %6, %7, %8, %9)
  looping thru 9 args of 10:int[]:arrinit (%1, %2, %3, %4, %5, %6, %7, %8, %9)
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 2:int:const 0
  looping thru 0 args of 3:int:const 0
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 5:int:const 0
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 8:int:const 0
  looping thru 0 args of 9:int:const 0
checking: 15:bool:lt (%12, %14)
  looping thru 2 args of 15:bool:lt (%12, %14)
  looping thru 1 args of 12:int:read (%6)
  looping thru 1 args of 6:int:decl i = 5
  looping thru 0 args of 5:int:const 0
  looping thru 1 args of 14:int:arrlen (%13)
  looping thru 1 args of 13:Method_Valid_1:Board:read (%0)
  looping thru 0 args of 0:Method_Valid_1:Board:decl board
checking: 22:bool:eq (%20, %21)
  looping thru 2 args of 22:bool:eq (%20, %21)
  looping thru 1 args of 20:Method_Valid_1:Piece:read (%19)
  looping thru 1 args of 19:Method_Valid_1:Piece:decl p = 18
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(board)
  looping thru 2 args of 18:Method_Valid_1:Piece:arridx (%16, %17)
  looping thru 1 args of 16:Method_Valid_1:Board:read (%0)
  looping thru 0 args of 0:Method_Valid_1:Board:decl board
  looping thru 1 args of 17:int:read (%6)
  looping thru 1 args of 6:int:decl i = 5
  looping thru 0 args of 5:int:const 0
  looping thru 1 args of 21:Method_Valid_1:Piece:read (%1)
  looping thru 0 args of 1:Method_Valid_1:Piece:decl piece
wyboogie.NotImplementedYet: comparison of void intersection type: Method_Valid_1:Piece and Method_Valid_1:Piece in 22:bool:eq (%20, %21)
	at wyboogie.Wyil2Boogie.writeEquality(Wyil2Boogie.java:1234)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1032)
	at wyboogie.Wyil2Boogie.boolExpr(Wyil2Boogie.java:934)
	at wyboogie.Wyil2Boogie.writeIf(Wyil2Boogie.java:826)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:626)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeWhile(Wyil2Boogie.java:881)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:641)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== MultiLineComment_Valid_1.whiley =====
checking: 2:bool:eq (%0, %1)
  looping thru 2 args of 2:bool:eq (%0, %1)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const true
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== MultiLineComment_Valid_2.whiley =====
checking: 2:bool:eq (%0, %1)
  looping thru 2 args of 2:bool:eq (%0, %1)
  looping thru 0 args of 0:int:const 5
  looping thru 0 args of 1:int:const 5
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== NegationType_Valid_1.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:any:read (%0)
  looping thru 0 args of 0:any:decl x
  looping thru 0 args of 3:type:const null
checking: 7:int:const 1
  looping thru 0 args of 7:int:const 1
checking: 10:!null:read (%5)
  looping thru 1 args of 10:!null:read (%5)
  looping thru 1 args of 5:!null:alias (%0)
  looping thru 0 args of 0:any:decl x
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:!null:call NegationType_Valid_1:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 1
checking: 14:bool:eq (%9, %13)
  looping thru 2 args of 14:bool:eq (%9, %13)
  looping thru 1 args of 9:!null:call NegationType_Valid_1:f(%8)
  looping thru 3 args of 8:int[]:arrinit (%5, %6, %7)
  looping thru 0 args of 5:int:const 1
  looping thru 0 args of 6:int:const 2
  looping thru 0 args of 7:int:const 3
  looping thru 3 args of 13:int[]:arrinit (%10, %11, %12)
  looping thru 0 args of 10:int:const 1
  looping thru 0 args of 11:int:const 2
  looping thru 0 args of 12:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== NegationType_Valid_2.whiley =====
checking: 2:int:read (%0)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:!null:call NegationType_Valid_2:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== NegationType_Valid_3.whiley =====
checking: 2:int[]:read (%0)
  looping thru 1 args of 2:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl x
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:!(null|int):call NegationType_Valid_3:f(%0)
  looping thru 0 args of 0:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 2:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== NegationType_Valid_4.whiley =====
checking: 2:int[]:read (%0)
  looping thru 1 args of 2:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl x
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:!null:call NegationType_Valid_4:f(%0)
  looping thru 0 args of 0:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 2:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== NegationType_Valid_5.whiley =====
checking: 1:int:const 1
  looping thru 0 args of 1:int:const 1
checking: 2:bool:eq (%0, %1)
  looping thru 2 args of 2:bool:eq (%0, %1)
  looping thru 0 args of 0:!null:call NegationType_Valid_5:f()
  looping thru 0 args of 1:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== OpenRecord_Valid_1.whiley =====
checking: 3:int:recfield %2 field
  looping thru 1 args of 3:int:recfield %2 field
  looping thru 1 args of 2:OpenRecord_Valid_1:OpenRecord:read (%0)
  looping thru 0 args of 0:OpenRecord_Valid_1:OpenRecord:decl r
checking: 6:bool:eq (%4, %5)
  looping thru 2 args of 6:bool:eq (%4, %5)
  looping thru 1 args of 4:int:call OpenRecord_Valid_1:getField(%3)
  looping thru 1 args of 3:{int field}:read (%2)
  looping thru 1 args of 2:OpenRecord_Valid_1:OpenRecord:decl r = 1
  looping thru 1 args of 1:{int field}:recinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 5:int:const 1
assign 1 := 1
checking: 8:{int field}:read (%2)
  looping thru 1 args of 8:{int field}:read (%2)
  looping thru 1 args of 2:OpenRecord_Valid_1:OpenRecord:decl r = 1
  looping thru 1 args of 1:{int field}:recinit (%0)
  looping thru 0 args of 0:int:const 1
checking: 11:{int field,int[] x}:recinit (%9, %10)
  looping thru 2 args of 11:{int field,int[] x}:recinit (%9, %10)
  looping thru 0 args of 9:int:const 2
  looping thru 0 args of 10:int[]:const [104,101,108,108,111]
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 1 args of 14:int:call OpenRecord_Valid_1:getField(%13)
  looping thru 1 args of 13:{int field,int[] x}:read (%2)
  looping thru 1 args of 2:OpenRecord_Valid_1:OpenRecord:decl r = 1
  looping thru 1 args of 1:{int field}:recinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 15:int:const 2
assign 1 := 1
checking: 18:{int field,int[] x}:read (%2)
  looping thru 1 args of 18:{int field,int[] x}:read (%2)
  looping thru 1 args of 2:OpenRecord_Valid_1:OpenRecord:decl r = 1
  looping thru 1 args of 1:{int field}:recinit (%0)
  looping thru 0 args of 0:int:const 1
checking: 22:{int field,int x,int y}:recinit (%19, %20, %21)
  looping thru 3 args of 22:{int field,int x,int y}:recinit (%19, %20, %21)
  looping thru 0 args of 19:int:const 3
  looping thru 0 args of 20:int:const 1
  looping thru 0 args of 21:int:const 2
checking: 27:bool:eq (%25, %26)
  looping thru 2 args of 27:bool:eq (%25, %26)
  looping thru 1 args of 25:int:call OpenRecord_Valid_1:getField(%24)
  looping thru 1 args of 24:{int field,int x,int y}:read (%2)
  looping thru 1 args of 2:OpenRecord_Valid_1:OpenRecord:decl r = 1
  looping thru 1 args of 1:{int field}:recinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 26:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== OpenRecord_Valid_10.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:OpenRecord_Valid_10:Attribute:read (%0)
  looping thru 0 args of 0:OpenRecord_Valid_10:Attribute:decl attr
  looping thru 0 args of 3:type:const OpenRecord_Valid_10:CodeAttr
checking: 7:bool:const true
  looping thru 0 args of 7:bool:const true
checking: 10:bool:const false
  looping thru 0 args of 10:bool:const false
checking: 6:bool:eq (%4, %5)
  looping thru 2 args of 6:bool:eq (%4, %5)
  looping thru 1 args of 4:bool:call OpenRecord_Valid_10:match(%3)
  looping thru 1 args of 3:{int[] name}:read (%2)
  looping thru 1 args of 2:OpenRecord_Valid_10:Attribute:decl r = 1
  looping thru 1 args of 1:{int[] name}:recinit (%0)
  looping thru 0 args of 0:int[]:const [72,101,108,108,111]
  looping thru 0 args of 5:bool:const false
assign 1 := 1
checking: 8:{int[] name}:read (%2)
  looping thru 1 args of 8:{int[] name}:read (%2)
  looping thru 1 args of 2:OpenRecord_Valid_10:Attribute:decl r = 1
  looping thru 1 args of 1:{int[] name}:recinit (%0)
  looping thru 0 args of 0:int[]:const [72,101,108,108,111]
checking: 15:{byte[] data,int maxLocals,int maxStack,int[] name}:recinit (%11, %12, %13, %14)
  looping thru 4 args of 15:{byte[] data,int maxLocals,int maxStack,int[] name}:recinit (%11, %12, %13, %14)
  looping thru 2 args of 11:byte[]:arrgen (%9, %10)
  looping thru 0 args of 9:byte:const 00000000b
  looping thru 0 args of 10:int:const 0
  looping thru 0 args of 12:int:const 0
  looping thru 0 args of 13:int:const 0
  looping thru 0 args of 14:int[]:const [67,111,100,101]
checking: 20:bool:eq (%18, %19)
  looping thru 2 args of 20:bool:eq (%18, %19)
  looping thru 1 args of 18:bool:call OpenRecord_Valid_10:match(%17)
  looping thru 1 args of 17:{byte[] data,int maxLocals,int maxStack,int[] name}:read (%2)
  looping thru 1 args of 2:OpenRecord_Valid_10:Attribute:decl r = 1
  looping thru 1 args of 1:{int[] name}:recinit (%0)
  looping thru 0 args of 0:int[]:const [72,101,108,108,111]
  looping thru 0 args of 19:bool:const true
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== OpenRecord_Valid_11.whiley =====
Error compiling OpenRecord_Valid_11.whiley
./OpenRecord_Valid_11.whiley:6: branch always taken
    if x is SubtypeRecord:
       ^^^^^^^^^^^^^^^^^^

===== OpenRecord_Valid_2.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:OpenRecord_Valid_2:Attribute:read (%0)
  looping thru 0 args of 0:OpenRecord_Valid_2:Attribute:decl a
  looping thru 0 args of 3:type:const OpenRecord_Valid_2:CodeAttribute
checking: 9:int:arrlen (%8)
  looping thru 1 args of 9:int:arrlen (%8)
  looping thru 1 args of 8:{int offset,int op}|{int[] name,int offset,int op,{int[][] classes,int[] pkg} owner,int|{int[][] classes,int[] pkg} type}[]:recfield %7 data
  looping thru 1 args of 7:{{int offset,int op}|{int[] name,int offset,int op,{int[][] classes,int[] pkg} owner,int|{int[][] classes,int[] pkg} type}[] data,int[] name}:read (%4)
  looping thru 1 args of 4:{{int offset,int op}|{int[] name,int offset,int op,{int[][] classes,int[] pkg} owner,int|{int[][] classes,int[] pkg} type}[] data,int[] name}:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_2:Attribute:decl a
checking: 13:null:const null
  looping thru 0 args of 13:null:const null
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 1 args of 8:null|int:call OpenRecord_Valid_2:codeLength(%7)
  looping thru 1 args of 7:{{int offset,int op}[] data,int[] name}:read (%6)
  looping thru 1 args of 6:OpenRecord_Valid_2:Attribute:decl attr = 5
  looping thru 2 args of 5:{{int offset,int op}[] data,int[] name}:recinit (%3, %4)
  looping thru 1 args of 3:{int offset,int op}[]:arrinit (%2)
  looping thru 2 args of 2:{int offset,int op}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 4:int[]:const [67,111,100,101]
  looping thru 0 args of 9:int:const 1
assign 1 := 1
checking: 12:{{int offset,int op}[] data,int[] name}:read (%6)
  looping thru 1 args of 12:{{int offset,int op}[] data,int[] name}:read (%6)
  looping thru 1 args of 6:OpenRecord_Valid_2:Attribute:decl attr = 5
  looping thru 2 args of 5:{{int offset,int op}[] data,int[] name}:recinit (%3, %4)
  looping thru 1 args of 3:{int offset,int op}[]:arrinit (%2)
  looping thru 2 args of 2:{int offset,int op}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 4:int[]:const [67,111,100,101]
checking: 14:{int[] name}:recinit (%13)
  looping thru 1 args of 14:{int[] name}:recinit (%13)
  looping thru 0 args of 13:int[]:const [66,108,97,104]
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:null|int:call OpenRecord_Valid_2:codeLength(%16)
  looping thru 1 args of 16:{int[] name}:read (%6)
  looping thru 1 args of 6:OpenRecord_Valid_2:Attribute:decl attr = 5
  looping thru 2 args of 5:{{int offset,int op}[] data,int[] name}:recinit (%3, %4)
  looping thru 1 args of 3:{int offset,int op}[]:arrinit (%2)
  looping thru 2 args of 2:{int offset,int op}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 4:int[]:const [67,111,100,101]
  looping thru 0 args of 18:null:const null
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== OpenRecord_Valid_3.whiley =====
checking: 2:int:const 123
  looping thru 0 args of 2:int:const 123
checking: 5:int:icall %3 (%4)
  looping thru 1 args of 5:int:icall %3 (%4)
  looping thru 1 args of 3:function(OpenRecord_Valid_3:Object)->(int):recfield %2 fn
  looping thru 1 args of 2:OpenRecord_Valid_3:Object:read (%0)
  looping thru 0 args of 0:OpenRecord_Valid_3:Object:decl o
wyboogie.NotImplementedYet: indirect invoke in 5:int:icall %3 (%4)
	at wyboogie.Wyil2Boogie.writeIndirectInvoke(Wyil2Boogie.java:1140)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:969)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== OpenRecord_Valid_4.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:OpenRecord_Valid_4:OpenRecord:read (%0)
  looping thru 0 args of 0:OpenRecord_Valid_4:OpenRecord:decl r
  looping thru 0 args of 3:type:const {int x}
checking: 8:int:recfield %7 x
  looping thru 1 args of 8:int:recfield %7 x
  looping thru 1 args of 7:{int x}:read (%4)
  looping thru 1 args of 4:{int x}:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_4:OpenRecord:decl r
checking: 15:bool:istype (%11, %12)
  looping thru 2 args of 15:bool:istype (%11, %12)
  looping thru 1 args of 11:OpenRecord_Valid_4:OpenRecord:read (%5)
  looping thru 1 args of 5:OpenRecord_Valid_4:OpenRecord:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_4:OpenRecord:decl r
  looping thru 0 args of 12:type:const {int x,int y}
checking: 20:int:add (%17, %19)
  looping thru 2 args of 20:int:add (%17, %19)
  looping thru 1 args of 17:int:recfield %16 x
  looping thru 1 args of 16:{int x,int y}:read (%13)
  looping thru 1 args of 13:{int x,int y}:alias (%5)
  looping thru 1 args of 5:OpenRecord_Valid_4:OpenRecord:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_4:OpenRecord:decl r
  looping thru 1 args of 19:int:recfield %18 y
  looping thru 1 args of 18:{int x,int y}:read (%13)
  looping thru 1 args of 13:{int x,int y}:alias (%5)
  looping thru 1 args of 5:OpenRecord_Valid_4:OpenRecord:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_4:OpenRecord:decl r
checking: 25:int:neg (%24)
  looping thru 1 args of 25:int:neg (%24)
  looping thru 1 args of 24:int:recfield %23 x
  looping thru 1 args of 23:OpenRecord_Valid_4:OpenRecord:read (%14)
  looping thru 1 args of 14:OpenRecord_Valid_4:OpenRecord:alias (%5)
  looping thru 1 args of 5:OpenRecord_Valid_4:OpenRecord:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_4:OpenRecord:decl r
checking: 6:bool:eq (%4, %5)
  looping thru 2 args of 6:bool:eq (%4, %5)
  looping thru 1 args of 4:int:call OpenRecord_Valid_4:getField(%3)
  looping thru 1 args of 3:{int x}:read (%2)
  looping thru 1 args of 2:OpenRecord_Valid_4:OpenRecord:decl r = 1
  looping thru 1 args of 1:{int x}:recinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 5:int:const 1
assign 1 := 1
checking: 8:{int x}:read (%2)
  looping thru 1 args of 8:{int x}:read (%2)
  looping thru 1 args of 2:OpenRecord_Valid_4:OpenRecord:decl r = 1
  looping thru 1 args of 1:{int x}:recinit (%0)
  looping thru 0 args of 0:int:const 1
checking: 11:{int x,int y}:recinit (%9, %10)
  looping thru 2 args of 11:{int x,int y}:recinit (%9, %10)
  looping thru 0 args of 9:int:const 3
  looping thru 0 args of 10:int:const 1
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 1 args of 14:int:call OpenRecord_Valid_4:getField(%13)
  looping thru 1 args of 13:{int x,int y}:read (%2)
  looping thru 1 args of 2:OpenRecord_Valid_4:OpenRecord:decl r = 1
  looping thru 1 args of 1:{int x}:recinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 15:int:const 4
assign 1 := 1
checking: 18:{int x,int y}:read (%2)
  looping thru 1 args of 18:{int x,int y}:read (%2)
  looping thru 1 args of 2:OpenRecord_Valid_4:OpenRecord:decl r = 1
  looping thru 1 args of 1:{int x}:recinit (%0)
  looping thru 0 args of 0:int:const 1
checking: 22:{int x,int y,int z}:recinit (%19, %20, %21)
  looping thru 3 args of 22:{int x,int y,int z}:recinit (%19, %20, %21)
  looping thru 0 args of 19:int:const 3
  looping thru 0 args of 20:int:const 1
  looping thru 0 args of 21:int:const 1
checking: 28:bool:eq (%25, %27)
  looping thru 2 args of 28:bool:eq (%25, %27)
  looping thru 1 args of 25:int:call OpenRecord_Valid_4:getField(%24)
  looping thru 1 args of 24:{int x,int y,int z}:read (%2)
  looping thru 1 args of 2:OpenRecord_Valid_4:OpenRecord:decl r = 1
  looping thru 1 args of 1:{int x}:recinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 27:int:neg (%26)
  looping thru 0 args of 26:int:const 3
assign 1 := 1
checking: 30:{int x,int y,int z}:read (%2)
  looping thru 1 args of 30:{int x,int y,int z}:read (%2)
  looping thru 1 args of 2:OpenRecord_Valid_4:OpenRecord:decl r = 1
  looping thru 1 args of 1:{int x}:recinit (%0)
  looping thru 0 args of 0:int:const 1
checking: 33:{int x,int[] y}:recinit (%31, %32)
  looping thru 2 args of 33:{int x,int[] y}:recinit (%31, %32)
  looping thru 0 args of 31:int:const 2
  looping thru 0 args of 32:int[]:const [104,101,108,108,111]
checking: 39:bool:eq (%36, %38)
  looping thru 2 args of 39:bool:eq (%36, %38)
  looping thru 1 args of 36:int:call OpenRecord_Valid_4:getField(%35)
  looping thru 1 args of 35:{int x,int[] y}:read (%2)
  looping thru 1 args of 2:OpenRecord_Valid_4:OpenRecord:decl r = 1
  looping thru 1 args of 1:{int x}:recinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 38:int:neg (%37)
  looping thru 0 args of 37:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== OpenRecord_Valid_5.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:OpenRecord_Valid_5:VecPoint:read (%0)
  looping thru 0 args of 0:OpenRecord_Valid_5:VecPoint:decl vp
  looping thru 0 args of 3:type:const OpenRecord_Valid_5:Point
checking: 11:int:add (%8, %10)
  looping thru 2 args of 11:int:add (%8, %10)
  looping thru 1 args of 8:int:recfield %7 x
  looping thru 1 args of 7:{int x,int y,...}:read (%4)
  looping thru 1 args of 4:{int x,int y,...}:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_5:VecPoint:decl vp
  looping thru 1 args of 10:int:recfield %9 y
  looping thru 1 args of 9:{int x,int y,...}:read (%4)
  looping thru 1 args of 4:{int x,int y,...}:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_5:VecPoint:decl vp
checking: 26:bool:lt (%23, %25)
  looping thru 2 args of 26:bool:lt (%23, %25)
  looping thru 1 args of 23:int:read (%17)
  looping thru 1 args of 17:int:decl i = 16
  looping thru 0 args of 16:int:const 0
  looping thru 1 args of 25:int:arrlen (%24)
  looping thru 1 args of 24:OpenRecord_Valid_5:VecPoint:read (%5)
  looping thru 1 args of 5:OpenRecord_Valid_5:VecPoint:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_5:VecPoint:decl vp
assign 1 := 1
checking: 27:int:read (%15)
  looping thru 1 args of 27:int:read (%15)
  looping thru 1 args of 15:int:decl r = 14
  looping thru 0 args of 14:int:const 0
checking: 33:int:add (%28, %32)
  looping thru 2 args of 33:int:add (%28, %32)
  looping thru 1 args of 28:int:read (%15)
  looping thru 1 args of 15:int:decl r = 14
  looping thru 0 args of 14:int:const 0
  looping thru 1 args of 32:int:call OpenRecord_Valid_5:sum(%31)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(vp)
  looping thru 2 args of 31:{int x,int y,...}:arridx (%29, %30)
  looping thru 1 args of 29:OpenRecord_Valid_5:VecPoint:read (%5)
  looping thru 1 args of 5:OpenRecord_Valid_5:VecPoint:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_5:VecPoint:decl vp
  looping thru 1 args of 30:int:read (%17)
  looping thru 1 args of 17:int:decl i = 16
  looping thru 0 args of 16:int:const 0
assign 1 := 1
checking: 35:int:read (%17)
  looping thru 1 args of 35:int:read (%17)
  looping thru 1 args of 17:int:decl i = 16
  looping thru 0 args of 16:int:const 0
checking: 38:int:add (%36, %37)
  looping thru 2 args of 38:int:add (%36, %37)
  looping thru 1 args of 36:int:read (%17)
  looping thru 1 args of 17:int:decl i = 16
  looping thru 0 args of 16:int:const 0
  looping thru 0 args of 37:int:const 1
checking: 42:int:read (%15)
  looping thru 1 args of 42:int:read (%15)
  looping thru 1 args of 15:int:decl r = 14
  looping thru 0 args of 14:int:const 0
checking: 7:bool:eq (%5, %6)
  looping thru 2 args of 7:bool:eq (%5, %6)
  looping thru 1 args of 5:int:call OpenRecord_Valid_5:sum(%4)
  looping thru 1 args of 4:{int x,int y}:read (%3)
  looping thru 1 args of 3:OpenRecord_Valid_5:VecPoint:decl vp = 2
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 6:int:const 3
assign 1 := 1
checking: 9:{int x,int y}:read (%3)
  looping thru 1 args of 9:{int x,int y}:read (%3)
  looping thru 1 args of 3:OpenRecord_Valid_5:VecPoint:decl vp = 2
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
checking: 17:{int x,int y}[]:arrinit (%12, %16)
  looping thru 2 args of 17:{int x,int y}[]:arrinit (%12, %16)
  looping thru 2 args of 12:{int x,int y}:recinit (%10, %11)
  looping thru 0 args of 10:int:const 1
  looping thru 0 args of 11:int:const 2
  looping thru 2 args of 16:{int x,int y}:recinit (%14, %15)
  looping thru 1 args of 14:int:neg (%13)
  looping thru 0 args of 13:int:const 1
  looping thru 0 args of 15:int:const 4
checking: 22:bool:eq (%20, %21)
  looping thru 2 args of 22:bool:eq (%20, %21)
  looping thru 1 args of 20:int:call OpenRecord_Valid_5:sum(%19)
  looping thru 1 args of 19:{int x,int y}[]:read (%3)
  looping thru 1 args of 3:OpenRecord_Valid_5:VecPoint:decl vp = 2
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 21:int:const 6
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== OpenRecord_Valid_6.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:OpenRecord_Valid_6:VecPoint:read (%0)
  looping thru 0 args of 0:OpenRecord_Valid_6:VecPoint:decl vp
  looping thru 0 args of 3:type:const OpenRecord_Valid_6:Point[]
checking: 19:bool:lt (%16, %18)
  looping thru 2 args of 19:bool:lt (%16, %18)
  looping thru 1 args of 16:int:read (%10)
  looping thru 1 args of 10:int:decl i = 9
  looping thru 0 args of 9:int:const 0
  looping thru 1 args of 18:int:arrlen (%17)
  looping thru 1 args of 17:{int x,int y,...}[]:read (%4)
  looping thru 1 args of 4:{int x,int y,...}[]:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_6:VecPoint:decl vp
assign 1 := 1
checking: 20:int:read (%8)
  looping thru 1 args of 20:int:read (%8)
  looping thru 1 args of 8:int:decl r = 7
  looping thru 0 args of 7:int:const 0
checking: 26:int:add (%21, %25)
  looping thru 2 args of 26:int:add (%21, %25)
  looping thru 1 args of 21:int:read (%8)
  looping thru 1 args of 8:int:decl r = 7
  looping thru 0 args of 7:int:const 0
  looping thru 1 args of 25:int:call OpenRecord_Valid_6:sum(%24)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(vp)
  looping thru 2 args of 24:{int x,int y,...}:arridx (%22, %23)
  looping thru 1 args of 22:{int x,int y,...}[]:read (%4)
  looping thru 1 args of 4:{int x,int y,...}[]:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_6:VecPoint:decl vp
  looping thru 1 args of 23:int:read (%10)
  looping thru 1 args of 10:int:decl i = 9
  looping thru 0 args of 9:int:const 0
assign 1 := 1
checking: 28:int:read (%10)
  looping thru 1 args of 28:int:read (%10)
  looping thru 1 args of 10:int:decl i = 9
  looping thru 0 args of 9:int:const 0
checking: 31:int:add (%29, %30)
  looping thru 2 args of 31:int:add (%29, %30)
  looping thru 1 args of 29:int:read (%10)
  looping thru 1 args of 10:int:decl i = 9
  looping thru 0 args of 9:int:const 0
  looping thru 0 args of 30:int:const 1
checking: 35:int:read (%8)
  looping thru 1 args of 35:int:read (%8)
  looping thru 1 args of 8:int:decl r = 7
  looping thru 0 args of 7:int:const 0
checking: 42:int:add (%39, %41)
  looping thru 2 args of 42:int:add (%39, %41)
  looping thru 1 args of 39:int:recfield %38 x
  looping thru 1 args of 38:OpenRecord_Valid_6:VecPoint:read (%5)
  looping thru 1 args of 5:OpenRecord_Valid_6:VecPoint:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_6:VecPoint:decl vp
  looping thru 1 args of 41:int:recfield %40 y
  looping thru 1 args of 40:OpenRecord_Valid_6:VecPoint:read (%5)
  looping thru 1 args of 5:OpenRecord_Valid_6:VecPoint:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_6:VecPoint:decl vp
checking: 7:bool:eq (%5, %6)
  looping thru 2 args of 7:bool:eq (%5, %6)
  looping thru 1 args of 5:int:call OpenRecord_Valid_6:sum(%4)
  looping thru 1 args of 4:{int x,int y}:read (%3)
  looping thru 1 args of 3:OpenRecord_Valid_6:VecPoint:decl vp = 2
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 6:int:const 3
assign 1 := 1
checking: 9:{int x,int y}:read (%3)
  looping thru 1 args of 9:{int x,int y}:read (%3)
  looping thru 1 args of 3:OpenRecord_Valid_6:VecPoint:decl vp = 2
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
checking: 17:{int x,int y}[]:arrinit (%12, %16)
  looping thru 2 args of 17:{int x,int y}[]:arrinit (%12, %16)
  looping thru 2 args of 12:{int x,int y}:recinit (%10, %11)
  looping thru 0 args of 10:int:const 1
  looping thru 0 args of 11:int:const 2
  looping thru 2 args of 16:{int x,int y}:recinit (%14, %15)
  looping thru 1 args of 14:int:neg (%13)
  looping thru 0 args of 13:int:const 10
  looping thru 0 args of 15:int:const 5
checking: 23:bool:eq (%20, %22)
  looping thru 2 args of 23:bool:eq (%20, %22)
  looping thru 1 args of 20:int:call OpenRecord_Valid_6:sum(%19)
  looping thru 1 args of 19:{int x,int y}[]:read (%3)
  looping thru 1 args of 3:OpenRecord_Valid_6:VecPoint:decl vp = 2
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 1 args of 22:int:neg (%21)
  looping thru 0 args of 21:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== OpenRecord_Valid_9.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:OpenRecord_Valid_9:Point:read (%0)
  looping thru 0 args of 0:OpenRecord_Valid_9:Point:decl vp
  looping thru 0 args of 3:type:const OpenRecord_Valid_9:Point2D
checking: 11:int:add (%8, %10)
  looping thru 2 args of 11:int:add (%8, %10)
  looping thru 1 args of 8:int:recfield %7 x
  looping thru 1 args of 7:{int x,int y}:read (%4)
  looping thru 1 args of 4:{int x,int y}:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_9:Point:decl vp
  looping thru 1 args of 10:int:recfield %9 y
  looping thru 1 args of 9:{int x,int y}:read (%4)
  looping thru 1 args of 4:{int x,int y}:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_9:Point:decl vp
checking: 18:bool:istype (%14, %15)
  looping thru 2 args of 18:bool:istype (%14, %15)
  looping thru 1 args of 14:OpenRecord_Valid_9:Point:read (%5)
  looping thru 1 args of 5:OpenRecord_Valid_9:Point:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_9:Point:decl vp
  looping thru 0 args of 15:type:const OpenRecord_Valid_9:Point3D
checking: 26:int:add (%23, %25)
  looping thru 2 args of 26:int:add (%23, %25)
  looping thru 2 args of 23:int:add (%20, %22)
  looping thru 1 args of 20:int:recfield %19 x
  looping thru 1 args of 19:{int x,int y,int z}:read (%16)
  looping thru 1 args of 16:{int x,int y,int z}:alias (%5)
  looping thru 1 args of 5:OpenRecord_Valid_9:Point:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_9:Point:decl vp
  looping thru 1 args of 22:int:recfield %21 y
  looping thru 1 args of 21:{int x,int y,int z}:read (%16)
  looping thru 1 args of 16:{int x,int y,int z}:alias (%5)
  looping thru 1 args of 5:OpenRecord_Valid_9:Point:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_9:Point:decl vp
  looping thru 1 args of 25:int:recfield %24 z
  looping thru 1 args of 24:{int x,int y,int z}:read (%16)
  looping thru 1 args of 16:{int x,int y,int z}:alias (%5)
  looping thru 1 args of 5:OpenRecord_Valid_9:Point:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_9:Point:decl vp
checking: 33:int:add (%30, %32)
  looping thru 2 args of 33:int:add (%30, %32)
  looping thru 1 args of 30:int:recfield %29 x
  looping thru 1 args of 29:OpenRecord_Valid_9:Point:read (%17)
  looping thru 1 args of 17:OpenRecord_Valid_9:Point:alias (%5)
  looping thru 1 args of 5:OpenRecord_Valid_9:Point:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_9:Point:decl vp
  looping thru 1 args of 32:int:recfield %31 y
  looping thru 1 args of 31:OpenRecord_Valid_9:Point:read (%17)
  looping thru 1 args of 17:OpenRecord_Valid_9:Point:alias (%5)
  looping thru 1 args of 5:OpenRecord_Valid_9:Point:alias (%0)
  looping thru 0 args of 0:OpenRecord_Valid_9:Point:decl vp
checking: 7:bool:eq (%5, %6)
  looping thru 2 args of 7:bool:eq (%5, %6)
  looping thru 1 args of 5:int:call OpenRecord_Valid_9:sum(%4)
  looping thru 1 args of 4:{int x,int y}:read (%3)
  looping thru 1 args of 3:OpenRecord_Valid_9:Point:decl vp = 2
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 6:int:const 3
assign 1 := 1
checking: 9:{int x,int y}:read (%3)
  looping thru 1 args of 9:{int x,int y}:read (%3)
  looping thru 1 args of 3:OpenRecord_Valid_9:Point:decl vp = 2
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
checking: 13:{int x,int y,int z}:recinit (%10, %11, %12)
  looping thru 3 args of 13:{int x,int y,int z}:recinit (%10, %11, %12)
  looping thru 0 args of 10:int:const 1
  looping thru 0 args of 11:int:const 2
  looping thru 0 args of 12:int:const 2
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 1 args of 16:int:call OpenRecord_Valid_9:sum(%15)
  looping thru 1 args of 15:{int x,int y,int z}:read (%3)
  looping thru 1 args of 3:OpenRecord_Valid_9:Point:decl vp = 2
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 17:int:const 5
assign 1 := 1
checking: 20:{int x,int y,int z}:read (%3)
  looping thru 1 args of 20:{int x,int y,int z}:read (%3)
  looping thru 1 args of 3:OpenRecord_Valid_9:Point:decl vp = 2
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
checking: 24:{int h,int x,int y}:recinit (%21, %22, %23)
  looping thru 3 args of 24:{int h,int x,int y}:recinit (%21, %22, %23)
  looping thru 0 args of 21:int:const 2
  looping thru 0 args of 22:int:const 1
  looping thru 0 args of 23:int:const 2
checking: 29:bool:eq (%27, %28)
  looping thru 2 args of 29:bool:eq (%27, %28)
  looping thru 1 args of 27:int:call OpenRecord_Valid_9:sum(%26)
  looping thru 1 args of 26:{int h,int x,int y}:read (%3)
  looping thru 1 args of 3:OpenRecord_Valid_9:Point:decl vp = 2
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 28:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ProcessAccess_Valid_1.whiley =====
assign 1 := 1
checking: 4:int:recfield %3 mode
  looping thru 1 args of 4:int:recfield %3 mode
  looping thru 1 args of 3:ProcessAccess_Valid_1:etype:deref (%2)
  looping thru 1 args of 2:ProcessAccess_Valid_1:Ptype:read (%0)
  looping thru 0 args of 0:ProcessAccess_Valid_1:Ptype:decl _this
checking: 5:int:const 1
  looping thru 0 args of 5:int:const 1
wyboogie.NotImplementedYet: record update of complex expression in 6::assign (%4) = (%5)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:734)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== ProcessAccess_Valid_2.whiley =====
checking: 6:bool:eq (%4, %5)
  looping thru 2 args of 6:bool:eq (%4, %5)
  looping thru 1 args of 4:int:recfield %3 x
  looping thru 1 args of 3:ProcessAccess_Valid_2:state:deref (%2)
  looping thru 1 args of 2:ProcessAccess_Valid_2:pState:read (%0)
  looping thru 0 args of 0:ProcessAccess_Valid_2:pState:decl _this
  looping thru 0 args of 5:int:const 1
wyboogie.NotImplementedYet: dereference in 3:ProcessAccess_Valid_2:state:deref (%2)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:986)
	at wyboogie.Wyil2Boogie.writeFieldLoad(Wyil2Boogie.java:1133)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:966)
	at wyboogie.Wyil2Boogie.writeEquality(Wyil2Boogie.java:1237)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1032)
	at wyboogie.Wyil2Boogie.boolExpr(Wyil2Boogie.java:934)
	at wyboogie.Wyil2Boogie.writeAssume(Wyil2Boogie.java:703)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:598)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Process_Valid_1.whiley =====
assign 1 := 1
checking: 4:int:recfield %3 x
  looping thru 1 args of 4:int:recfield %3 x
  looping thru 1 args of 3:Process_Valid_1:state:deref (%2)
  looping thru 1 args of 2:Process_Valid_1:pState:read (%0)
  looping thru 0 args of 0:Process_Valid_1:pState:decl _this
checking: 5:int:read (%1)
  looping thru 1 args of 5:int:read (%1)
  looping thru 0 args of 1:int:decl x
wyboogie.NotImplementedYet: record update of complex expression in 6::assign (%4) = (%5)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:734)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Process_Valid_10.whiley =====
assign 1 := 1
checking: 4:int:recfield %3 length
  looping thru 1 args of 4:int:recfield %3 length
  looping thru 1 args of 3:Process_Valid_10:Queue:deref (%2)
  looping thru 1 args of 2:&Process_Valid_10:Queue:read (%0)
  looping thru 0 args of 0:&Process_Valid_10:Queue:decl _this
checking: 9:int:sub (%7, %8)
  looping thru 2 args of 9:int:sub (%7, %8)
  looping thru 1 args of 7:int:recfield %6 length
  looping thru 1 args of 6:Process_Valid_10:Queue:deref (%5)
  looping thru 1 args of 5:&Process_Valid_10:Queue:read (%0)
  looping thru 0 args of 0:&Process_Valid_10:Queue:decl _this
  looping thru 0 args of 8:int:const 1
wyboogie.NotImplementedYet: record update of complex expression in 10::assign (%4) = (%9)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:734)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Process_Valid_11.whiley =====
checking: 9:int:add (%5, %8)
  looping thru 2 args of 9:int:add (%5, %8)
  looping thru 1 args of 5:int:recfield %4 x
  looping thru 1 args of 4:Process_Valid_11:state:deref (%3)
  looping thru 1 args of 3:Process_Valid_11:pState:read (%0)
  looping thru 0 args of 0:Process_Valid_11:pState:decl _this
  looping thru 1 args of 8:int:recfield %7 y
  looping thru 1 args of 7:Process_Valid_11:state:deref (%6)
  looping thru 1 args of 6:Process_Valid_11:pState:read (%0)
  looping thru 0 args of 0:Process_Valid_11:pState:decl _this
wyboogie.NotImplementedYet: dereference in 4:Process_Valid_11:state:deref (%3)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:986)
	at wyboogie.Wyil2Boogie.writeFieldLoad(Wyil2Boogie.java:1133)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:966)
	at wyboogie.Wyil2Boogie.infixOp(Wyil2Boogie.java:1078)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1001)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Process_Valid_12.whiley =====
checking: 9:int:add (%5, %8)
  looping thru 2 args of 9:int:add (%5, %8)
  looping thru 1 args of 5:int:recfield %4 x
  looping thru 1 args of 4:Process_Valid_12:state:deref (%3)
  looping thru 1 args of 3:Process_Valid_12:pState:read (%0)
  looping thru 0 args of 0:Process_Valid_12:pState:decl _this
  looping thru 1 args of 8:int:recfield %7 y
  looping thru 1 args of 7:Process_Valid_12:state:deref (%6)
  looping thru 1 args of 6:Process_Valid_12:pState:read (%0)
  looping thru 0 args of 0:Process_Valid_12:pState:decl _this
wyboogie.NotImplementedYet: dereference in 4:Process_Valid_12:state:deref (%3)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:986)
	at wyboogie.Wyil2Boogie.writeFieldLoad(Wyil2Boogie.java:1133)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:966)
	at wyboogie.Wyil2Boogie.infixOp(Wyil2Boogie.java:1078)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1001)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Process_Valid_2.whiley =====
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl out = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 3:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Process_Valid_3.whiley =====
checking: 2:bool:eq (%0, %1)
  looping thru 2 args of 2:bool:eq (%0, %1)
  looping thru 0 args of 0:bool:const false
  looping thru 0 args of 1:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Process_Valid_4.whiley =====
assign 1 := 1
checking: 4:int:recfield %3 x
  looping thru 1 args of 4:int:recfield %3 x
  looping thru 1 args of 3:{int x}:deref (%2)
  looping thru 1 args of 2:Process_Valid_4:MyProc:read (%0)
  looping thru 0 args of 0:Process_Valid_4:MyProc:decl _this
checking: 9:int:add (%7, %8)
  looping thru 2 args of 9:int:add (%7, %8)
  looping thru 1 args of 7:int:recfield %6 x
  looping thru 1 args of 6:{int x}:deref (%5)
  looping thru 1 args of 5:Process_Valid_4:MyProc:read (%0)
  looping thru 0 args of 0:Process_Valid_4:MyProc:decl _this
  looping thru 1 args of 8:int:read (%1)
  looping thru 0 args of 1:int:decl i
wyboogie.NotImplementedYet: record update of complex expression in 10::assign (%4) = (%9)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:734)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Process_Valid_5.whiley =====
checking: 4:bool:recfield %3 flag
  looping thru 1 args of 4:bool:recfield %3 flag
  looping thru 1 args of 3:{bool flag}:deref (%2)
  looping thru 1 args of 2:Process_Valid_5:MyProc:read (%0)
  looping thru 0 args of 0:Process_Valid_5:MyProc:decl _this
wyboogie.NotImplementedYet: dereference in 3:{bool flag}:deref (%2)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:986)
	at wyboogie.Wyil2Boogie.writeFieldLoad(Wyil2Boogie.java:1133)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:966)
	at wyboogie.Wyil2Boogie.boolExpr(Wyil2Boogie.java:934)
	at wyboogie.Wyil2Boogie.writeIf(Wyil2Boogie.java:826)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:626)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Process_Valid_6.whiley =====
checking: 4:int:recfield %3 data
  looping thru 1 args of 4:int:recfield %3 data
  looping thru 1 args of 3:Process_Valid_6:Actor:deref (%2)
  looping thru 1 args of 2:&Process_Valid_6:Actor:read (%0)
  looping thru 0 args of 0:&Process_Valid_6:Actor:decl _this
wyboogie.NotImplementedYet: dereference in 3:Process_Valid_6:Actor:deref (%2)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:986)
	at wyboogie.Wyil2Boogie.writeFieldLoad(Wyil2Boogie.java:1133)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:966)
	at wyboogie.Wyil2Boogie.writeReturn(Wyil2Boogie.java:903)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:645)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Process_Valid_7.whiley =====
assign 1 := 1
checking: 4:any:recfield %3 data
  looping thru 1 args of 4:any:recfield %3 data
  looping thru 1 args of 3:{any data}:deref (%2)
  looping thru 1 args of 2:Process_Valid_7:MyProc2:read (%0)
  looping thru 0 args of 0:Process_Valid_7:MyProc2:decl _this
checking: 6:any:castt (%5)
  looping thru 1 args of 6:any:castt (%5)
  looping thru 1 args of 5:int:read (%1)
  looping thru 0 args of 1:int:decl d
wyboogie.NotImplementedYet: record update of complex expression in 7::assign (%4) = (%6)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:734)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Process_Valid_8.whiley =====
assign 1 := 1
checking: 4:any:recfield %3 data
  looping thru 1 args of 4:any:recfield %3 data
  looping thru 1 args of 3:Process_Valid_8:MyProc2:deref (%2)
  looping thru 1 args of 2:&Process_Valid_8:MyProc2:read (%0)
  looping thru 0 args of 0:&Process_Valid_8:MyProc2:decl _this
checking: 6:any:castt (%5)
  looping thru 1 args of 6:any:castt (%5)
  looping thru 1 args of 5:int:read (%1)
  looping thru 0 args of 1:int:decl d
wyboogie.NotImplementedYet: record update of complex expression in 7::assign (%4) = (%6)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:734)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Process_Valid_9.whiley =====
assign 1 := 1
checking: 4:int:recfield %3 length
  looping thru 1 args of 4:int:recfield %3 length
  looping thru 1 args of 3:Process_Valid_9:Queue:deref (%2)
  looping thru 1 args of 2:&Process_Valid_9:Queue:read (%0)
  looping thru 0 args of 0:&Process_Valid_9:Queue:decl _this
checking: 9:int:sub (%7, %8)
  looping thru 2 args of 9:int:sub (%7, %8)
  looping thru 1 args of 7:int:recfield %6 length
  looping thru 1 args of 6:Process_Valid_9:Queue:deref (%5)
  looping thru 1 args of 5:&Process_Valid_9:Queue:read (%0)
  looping thru 0 args of 0:&Process_Valid_9:Queue:decl _this
  looping thru 0 args of 8:int:const 1
wyboogie.NotImplementedYet: record update of complex expression in 10::assign (%4) = (%9)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:734)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Quantifiers_Valid_1.whiley =====
checking: 12:int[]:read (%0)
  looping thru 1 args of 12:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
checking: 13:bool:eq (%8, %12)
  looping thru 2 args of 13:bool:eq (%8, %12)
  looping thru 1 args of 8:int[]:call Quantifiers_Valid_1:f(%7)
  looping thru 1 args of 7:int[]:read (%6)
  looping thru 1 args of 6:int[]:decl zs = 5
  looping thru 1 args of 5:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl ys = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 3 args of 12:int[]:arrinit (%9, %10, %11)
  looping thru 0 args of 9:int:const 1
  looping thru 0 args of 10:int:const 2
  looping thru 0 args of 11:int:const 3
checking: 20:bool:eq (%15, %19)
  looping thru 2 args of 20:bool:eq (%15, %19)
  looping thru 1 args of 15:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl ys = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 3 args of 19:int[]:arrinit (%16, %17, %18)
  looping thru 0 args of 16:int:const 1
  looping thru 0 args of 17:int:const 2
  looping thru 0 args of 18:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAccess_Valid_1.whiley =====
assign 1 := 1
checking: 4:int:recfield %3 mode
  looping thru 1 args of 4:int:recfield %3 mode
  looping thru 1 args of 3:RecordAccess_Valid_1:etype:deref (%2)
  looping thru 1 args of 2:RecordAccess_Valid_1:Ptype:read (%0)
  looping thru 0 args of 0:RecordAccess_Valid_1:Ptype:decl _this
checking: 5:int:const 1
  looping thru 0 args of 5:int:const 1
wyboogie.NotImplementedYet: record update of complex expression in 6::assign (%4) = (%5)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:734)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== RecordAssign_Valid_1.whiley =====
checking: 3:{int f1,int f2}:recinit (%1, %2)
  looping thru 2 args of 3:{int f1,int f2}:recinit (%1, %2)
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
assign 1 := 1
checking: 3:int:recfield %2 f1
  looping thru 1 args of 3:int:recfield %2 f1
  looping thru 1 args of 2:RecordAssign_Valid_1:tac1tup:read (%1)
  looping thru 1 args of 1:RecordAssign_Valid_1:tac1tup:decl x = 0
  looping thru 0 args of 0:RecordAssign_Valid_1:tac1tup:call RecordAssign_Valid_1:f()
checking: 7:int:sub (%5, %6)
  looping thru 2 args of 7:int:sub (%5, %6)
  looping thru 1 args of 5:int:recfield %4 f2
  looping thru 1 args of 4:RecordAssign_Valid_1:tac1tup:read (%1)
  looping thru 1 args of 1:RecordAssign_Valid_1:tac1tup:decl x = 0
  looping thru 0 args of 0:RecordAssign_Valid_1:tac1tup:call RecordAssign_Valid_1:f()
  looping thru 0 args of 6:int:const 2
checking: 13:bool:neq (%10, %12)
  looping thru 2 args of 13:bool:neq (%10, %12)
  looping thru 1 args of 10:int:recfield %9 f1
  looping thru 1 args of 9:{int f1,int f2}:read (%1)
  looping thru 1 args of 1:RecordAssign_Valid_1:tac1tup:decl x = 0
  looping thru 0 args of 0:RecordAssign_Valid_1:tac1tup:call RecordAssign_Valid_1:f()
  looping thru 1 args of 12:int:recfield %11 f2
  looping thru 1 args of 11:{int f1,int f2}:read (%1)
  looping thru 1 args of 1:RecordAssign_Valid_1:tac1tup:decl x = 0
  looping thru 0 args of 0:RecordAssign_Valid_1:tac1tup:call RecordAssign_Valid_1:f()
checking: 19:bool:eq (%15, %18)
  looping thru 2 args of 19:bool:eq (%15, %18)
  looping thru 1 args of 15:{int f1,int f2}:read (%1)
  looping thru 1 args of 1:RecordAssign_Valid_1:tac1tup:decl x = 0
  looping thru 0 args of 0:RecordAssign_Valid_1:tac1tup:call RecordAssign_Valid_1:f()
  looping thru 2 args of 18:{int f1,int f2}:recinit (%16, %17)
  looping thru 0 args of 16:int:const 1
  looping thru 0 args of 17:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAssign_Valid_10.whiley =====
checking: 8:{int b1,int b2}:read (%7)
  looping thru 1 args of 8:{int b1,int b2}:read (%7)
  looping thru 1 args of 7:RecordAssign_Valid_10:bytes:decl bs = 6
  looping thru 2 args of 6:{int b1,int b2}:recinit (%2, %5)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl a
  looping thru 2 args of 5:int:add (%3, %4)
  looping thru 1 args of 3:int:read (%0)
  looping thru 0 args of 0:int:decl a
  looping thru 0 args of 4:int:const 1
checking: 5:bool:eq (%1, %4)
  looping thru 2 args of 5:bool:eq (%1, %4)
  looping thru 1 args of 1:RecordAssign_Valid_10:bytes:call RecordAssign_Valid_10:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 2 args of 4:{int b1,int b2}:recinit (%2, %3)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 2
checking: 12:bool:eq (%8, %11)
  looping thru 2 args of 12:bool:eq (%8, %11)
  looping thru 1 args of 8:RecordAssign_Valid_10:bytes:call RecordAssign_Valid_10:f(%7)
  looping thru 0 args of 7:int:const 2
  looping thru 2 args of 11:{int b1,int b2}:recinit (%9, %10)
  looping thru 0 args of 9:int:const 2
  looping thru 0 args of 10:int:const 3
checking: 19:bool:eq (%15, %18)
  looping thru 2 args of 19:bool:eq (%15, %18)
  looping thru 1 args of 15:RecordAssign_Valid_10:bytes:call RecordAssign_Valid_10:f(%14)
  looping thru 0 args of 14:int:const 9
  looping thru 2 args of 18:{int b1,int b2}:recinit (%16, %17)
  looping thru 0 args of 16:int:const 9
  looping thru 0 args of 17:int:const 10
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAssign_Valid_2.whiley =====
MUTATED INPUT r : RecordAssign_Valid_2:rec2
assign 1 := 1
checking: 4:int:recfield %3 x
  looping thru 1 args of 4:int:recfield %3 x
  looping thru 1 args of 3:RecordAssign_Valid_2:rec1:recfield %2 current
  looping thru 1 args of 2:RecordAssign_Valid_2:rec2:read (%0)
  looping thru 0 args of 0:RecordAssign_Valid_2:rec2:decl r
checking: 5:int:const 1
  looping thru 0 args of 5:int:const 1
wyboogie.NotImplementedYet: record update of complex expression in 6::assign (%4) = (%5)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:734)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== RecordAssign_Valid_3.whiley =====
checking: 3:{int f1,int f2}:recinit (%1, %2)
  looping thru 2 args of 3:{int f1,int f2}:recinit (%1, %2)
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
assign 1 := 1
checking: 3:int:recfield %2 f1
  looping thru 1 args of 3:int:recfield %2 f1
  looping thru 1 args of 2:RecordAssign_Valid_3:tac1tup:read (%1)
  looping thru 1 args of 1:RecordAssign_Valid_3:tac1tup:decl x = 0
  looping thru 0 args of 0:RecordAssign_Valid_3:tac1tup:call RecordAssign_Valid_3:f()
checking: 7:int:sub (%5, %6)
  looping thru 2 args of 7:int:sub (%5, %6)
  looping thru 1 args of 5:int:recfield %4 f2
  looping thru 1 args of 4:RecordAssign_Valid_3:tac1tup:read (%1)
  looping thru 1 args of 1:RecordAssign_Valid_3:tac1tup:decl x = 0
  looping thru 0 args of 0:RecordAssign_Valid_3:tac1tup:call RecordAssign_Valid_3:f()
  looping thru 0 args of 6:int:const 2
checking: 13:bool:neq (%10, %12)
  looping thru 2 args of 13:bool:neq (%10, %12)
  looping thru 1 args of 10:int:recfield %9 f1
  looping thru 1 args of 9:{int f1,int f2}:read (%1)
  looping thru 1 args of 1:RecordAssign_Valid_3:tac1tup:decl x = 0
  looping thru 0 args of 0:RecordAssign_Valid_3:tac1tup:call RecordAssign_Valid_3:f()
  looping thru 1 args of 12:int:recfield %11 f2
  looping thru 1 args of 11:{int f1,int f2}:read (%1)
  looping thru 1 args of 1:RecordAssign_Valid_3:tac1tup:decl x = 0
  looping thru 0 args of 0:RecordAssign_Valid_3:tac1tup:call RecordAssign_Valid_3:f()
checking: 19:bool:eq (%15, %18)
  looping thru 2 args of 19:bool:eq (%15, %18)
  looping thru 1 args of 15:{int f1,int f2}:read (%1)
  looping thru 1 args of 1:RecordAssign_Valid_3:tac1tup:decl x = 0
  looping thru 0 args of 0:RecordAssign_Valid_3:tac1tup:call RecordAssign_Valid_3:f()
  looping thru 2 args of 18:{int f1,int f2}:recinit (%16, %17)
  looping thru 0 args of 16:int:const 1
  looping thru 0 args of 17:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAssign_Valid_4.whiley =====
checking: 8:{int f1,int f2}:recinit (%5, %7)
  looping thru 2 args of 8:{int f1,int f2}:recinit (%5, %7)
  looping thru 2 args of 5:int:sub (%3, %4)
  looping thru 1 args of 3:int:recfield %2 f1
  looping thru 1 args of 2:RecordAssign_Valid_4:tac2ta:read (%0)
  looping thru 0 args of 0:RecordAssign_Valid_4:tac2ta:decl x
  looping thru 0 args of 4:int:const 1
  looping thru 1 args of 7:int:recfield %6 f2
  looping thru 1 args of 6:RecordAssign_Valid_4:tac2ta:read (%0)
  looping thru 0 args of 0:RecordAssign_Valid_4:tac2ta:decl x
checking: 8:bool:eq (%4, %7)
  looping thru 2 args of 8:bool:eq (%4, %7)
  looping thru 1 args of 4:{int f1,int f2}:read (%3)
  looping thru 1 args of 3:RecordAssign_Valid_4:tac2ta:decl x = 2
  looping thru 2 args of 2:{int f1,int f2}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 3
  looping thru 2 args of 7:{int f1,int f2}:recinit (%5, %6)
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 6:int:const 3
assign 1 := 1
checking: 11:int:recfield %10 f1
  looping thru 1 args of 11:int:recfield %10 f1
  looping thru 1 args of 10:{int f1,int f2}:read (%3)
  looping thru 1 args of 3:RecordAssign_Valid_4:tac2ta:decl x = 2
  looping thru 2 args of 2:{int f1,int f2}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 3
checking: 12:int:const 1
  looping thru 0 args of 12:int:const 1
checking: 21:bool:eq (%17, %20)
  looping thru 2 args of 21:bool:eq (%17, %20)
  looping thru 1 args of 17:RecordAssign_Valid_4:tac2tb:read (%16)
  looping thru 1 args of 16:RecordAssign_Valid_4:tac2tb:decl y = 15
  looping thru 1 args of 15:RecordAssign_Valid_4:tac2tb:call RecordAssign_Valid_4:f(%14)
  looping thru 1 args of 14:{int f1,int f2}:read (%3)
  looping thru 1 args of 3:RecordAssign_Valid_4:tac2ta:decl x = 2
  looping thru 2 args of 2:{int f1,int f2}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 3
  looping thru 2 args of 20:{int f1,int f2}:recinit (%18, %19)
  looping thru 0 args of 18:int:const 0
  looping thru 0 args of 19:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAssign_Valid_5.whiley =====
checking: 8:{int f1,int f2}:recinit (%5, %7)
  looping thru 2 args of 8:{int f1,int f2}:recinit (%5, %7)
  looping thru 2 args of 5:int:sub (%3, %4)
  looping thru 1 args of 3:int:recfield %2 f1
  looping thru 1 args of 2:RecordAssign_Valid_5:tac2ta:read (%0)
  looping thru 0 args of 0:RecordAssign_Valid_5:tac2ta:decl x
  looping thru 0 args of 4:int:const 1
  looping thru 1 args of 7:int:recfield %6 f2
  looping thru 1 args of 6:RecordAssign_Valid_5:tac2ta:read (%0)
  looping thru 0 args of 0:RecordAssign_Valid_5:tac2ta:decl x
checking: 8:bool:eq (%4, %7)
  looping thru 2 args of 8:bool:eq (%4, %7)
  looping thru 1 args of 4:{int f1,int f2}:read (%3)
  looping thru 1 args of 3:RecordAssign_Valid_5:tac2ta:decl x = 2
  looping thru 2 args of 2:{int f1,int f2}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 3
  looping thru 2 args of 7:{int f1,int f2}:recinit (%5, %6)
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 6:int:const 3
assign 1 := 1
checking: 11:int:recfield %10 f1
  looping thru 1 args of 11:int:recfield %10 f1
  looping thru 1 args of 10:{int f1,int f2}:read (%3)
  looping thru 1 args of 3:RecordAssign_Valid_5:tac2ta:decl x = 2
  looping thru 2 args of 2:{int f1,int f2}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 3
checking: 12:int:const 1
  looping thru 0 args of 12:int:const 1
checking: 21:bool:eq (%17, %20)
  looping thru 2 args of 21:bool:eq (%17, %20)
  looping thru 1 args of 17:RecordAssign_Valid_5:tac2tb:read (%16)
  looping thru 1 args of 16:RecordAssign_Valid_5:tac2tb:decl y = 15
  looping thru 1 args of 15:RecordAssign_Valid_5:tac2tb:call RecordAssign_Valid_5:f(%14)
  looping thru 1 args of 14:{int f1,int f2}:read (%3)
  looping thru 1 args of 3:RecordAssign_Valid_5:tac2ta:decl x = 2
  looping thru 2 args of 2:{int f1,int f2}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 3
  looping thru 2 args of 20:{int f1,int f2}:recinit (%18, %19)
  looping thru 0 args of 18:int:const 0
  looping thru 0 args of 19:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAssign_Valid_6.whiley =====
checking: 10:bool:neq (%8, %9)
  looping thru 2 args of 10:bool:neq (%8, %9)
  looping thru 1 args of 8:{int f1,int f2}:read (%3)
  looping thru 1 args of 3:{int f1,int f2}:decl x = 2
  looping thru 2 args of 2:{int f1,int f2}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 3
  looping thru 1 args of 9:{int f1,int f2}:read (%7)
  looping thru 1 args of 7:{int f1,int f2}:decl y = 6
  looping thru 2 args of 6:{int f1,int f2}:recinit (%4, %5)
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 3
assign 1 := 1
checking: 13:int:recfield %12 f1
  looping thru 1 args of 13:int:recfield %12 f1
  looping thru 1 args of 12:{int f1,int f2}:read (%3)
  looping thru 1 args of 3:{int f1,int f2}:decl x = 2
  looping thru 2 args of 2:{int f1,int f2}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 3
checking: 14:int:const 1
  looping thru 0 args of 14:int:const 1
checking: 20:bool:eq (%16, %19)
  looping thru 2 args of 20:bool:eq (%16, %19)
  looping thru 1 args of 16:{int f1,int f2}:read (%3)
  looping thru 1 args of 3:{int f1,int f2}:decl x = 2
  looping thru 2 args of 2:{int f1,int f2}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 3
  looping thru 2 args of 19:{int f1,int f2}:recinit (%17, %18)
  looping thru 0 args of 17:int:const 1
  looping thru 0 args of 18:int:const 3
checking: 26:bool:eq (%22, %25)
  looping thru 2 args of 26:bool:eq (%22, %25)
  looping thru 1 args of 22:{int f1,int f2}:read (%7)
  looping thru 1 args of 7:{int f1,int f2}:decl y = 6
  looping thru 2 args of 6:{int f1,int f2}:recinit (%4, %5)
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 3
  looping thru 2 args of 25:{int f1,int f2}:recinit (%23, %24)
  looping thru 0 args of 23:int:const 1
  looping thru 0 args of 24:int:const 3
checking: 30:bool:eq (%28, %29)
  looping thru 2 args of 30:bool:eq (%28, %29)
  looping thru 1 args of 28:{int f1,int f2}:read (%3)
  looping thru 1 args of 3:{int f1,int f2}:decl x = 2
  looping thru 2 args of 2:{int f1,int f2}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 1:int:const 3
  looping thru 1 args of 29:{int f1,int f2}:read (%7)
  looping thru 1 args of 7:{int f1,int f2}:decl y = 6
  looping thru 2 args of 6:{int f1,int f2}:recinit (%4, %5)
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== RecordAssign_Valid_7.whiley =====
checking: 4:{RecordAssign_Valid_7:i8 b1,int b2}:recinit (%2, %3)
  looping thru 2 args of 4:{RecordAssign_Valid_7:i8 b1,int b2}:recinit (%2, %3)
  looping thru 1 args of 2:RecordAssign_Valid_7:i8:read (%0)
  looping thru 0 args of 0:RecordAssign_Valid_7:i8:decl b
  looping thru 0 args of 3:int:const 2
checking: 9:bool:eq (%5, %8)
  looping thru 2 args of 9:bool:eq (%5, %8)
  looping thru 1 args of 5:RecordAssign_Valid_7:bytes:read (%4)
  looping thru 1 args of 4:RecordAssign_Valid_7:bytes:decl bs = 3
  looping thru 1 args of 3:RecordAssign_Valid_7:bytes:call RecordAssign_Valid_7:f(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:RecordAssign_Valid_7:i8:decl b = 0
  looping thru 0 args of 0:int:const 1
  looping thru 2 args of 8:{int b1,int b2}:recinit (%6, %7)
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 7:int:const 2
assign 1 := 1
checking: 11:RecordAssign_Valid_7:bytes:read (%4)
  looping thru 1 args of 11:RecordAssign_Valid_7:bytes:read (%4)
  looping thru 1 args of 4:RecordAssign_Valid_7:bytes:decl bs = 3
  looping thru 1 args of 3:RecordAssign_Valid_7:bytes:call RecordAssign_Valid_7:f(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:RecordAssign_Valid_7:i8:decl b = 0
  looping thru 0 args of 0:int:const 1
checking: 14:{int b1,int b2}:recinit (%12, %13)
  looping thru 2 args of 14:{int b1,int b2}:recinit (%12, %13)
  looping thru 1 args of 12:int:read (%1)
  looping thru 1 args of 1:RecordAssign_Valid_7:i8:decl b = 0
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 13:int:read (%1)
  looping thru 1 args of 1:RecordAssign_Valid_7:i8:decl b = 0
  looping thru 0 args of 0:int:const 1
checking: 20:bool:eq (%16, %19)
  looping thru 2 args of 20:bool:eq (%16, %19)
  looping thru 1 args of 16:{int b1,int b2}:read (%4)
  looping thru 1 args of 4:RecordAssign_Valid_7:bytes:decl bs = 3
  looping thru 1 args of 3:RecordAssign_Valid_7:bytes:call RecordAssign_Valid_7:f(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:RecordAssign_Valid_7:i8:decl b = 0
  looping thru 0 args of 0:int:const 1
  looping thru 2 args of 19:{int b1,int b2}:recinit (%17, %18)
  looping thru 0 args of 17:int:const 1
  looping thru 0 args of 18:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAssign_Valid_8.whiley =====
checking: 4:{int b1,int b2}:recinit (%2, %3)
  looping thru 2 args of 4:{int b1,int b2}:recinit (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl b
  looping thru 0 args of 3:int:const 2
checking: 9:bool:eq (%5, %8)
  looping thru 2 args of 9:bool:eq (%5, %8)
  looping thru 1 args of 5:RecordAssign_Valid_8:bytes:read (%4)
  looping thru 1 args of 4:RecordAssign_Valid_8:bytes:decl bs = 3
  looping thru 1 args of 3:RecordAssign_Valid_8:bytes:call RecordAssign_Valid_8:f(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl b = 0
  looping thru 0 args of 0:int:const 1
  looping thru 2 args of 8:{int b1,int b2}:recinit (%6, %7)
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 7:int:const 2
assign 1 := 1
checking: 11:RecordAssign_Valid_8:bytes:read (%4)
  looping thru 1 args of 11:RecordAssign_Valid_8:bytes:read (%4)
  looping thru 1 args of 4:RecordAssign_Valid_8:bytes:decl bs = 3
  looping thru 1 args of 3:RecordAssign_Valid_8:bytes:call RecordAssign_Valid_8:f(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl b = 0
  looping thru 0 args of 0:int:const 1
checking: 14:{int b1,int b2}:recinit (%12, %13)
  looping thru 2 args of 14:{int b1,int b2}:recinit (%12, %13)
  looping thru 1 args of 12:int:read (%1)
  looping thru 1 args of 1:int:decl b = 0
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 13:int:read (%1)
  looping thru 1 args of 1:int:decl b = 0
  looping thru 0 args of 0:int:const 1
checking: 20:bool:eq (%16, %19)
  looping thru 2 args of 20:bool:eq (%16, %19)
  looping thru 1 args of 16:{int b1,int b2}:read (%4)
  looping thru 1 args of 4:RecordAssign_Valid_8:bytes:decl bs = 3
  looping thru 1 args of 3:RecordAssign_Valid_8:bytes:call RecordAssign_Valid_8:f(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl b = 0
  looping thru 0 args of 0:int:const 1
  looping thru 2 args of 19:{int b1,int b2}:recinit (%17, %18)
  looping thru 0 args of 17:int:const 1
  looping thru 0 args of 18:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAssign_Valid_9.whiley =====
checking: 15:{int b1,int b2}:read (%14)
  looping thru 1 args of 15:{int b1,int b2}:read (%14)
  looping thru 1 args of 14:RecordAssign_Valid_9:bytes:decl bs = 13
  looping thru 2 args of 13:{int b1,int b2}:recinit (%9, %12)
  looping thru 1 args of 9:int:read (%0)
  looping thru 0 args of 0:int:decl a
  looping thru 2 args of 12:int:add (%10, %11)
  looping thru 1 args of 10:int:read (%0)
  looping thru 0 args of 0:int:decl a
  looping thru 0 args of 11:int:const 1
checking: 5:bool:eq (%1, %4)
  looping thru 2 args of 5:bool:eq (%1, %4)
  looping thru 1 args of 1:RecordAssign_Valid_9:bytes:call RecordAssign_Valid_9:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 2 args of 4:{int b1,int b2}:recinit (%2, %3)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 2
checking: 12:bool:eq (%8, %11)
  looping thru 2 args of 12:bool:eq (%8, %11)
  looping thru 1 args of 8:RecordAssign_Valid_9:bytes:call RecordAssign_Valid_9:f(%7)
  looping thru 0 args of 7:int:const 2
  looping thru 2 args of 11:{int b1,int b2}:recinit (%9, %10)
  looping thru 0 args of 9:int:const 2
  looping thru 0 args of 10:int:const 3
checking: 19:bool:eq (%15, %18)
  looping thru 2 args of 19:bool:eq (%15, %18)
  looping thru 1 args of 15:RecordAssign_Valid_9:bytes:call RecordAssign_Valid_9:f(%14)
  looping thru 0 args of 14:int:const 9
  looping thru 2 args of 18:{int b1,int b2}:recinit (%16, %17)
  looping thru 0 args of 16:int:const 9
  looping thru 0 args of 17:int:const 10
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordCoercion_Valid_1.whiley =====
checking: 3:int:recfield %2 x
  looping thru 1 args of 3:int:recfield %2 x
  looping thru 1 args of 2:RecordCoercion_Valid_1:Rec2:read (%0)
  looping thru 0 args of 0:RecordCoercion_Valid_1:Rec2:decl rec
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:call RecordCoercion_Valid_1:f(%5)
  looping thru 1 args of 5:RecordCoercion_Valid_1:Rec2:castt (%4)
  looping thru 1 args of 4:{int x,int y}:read (%3)
  looping thru 1 args of 3:RecordCoercion_Valid_1:Rec1:decl rec = 2
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 7:int:const 1
checking: 14:bool:eq (%10, %13)
  looping thru 2 args of 14:bool:eq (%10, %13)
  looping thru 1 args of 10:{int x,int y}:read (%3)
  looping thru 1 args of 3:RecordCoercion_Valid_1:Rec1:decl rec = 2
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 2 args of 13:{int x,int y}:recinit (%11, %12)
  looping thru 0 args of 11:int:const 1
  looping thru 0 args of 12:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordDefine_Valid_1.whiley =====
checking: 2:RecordDefine_Valid_1:Point:read (%0)
  looping thru 1 args of 2:RecordDefine_Valid_1:Point:read (%0)
  looping thru 0 args of 0:RecordDefine_Valid_1:Point:decl x
checking: 9:bool:eq (%5, %8)
  looping thru 2 args of 9:bool:eq (%5, %8)
  looping thru 1 args of 5:RecordDefine_Valid_1:Point:read (%4)
  looping thru 1 args of 4:RecordDefine_Valid_1:Point:decl p = 3
  looping thru 1 args of 3:RecordDefine_Valid_1:Point:call RecordDefine_Valid_1:f(%2)
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 2 args of 8:{int x,int y}:recinit (%6, %7)
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 7:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordDefine_Valid_2.whiley =====
checking: 2:RecordDefine_Valid_2:Point:read (%0)
  looping thru 1 args of 2:RecordDefine_Valid_2:Point:read (%0)
  looping thru 0 args of 0:RecordDefine_Valid_2:Point:decl x
checking: 9:bool:eq (%5, %8)
  looping thru 2 args of 9:bool:eq (%5, %8)
  looping thru 1 args of 5:RecordDefine_Valid_2:Point:read (%4)
  looping thru 1 args of 4:RecordDefine_Valid_2:Point:decl p = 3
  looping thru 1 args of 3:RecordDefine_Valid_2:Point:call RecordDefine_Valid_2:f(%2)
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 2 args of 8:{int x,int y}:recinit (%6, %7)
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 7:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordSubtype_Valid_1.whiley =====
Error compiling RecordSubtype_Valid_1.whiley
./RecordSubtype_Valid_1.whiley:12: expected type RecordSubtype_Valid_1:R4, found RecordSubtype_Valid_1:R1
    return x
           ^

===== RecordSubtype_Valid_2.whiley =====
Error compiling RecordSubtype_Valid_2.whiley
./RecordSubtype_Valid_2.whiley:12: expected type RecordSubtype_Valid_2:List4, found RecordSubtype_Valid_2:List1
    return r
           ^

===== RecursiveType_Valid_1.whiley =====
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:RecursiveType_Valid_1:Expr:decl e = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 3:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== RecursiveType_Valid_10.whiley =====
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:recfield %5 op
  looping thru 1 args of 5:{int left,int op,int right}:read (%4)
  looping thru 1 args of 4:RecursiveType_Valid_10:expr:decl e = 3
  looping thru 3 args of 3:{int left,int op,int right}:recinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 2:int:const 2
  looping thru 0 args of 7:int:const 1
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:int:recfield %10 left
  looping thru 1 args of 10:{int left,int op,int right}:read (%4)
  looping thru 1 args of 4:RecursiveType_Valid_10:expr:decl e = 3
  looping thru 3 args of 3:{int left,int op,int right}:recinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 2:int:const 2
  looping thru 0 args of 12:int:const 1
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 1 args of 16:int:recfield %15 right
  looping thru 1 args of 15:{int left,int op,int right}:read (%4)
  looping thru 1 args of 4:RecursiveType_Valid_10:expr:decl e = 3
  looping thru 3 args of 3:{int left,int op,int right}:recinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 2:int:const 2
  looping thru 0 args of 17:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== RecursiveType_Valid_11.whiley =====
checking: 23:bool:eq (%18, %22)
  looping thru 2 args of 23:bool:eq (%18, %22)
  looping thru 1 args of 18:{int left,int op,int right}:read (%4)
  looping thru 1 args of 4:RecursiveType_Valid_11:expr:decl e1 = 3
  looping thru 3 args of 3:{int left,int op,int right}:recinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 2:int:const 2
  looping thru 3 args of 22:{int left,int op,int right}:recinit (%19, %20, %21)
  looping thru 0 args of 19:int:const 1
  looping thru 0 args of 20:int:const 1
  looping thru 0 args of 21:int:const 2
checking: 33:bool:eq (%25, %32)
  looping thru 2 args of 33:bool:eq (%25, %32)
  looping thru 1 args of 25:{{int left,int op,int right} left,int op,int right}:read (%9)
  looping thru 1 args of 9:RecursiveType_Valid_11:expr:decl e2 = 8
  looping thru 3 args of 8:{{int left,int op,int right} left,int op,int right}:recinit (%5, %6, %7)
  looping thru 1 args of 5:{int left,int op,int right}:read (%4)
  looping thru 1 args of 4:RecursiveType_Valid_11:expr:decl e1 = 3
  looping thru 3 args of 3:{int left,int op,int right}:recinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 2:int:const 2
  looping thru 0 args of 6:int:const 2
  looping thru 0 args of 7:int:const 2
  looping thru 3 args of 32:{{int left,int op,int right} left,int op,int right}:recinit (%29, %30, %31)
  looping thru 3 args of 29:{int left,int op,int right}:recinit (%26, %27, %28)
  looping thru 0 args of 26:int:const 1
  looping thru 0 args of 27:int:const 1
  looping thru 0 args of 28:int:const 2
  looping thru 0 args of 30:int:const 2
  looping thru 0 args of 31:int:const 2
checking: 43:bool:eq (%35, %42)
  looping thru 2 args of 43:bool:eq (%35, %42)
  looping thru 1 args of 35:{{int left,int op,int right} left,int op,int right}:read (%17)
  looping thru 1 args of 17:RecursiveType_Valid_11:expr:decl e3 = 16
  looping thru 3 args of 16:{{int left,int op,int right} left,int op,int right}:recinit (%13, %14, %15)
  looping thru 3 args of 13:{int left,int op,int right}:recinit (%10, %11, %12)
  looping thru 0 args of 10:int:const 2
  looping thru 0 args of 11:int:const 3
  looping thru 0 args of 12:int:const 2
  looping thru 0 args of 14:int:const 2
  looping thru 0 args of 15:int:const 2
  looping thru 3 args of 42:{{int left,int op,int right} left,int op,int right}:recinit (%39, %40, %41)
  looping thru 3 args of 39:{int left,int op,int right}:recinit (%36, %37, %38)
  looping thru 0 args of 36:int:const 2
  looping thru 0 args of 37:int:const 3
  looping thru 0 args of 38:int:const 2
  looping thru 0 args of 40:int:const 2
  looping thru 0 args of 41:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== RecursiveType_Valid_12.whiley =====
Error compiling RecursiveType_Valid_12.whiley
./RecursiveType_Valid_12.whiley:6: record required, got: X<null|{int data,X lhs,X rhs}>
where ((_this.lhs == null) || (_this.lhs.data < _this.data)) && ((_this.rhs == null) || (_this.rhs.data > _this.data))
                               ^^^^^^^^^^^^^^

===== RecursiveType_Valid_13.whiley =====
checking: 23:bool:eq (%18, %22)
  looping thru 2 args of 23:bool:eq (%18, %22)
  looping thru 1 args of 18:{int left,int op,int right}:read (%4)
  looping thru 1 args of 4:RecursiveType_Valid_13:expr:decl e1 = 3
  looping thru 3 args of 3:{int left,int op,int right}:recinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 2:int:const 2
  looping thru 3 args of 22:{int left,int op,int right}:recinit (%19, %20, %21)
  looping thru 0 args of 19:int:const 1
  looping thru 0 args of 20:int:const 1
  looping thru 0 args of 21:int:const 2
checking: 33:bool:eq (%25, %32)
  looping thru 2 args of 33:bool:eq (%25, %32)
  looping thru 1 args of 25:{{int left,int op,int right} left,int op,int right}:read (%9)
  looping thru 1 args of 9:RecursiveType_Valid_13:expr:decl e2 = 8
  looping thru 3 args of 8:{{int left,int op,int right} left,int op,int right}:recinit (%5, %6, %7)
  looping thru 1 args of 5:{int left,int op,int right}:read (%4)
  looping thru 1 args of 4:RecursiveType_Valid_13:expr:decl e1 = 3
  looping thru 3 args of 3:{int left,int op,int right}:recinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 2:int:const 2
  looping thru 0 args of 6:int:const 2
  looping thru 0 args of 7:int:const 2
  looping thru 3 args of 32:{{int left,int op,int right} left,int op,int right}:recinit (%29, %30, %31)
  looping thru 3 args of 29:{int left,int op,int right}:recinit (%26, %27, %28)
  looping thru 0 args of 26:int:const 1
  looping thru 0 args of 27:int:const 1
  looping thru 0 args of 28:int:const 2
  looping thru 0 args of 30:int:const 2
  looping thru 0 args of 31:int:const 2
checking: 43:bool:eq (%35, %42)
  looping thru 2 args of 43:bool:eq (%35, %42)
  looping thru 1 args of 35:{{int left,int op,int right} left,int op,int right}:read (%17)
  looping thru 1 args of 17:RecursiveType_Valid_13:expr:decl e3 = 16
  looping thru 3 args of 16:{{int left,int op,int right} left,int op,int right}:recinit (%13, %14, %15)
  looping thru 3 args of 13:{int left,int op,int right}:recinit (%10, %11, %12)
  looping thru 0 args of 10:int:const 2
  looping thru 0 args of 11:int:const 3
  looping thru 0 args of 12:int:const 2
  looping thru 0 args of 14:int:const 2
  looping thru 0 args of 15:int:const 2
  looping thru 3 args of 42:{{int left,int op,int right} left,int op,int right}:recinit (%39, %40, %41)
  looping thru 3 args of 39:{int left,int op,int right}:recinit (%36, %37, %38)
  looping thru 0 args of 36:int:const 2
  looping thru 0 args of 37:int:const 3
  looping thru 0 args of 38:int:const 2
  looping thru 0 args of 40:int:const 2
  looping thru 0 args of 41:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== RecursiveType_Valid_14.whiley =====
checking: 19:bool:eq (%14, %18)
  looping thru 2 args of 19:bool:eq (%14, %18)
  looping thru 1 args of 14:{int left,int op,int right}:read (%8)
  looping thru 1 args of 8:RecursiveType_Valid_14:Expr:decl e1 = 7
  looping thru 1 args of 7:{int left,int op,int right}:read (%4)
  looping thru 1 args of 4:RecursiveType_Valid_14:Expr:decl bop1 = 3
  looping thru 3 args of 3:{int left,int op,int right}:recinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 2:int:const 2
  looping thru 3 args of 18:{int left,int op,int right}:recinit (%15, %16, %17)
  looping thru 0 args of 15:int:const 1
  looping thru 0 args of 16:int:const 1
  looping thru 0 args of 17:int:const 2
checking: 29:bool:eq (%21, %28)
  looping thru 2 args of 29:bool:eq (%21, %28)
  looping thru 1 args of 21:{{int left,int op,int right} left,int op,int right}:read (%13)
  looping thru 1 args of 13:RecursiveType_Valid_14:Expr:decl e2 = 12
  looping thru 3 args of 12:{{int left,int op,int right} left,int op,int right}:recinit (%9, %10, %11)
  looping thru 1 args of 9:{int left,int op,int right}:read (%4)
  looping thru 1 args of 4:RecursiveType_Valid_14:Expr:decl bop1 = 3
  looping thru 3 args of 3:{int left,int op,int right}:recinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 2:int:const 2
  looping thru 0 args of 10:int:const 2
  looping thru 0 args of 11:int:const 2
  looping thru 3 args of 28:{{int left,int op,int right} left,int op,int right}:recinit (%25, %26, %27)
  looping thru 3 args of 25:{int left,int op,int right}:recinit (%22, %23, %24)
  looping thru 0 args of 22:int:const 1
  looping thru 0 args of 23:int:const 1
  looping thru 0 args of 24:int:const 2
  looping thru 0 args of 26:int:const 2
  looping thru 0 args of 27:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== RecursiveType_Valid_15.whiley =====
checking: 19:bool:eq (%14, %18)
  looping thru 2 args of 19:bool:eq (%14, %18)
  looping thru 1 args of 14:{int left,int op,int right}:read (%8)
  looping thru 1 args of 8:RecursiveType_Valid_15:Expr:decl e1 = 7
  looping thru 1 args of 7:{int left,int op,int right}:read (%4)
  looping thru 1 args of 4:RecursiveType_Valid_15:Expr:decl bop1 = 3
  looping thru 3 args of 3:{int left,int op,int right}:recinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 2:int:const 2
  looping thru 3 args of 18:{int left,int op,int right}:recinit (%15, %16, %17)
  looping thru 0 args of 15:int:const 1
  looping thru 0 args of 16:int:const 1
  looping thru 0 args of 17:int:const 2
checking: 29:bool:eq (%21, %28)
  looping thru 2 args of 29:bool:eq (%21, %28)
  looping thru 1 args of 21:{{int left,int op,int right} left,int op,int right}:read (%13)
  looping thru 1 args of 13:RecursiveType_Valid_15:Expr:decl e2 = 12
  looping thru 3 args of 12:{{int left,int op,int right} left,int op,int right}:recinit (%9, %10, %11)
  looping thru 1 args of 9:{int left,int op,int right}:read (%4)
  looping thru 1 args of 4:RecursiveType_Valid_15:Expr:decl bop1 = 3
  looping thru 3 args of 3:{int left,int op,int right}:recinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 2:int:const 2
  looping thru 0 args of 10:int:const 2
  looping thru 0 args of 11:int:const 2
  looping thru 3 args of 28:{{int left,int op,int right} left,int op,int right}:recinit (%25, %26, %27)
  looping thru 3 args of 25:{int left,int op,int right}:recinit (%22, %23, %24)
  looping thru 0 args of 22:int:const 1
  looping thru 0 args of 23:int:const 1
  looping thru 0 args of 24:int:const 2
  looping thru 0 args of 26:int:const 2
  looping thru 0 args of 27:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== RecursiveType_Valid_16.whiley =====
checking: 1:RecursiveType_Valid_16:Expr:call RecursiveType_Valid_16:parseIdentifier()
  looping thru 0 args of 1:RecursiveType_Valid_16:Expr:call RecursiveType_Valid_16:parseIdentifier()
checking: 2:{int[] err}:recinit (%1)
  looping thru 1 args of 2:{int[] err}:recinit (%1)
  looping thru 0 args of 1:int[]:const [101,114,114]
checking: 5:bool:eq (%2, %4)
  looping thru 2 args of 5:bool:eq (%2, %4)
  looping thru 1 args of 2:RecursiveType_Valid_16:Expr:read (%1)
  looping thru 1 args of 1:RecursiveType_Valid_16:Expr:decl e = 0
  looping thru 0 args of 0:RecursiveType_Valid_16:Expr:call RecursiveType_Valid_16:parseTerm()
  looping thru 1 args of 4:{int[] err}:recinit (%3)
  looping thru 0 args of 3:int[]:const [101,114,114]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== RecursiveType_Valid_17.whiley =====
assign 2 := 1
checking: 4:RecursiveType_Valid_17:Expr:read (%2)
  looping thru 1 args of 4:RecursiveType_Valid_17:Expr:read (%2)
  looping thru 0 args of 2:RecursiveType_Valid_17:Expr:decl e
checking: 5:RecursiveType_Valid_17:State:read (%3)
  looping thru 1 args of 5:RecursiveType_Valid_17:State:read (%3)
  looping thru 0 args of 3:RecursiveType_Valid_17:State:decl st
checking: 9:RecursiveType_Valid_17:Expr,RecursiveType_Valid_17:State:call RecursiveType_Valid_17:parseAddSubExpr(%8)
  looping thru 1 args of 9:RecursiveType_Valid_17:Expr,RecursiveType_Valid_17:State:call RecursiveType_Valid_17:parseAddSubExpr(%8)
  looping thru 2 args of 8:{int[] input,int pos}:recinit (%6, %7)
  looping thru 1 args of 6:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl input
  looping thru 0 args of 7:int:const 0
checking: 11:RecursiveType_Valid_17:Expr:read (%2)
  looping thru 1 args of 11:RecursiveType_Valid_17:Expr:read (%2)
  looping thru 0 args of 2:RecursiveType_Valid_17:Expr:decl e
wyboogie.NotImplementedYet: multiple return values:parseAddSubExpr
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:272)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== RecursiveType_Valid_18.whiley =====
assign 2 := 1
checking: 4:RecursiveType_Valid_18:Expr:read (%2)
  looping thru 1 args of 4:RecursiveType_Valid_18:Expr:read (%2)
  looping thru 0 args of 2:RecursiveType_Valid_18:Expr:decl e
checking: 5:RecursiveType_Valid_18:State:read (%3)
  looping thru 1 args of 5:RecursiveType_Valid_18:State:read (%3)
  looping thru 0 args of 3:RecursiveType_Valid_18:State:decl st
checking: 9:RecursiveType_Valid_18:Expr,RecursiveType_Valid_18:State:call RecursiveType_Valid_18:parseAddSubExpr(%8)
  looping thru 1 args of 9:RecursiveType_Valid_18:Expr,RecursiveType_Valid_18:State:call RecursiveType_Valid_18:parseAddSubExpr(%8)
  looping thru 2 args of 8:{int[] input,int pos}:recinit (%6, %7)
  looping thru 1 args of 6:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl input
  looping thru 0 args of 7:int:const 0
checking: 11:RecursiveType_Valid_18:Expr:read (%2)
  looping thru 1 args of 11:RecursiveType_Valid_18:Expr:read (%2)
  looping thru 0 args of 2:RecursiveType_Valid_18:Expr:decl e
wyboogie.NotImplementedYet: multiple return values:parseAddSubExpr
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:272)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== RecursiveType_Valid_19.whiley =====
checking: 4:RecursiveType_Valid_19:posExpr:read (%3)
  looping thru 1 args of 4:RecursiveType_Valid_19:posExpr:read (%3)
  looping thru 1 args of 3:RecursiveType_Valid_19:expr:decl e2 = 2
  looping thru 1 args of 2:RecursiveType_Valid_19:posExpr:read (%0)
  looping thru 0 args of 0:RecursiveType_Valid_19:posExpr:decl e1
checking: 13:bool:eq (%7, %12)
  looping thru 2 args of 13:bool:eq (%7, %12)
  looping thru 1 args of 7:RecursiveType_Valid_19:expr:read (%6)
  looping thru 1 args of 6:RecursiveType_Valid_19:expr:decl e = 5
  looping thru 1 args of 5:RecursiveType_Valid_19:expr:call RecursiveType_Valid_19:f(%4)
  looping thru 2 args of 4:{{int lhs,int rhs} lhs,int rhs}:recinit (%2, %3)
  looping thru 2 args of 2:{int lhs,int rhs}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 3:int:const 1
  looping thru 2 args of 12:{{int lhs,int rhs} lhs,int rhs}:recinit (%10, %11)
  looping thru 2 args of 10:{int lhs,int rhs}:recinit (%8, %9)
  looping thru 0 args of 8:int:const 1
  looping thru 0 args of 9:int:const 2
  looping thru 0 args of 11:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
RecursiveType_Valid_19.bpl(37,5): Timed out on BP5003: A postcondition might not hold on this return path.
RecursiveType_Valid_19.bpl(31,5): Related location: This is the postcondition that might not hold.
Execution trace:
    RecursiveType_Valid_19.bpl(35,8): anon0

Boogie program verifier finished with 1 verified, 0 errors, 1 time out
===== RecursiveType_Valid_2.whiley =====
checking: 4:bool:gt (%2, %3)
  looping thru 2 args of 4:bool:gt (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl i
  looping thru 0 args of 3:int:const 10
checking: 6:{int[] id}:recinit (%5)
  looping thru 1 args of 6:{int[] id}:recinit (%5)
  looping thru 0 args of 5:int[]:const [118,97,114]
checking: 11:bool:gt (%9, %10)
  looping thru 2 args of 11:bool:gt (%9, %10)
  looping thru 1 args of 9:int:read (%0)
  looping thru 0 args of 0:int:decl i
  looping thru 0 args of 10:int:const 0
checking: 12:int:read (%0)
  looping thru 1 args of 12:int:read (%0)
  looping thru 0 args of 0:int:decl i
checking: 23:{RecursiveType_Valid_2:Expr lhs,RecursiveType_Valid_2:Expr rhs}:recinit (%18, %22)
  looping thru 2 args of 23:{RecursiveType_Valid_2:Expr lhs,RecursiveType_Valid_2:Expr rhs}:recinit (%18, %22)
  looping thru 1 args of 18:RecursiveType_Valid_2:Expr:call RecursiveType_Valid_2:build(%17)
  looping thru 2 args of 17:int:add (%15, %16)
  looping thru 1 args of 15:int:read (%0)
  looping thru 0 args of 0:int:decl i
  looping thru 0 args of 16:int:const 10
  looping thru 1 args of 22:RecursiveType_Valid_2:Expr:call RecursiveType_Valid_2:build(%21)
  looping thru 2 args of 21:int:add (%19, %20)
  looping thru 1 args of 19:int:read (%0)
  looping thru 0 args of 0:int:decl i
  looping thru 0 args of 20:int:const 1
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:RecursiveType_Valid_2:Expr:read (%0)
  looping thru 0 args of 0:RecursiveType_Valid_2:Expr:decl e
  looping thru 0 args of 3:type:const int
checking: 7:int:read (%4)
  looping thru 1 args of 7:int:read (%4)
  looping thru 1 args of 4:int:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_2:Expr:decl e
checking: 15:bool:istype (%11, %12)
  looping thru 2 args of 15:bool:istype (%11, %12)
  looping thru 1 args of 11:RecursiveType_Valid_2:Expr:read (%0)
  looping thru 0 args of 0:RecursiveType_Valid_2:Expr:decl e
  looping thru 0 args of 12:type:const {int[] id}
checking: 18:int:arrlen (%17)
  looping thru 1 args of 18:int:arrlen (%17)
  looping thru 1 args of 17:int[]:recfield %16 id
  looping thru 1 args of 16:{int[] id}:read (%13)
  looping thru 1 args of 13:{int[] id}:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_2:Expr:decl e
checking: 27:int:add (%23, %26)
  looping thru 2 args of 27:int:add (%23, %26)
  looping thru 1 args of 23:int:call RecursiveType_Valid_2:evaluate(%22)
  looping thru 1 args of 22:X<int|{int[] id}|{X lhs,X rhs}>:recfield %21 lhs
  looping thru 1 args of 21:RecursiveType_Valid_2:Expr:read (%14)
  looping thru 1 args of 14:RecursiveType_Valid_2:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_2:Expr:decl e
  looping thru 1 args of 26:int:call RecursiveType_Valid_2:evaluate(%25)
  looping thru 1 args of 25:X<int|{int[] id}|{X lhs,X rhs}>:recfield %24 rhs
  looping thru 1 args of 24:RecursiveType_Valid_2:Expr:read (%14)
  looping thru 1 args of 14:RecursiveType_Valid_2:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_2:Expr:decl e
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:call RecursiveType_Valid_2:evaluate(%2)
  looping thru 1 args of 2:RecursiveType_Valid_2:Expr:call RecursiveType_Valid_2:build(%1)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 5
  looping thru 0 args of 4:int:const 46
checking: 12:bool:eq (%10, %11)
  looping thru 2 args of 12:bool:eq (%10, %11)
  looping thru 1 args of 10:int:call RecursiveType_Valid_2:evaluate(%9)
  looping thru 1 args of 9:RecursiveType_Valid_2:Expr:call RecursiveType_Valid_2:build(%8)
  looping thru 1 args of 8:int:neg (%7)
  looping thru 0 args of 7:int:const 4
  looping thru 0 args of 11:int:const 41
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:int:call RecursiveType_Valid_2:evaluate(%16)
  looping thru 1 args of 16:RecursiveType_Valid_2:Expr:call RecursiveType_Valid_2:build(%15)
  looping thru 1 args of 15:int:neg (%14)
  looping thru 0 args of 14:int:const 3
  looping thru 0 args of 18:int:const 35
checking: 26:bool:eq (%24, %25)
  looping thru 2 args of 26:bool:eq (%24, %25)
  looping thru 1 args of 24:int:call RecursiveType_Valid_2:evaluate(%23)
  looping thru 1 args of 23:RecursiveType_Valid_2:Expr:call RecursiveType_Valid_2:build(%22)
  looping thru 1 args of 22:int:neg (%21)
  looping thru 0 args of 21:int:const 2
  looping thru 0 args of 25:int:const 28
checking: 33:bool:eq (%31, %32)
  looping thru 2 args of 33:bool:eq (%31, %32)
  looping thru 1 args of 31:int:call RecursiveType_Valid_2:evaluate(%30)
  looping thru 1 args of 30:RecursiveType_Valid_2:Expr:call RecursiveType_Valid_2:build(%29)
  looping thru 1 args of 29:int:neg (%28)
  looping thru 0 args of 28:int:const 1
  looping thru 0 args of 32:int:const 20
checking: 39:bool:eq (%37, %38)
  looping thru 2 args of 39:bool:eq (%37, %38)
  looping thru 1 args of 37:int:call RecursiveType_Valid_2:evaluate(%36)
  looping thru 1 args of 36:RecursiveType_Valid_2:Expr:call RecursiveType_Valid_2:build(%35)
  looping thru 0 args of 35:int:const 0
  looping thru 0 args of 38:int:const 11
checking: 45:bool:eq (%43, %44)
  looping thru 2 args of 45:bool:eq (%43, %44)
  looping thru 1 args of 43:int:call RecursiveType_Valid_2:evaluate(%42)
  looping thru 1 args of 42:RecursiveType_Valid_2:Expr:call RecursiveType_Valid_2:build(%41)
  looping thru 0 args of 41:int:const 1
  looping thru 0 args of 44:int:const 1
checking: 51:bool:eq (%49, %50)
  looping thru 2 args of 51:bool:eq (%49, %50)
  looping thru 1 args of 49:int:call RecursiveType_Valid_2:evaluate(%48)
  looping thru 1 args of 48:RecursiveType_Valid_2:Expr:call RecursiveType_Valid_2:build(%47)
  looping thru 0 args of 47:int:const 2
  looping thru 0 args of 50:int:const 2
checking: 57:bool:eq (%55, %56)
  looping thru 2 args of 57:bool:eq (%55, %56)
  looping thru 1 args of 55:int:call RecursiveType_Valid_2:evaluate(%54)
  looping thru 1 args of 54:RecursiveType_Valid_2:Expr:call RecursiveType_Valid_2:build(%53)
  looping thru 0 args of 53:int:const 3
  looping thru 0 args of 56:int:const 3
checking: 63:bool:eq (%61, %62)
  looping thru 2 args of 63:bool:eq (%61, %62)
  looping thru 1 args of 61:int:call RecursiveType_Valid_2:evaluate(%60)
  looping thru 1 args of 60:RecursiveType_Valid_2:Expr:call RecursiveType_Valid_2:build(%59)
  looping thru 0 args of 59:int:const 4
  looping thru 0 args of 62:int:const 4
checking: 69:bool:eq (%67, %68)
  looping thru 2 args of 69:bool:eq (%67, %68)
  looping thru 1 args of 67:int:call RecursiveType_Valid_2:evaluate(%66)
  looping thru 1 args of 66:RecursiveType_Valid_2:Expr:call RecursiveType_Valid_2:build(%65)
  looping thru 0 args of 65:int:const 5
  looping thru 0 args of 68:int:const 5
checking: 75:bool:eq (%73, %74)
  looping thru 2 args of 75:bool:eq (%73, %74)
  looping thru 1 args of 73:int:call RecursiveType_Valid_2:evaluate(%72)
  looping thru 1 args of 72:RecursiveType_Valid_2:Expr:call RecursiveType_Valid_2:build(%71)
  looping thru 0 args of 71:int:const 6
  looping thru 0 args of 74:int:const 6
checking: 81:bool:eq (%79, %80)
  looping thru 2 args of 81:bool:eq (%79, %80)
  looping thru 1 args of 79:int:call RecursiveType_Valid_2:evaluate(%78)
  looping thru 1 args of 78:RecursiveType_Valid_2:Expr:call RecursiveType_Valid_2:build(%77)
  looping thru 0 args of 77:int:const 7
  looping thru 0 args of 80:int:const 7
checking: 87:bool:eq (%85, %86)
  looping thru 2 args of 87:bool:eq (%85, %86)
  looping thru 1 args of 85:int:call RecursiveType_Valid_2:evaluate(%84)
  looping thru 1 args of 84:RecursiveType_Valid_2:Expr:call RecursiveType_Valid_2:build(%83)
  looping thru 0 args of 83:int:const 8
  looping thru 0 args of 86:int:const 8
checking: 93:bool:eq (%91, %92)
  looping thru 2 args of 93:bool:eq (%91, %92)
  looping thru 1 args of 91:int:call RecursiveType_Valid_2:evaluate(%90)
  looping thru 1 args of 90:RecursiveType_Valid_2:Expr:call RecursiveType_Valid_2:build(%89)
  looping thru 0 args of 89:int:const 9
  looping thru 0 args of 92:int:const 9
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== RecursiveType_Valid_20.whiley =====
checking: 4:RecursiveType_Valid_20:posExpr:read (%3)
  looping thru 1 args of 4:RecursiveType_Valid_20:posExpr:read (%3)
  looping thru 1 args of 3:RecursiveType_Valid_20:expr:decl e2 = 2
  looping thru 1 args of 2:RecursiveType_Valid_20:posExpr:read (%0)
  looping thru 0 args of 0:RecursiveType_Valid_20:posExpr:decl e1
checking: 13:bool:eq (%7, %12)
  looping thru 2 args of 13:bool:eq (%7, %12)
  looping thru 1 args of 7:RecursiveType_Valid_20:expr:read (%6)
  looping thru 1 args of 6:RecursiveType_Valid_20:expr:decl e = 5
  looping thru 1 args of 5:RecursiveType_Valid_20:expr:call RecursiveType_Valid_20:f(%4)
  looping thru 2 args of 4:{{int lhs,int rhs} lhs,int rhs}:recinit (%2, %3)
  looping thru 2 args of 2:{int lhs,int rhs}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 3:int:const 1
  looping thru 2 args of 12:{{int lhs,int rhs} lhs,int rhs}:recinit (%10, %11)
  looping thru 2 args of 10:{int lhs,int rhs}:recinit (%8, %9)
  looping thru 0 args of 8:int:const 1
  looping thru 0 args of 9:int:const 2
  looping thru 0 args of 11:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
RecursiveType_Valid_20.bpl(35,5): Timed out on BP5003: A postcondition might not hold on this return path.
RecursiveType_Valid_20.bpl(29,5): Related location: This is the postcondition that might not hold.
Execution trace:
    RecursiveType_Valid_20.bpl(33,8): anon0

Boogie program verifier finished with 1 verified, 0 errors, 1 time out
===== RecursiveType_Valid_21.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:RecursiveType_Valid_21:LinkedList:read (%0)
  looping thru 0 args of 0:RecursiveType_Valid_21:LinkedList:decl l
  looping thru 0 args of 3:type:const null
checking: 7:int:const 0
  looping thru 0 args of 7:int:const 0
checking: 15:int:add (%11, %14)
  looping thru 2 args of 15:int:add (%11, %14)
  looping thru 1 args of 11:int:recfield %10 data
  looping thru 1 args of 10:RecursiveType_Valid_21:LinkedList:read (%5)
  looping thru 1 args of 5:RecursiveType_Valid_21:LinkedList:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_21:LinkedList:decl l
  looping thru 1 args of 14:int:call RecursiveType_Valid_21:sum(%13)
  looping thru 1 args of 13:X<null|{int data,X next}>:recfield %12 next
  looping thru 1 args of 12:RecursiveType_Valid_21:LinkedList:read (%5)
  looping thru 1 args of 5:RecursiveType_Valid_21:LinkedList:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_21:LinkedList:decl l
checking: 15:bool:eq (%13, %14)
  looping thru 2 args of 15:bool:eq (%13, %14)
  looping thru 1 args of 13:int:call RecursiveType_Valid_21:sum(%12)
  looping thru 1 args of 12:{int data,null next}:read (%3)
  looping thru 1 args of 3:RecursiveType_Valid_21:LinkedList:decl l1 = 2
  looping thru 2 args of 2:{int data,null next}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:null:const null
  looping thru 0 args of 14:int:const 1
checking: 20:bool:eq (%18, %19)
  looping thru 2 args of 20:bool:eq (%18, %19)
  looping thru 1 args of 18:int:call RecursiveType_Valid_21:sum(%17)
  looping thru 1 args of 17:{int data,{int data,null next} next}:read (%7)
  looping thru 1 args of 7:RecursiveType_Valid_21:LinkedList:decl l2 = 6
  looping thru 2 args of 6:{int data,{int data,null next} next}:recinit (%4, %5)
  looping thru 0 args of 4:int:const 2
  looping thru 1 args of 5:{int data,null next}:read (%3)
  looping thru 1 args of 3:RecursiveType_Valid_21:LinkedList:decl l1 = 2
  looping thru 2 args of 2:{int data,null next}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:null:const null
  looping thru 0 args of 19:int:const 3
checking: 25:bool:eq (%23, %24)
  looping thru 2 args of 25:bool:eq (%23, %24)
  looping thru 1 args of 23:int:call RecursiveType_Valid_21:sum(%22)
  looping thru 1 args of 22:{int data,{int data,{int data,null next} next} next}:read (%11)
  looping thru 1 args of 11:RecursiveType_Valid_21:LinkedList:decl l3 = 10
  looping thru 2 args of 10:{int data,{int data,{int data,null next} next} next}:recinit (%8, %9)
  looping thru 0 args of 8:int:const 3
  looping thru 1 args of 9:{int data,{int data,null next} next}:read (%7)
  looping thru 1 args of 7:RecursiveType_Valid_21:LinkedList:decl l2 = 6
  looping thru 2 args of 6:{int data,{int data,null next} next}:recinit (%4, %5)
  looping thru 0 args of 4:int:const 2
  looping thru 1 args of 5:{int data,null next}:read (%3)
  looping thru 1 args of 3:RecursiveType_Valid_21:LinkedList:decl l1 = 2
  looping thru 2 args of 2:{int data,null next}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:null:const null
  looping thru 0 args of 24:int:const 6
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecursiveType_Valid_22.whiley =====
Error compiling RecursiveType_Valid_22.whiley
./RecursiveType_Valid_22.whiley:6: record required, got: X<null|{int data,X next}>
where (_this.next == null) || (_this.data < _this.next.data)
                                           ^^^^^^^^^^^^^^^^

===== RecursiveType_Valid_23.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:RecursiveType_Valid_23:Expr:read (%0)
  looping thru 0 args of 0:RecursiveType_Valid_23:Expr:decl e
  looping thru 0 args of 3:type:const RecursiveType_Valid_23:Expr[]
checking: 8:int:arrlen (%7)
  looping thru 1 args of 8:int:arrlen (%7)
  looping thru 1 args of 7:X<Y<X|bool|{Y lhs,Y rhs}>[]>:read (%4)
  looping thru 1 args of 4:X<Y<X|bool|{Y lhs,Y rhs}>[]>:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_23:Expr:decl e
checking: 11:int:const 0
  looping thru 0 args of 11:int:const 0
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:read (%5)
  looping thru 1 args of 5:int:decl v = 4
  looping thru 1 args of 4:int:call RecursiveType_Valid_23:f(%3)
  looping thru 3 args of 3:bool[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const false
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 7:int:const 3
assign 1 := 1
checking: 10:int:read (%5)
  looping thru 1 args of 10:int:read (%5)
  looping thru 1 args of 5:int:decl v = 4
  looping thru 1 args of 4:int:call RecursiveType_Valid_23:f(%3)
  looping thru 3 args of 3:bool[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const false
  looping thru 0 args of 2:bool:const true
checking: 12:int:call RecursiveType_Valid_23:f(%11)
  looping thru 1 args of 12:int:call RecursiveType_Valid_23:f(%11)
  looping thru 0 args of 11:bool:const false
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 1 args of 14:int:read (%5)
  looping thru 1 args of 5:int:decl v = 4
  looping thru 1 args of 4:int:call RecursiveType_Valid_23:f(%3)
  looping thru 3 args of 3:bool[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const false
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 15:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecursiveType_Valid_24.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:RecursiveType_Valid_24:Link:read (%0)
  looping thru 0 args of 0:RecursiveType_Valid_24:Link:decl links
  looping thru 0 args of 3:type:const RecursiveType_Valid_24:Link[]
checking: 16:bool:lt (%13, %15)
  looping thru 2 args of 16:bool:lt (%13, %15)
  looping thru 1 args of 13:int:read (%10)
  looping thru 1 args of 10:int:decl i = 9
  looping thru 0 args of 9:int:const 0
  looping thru 1 args of 15:int:arrlen (%14)
  looping thru 1 args of 14:X<X|null[]>:read (%4)
  looping thru 1 args of 4:X<X|null[]>:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_24:Link:decl links
checking: 26:bool:gt (%24, %25)
  looping thru 2 args of 26:bool:gt (%24, %25)
  looping thru 1 args of 24:int:read (%23)
  looping thru 1 args of 23:int:decl t = 22
  looping thru 1 args of 22:int:call RecursiveType_Valid_24:maxDepth(%21)
  looping thru 1 args of 21:X<null|X[]>:read (%20)
  looping thru 1 args of 20:RecursiveType_Valid_24:Link:decl l = 19
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(links)
  looping thru 2 args of 19:X<null|X[]>:arridx (%17, %18)
  looping thru 1 args of 17:X<X|null[]>:read (%4)
  looping thru 1 args of 4:X<X|null[]>:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_24:Link:decl links
  looping thru 1 args of 18:int:read (%10)
  looping thru 1 args of 10:int:decl i = 9
  looping thru 0 args of 9:int:const 0
  looping thru 1 args of 25:int:read (%8)
  looping thru 1 args of 8:int:decl r = 7
  looping thru 0 args of 7:int:const 0
assign 1 := 1
checking: 27:int:read (%8)
  looping thru 1 args of 27:int:read (%8)
  looping thru 1 args of 8:int:decl r = 7
  looping thru 0 args of 7:int:const 0
checking: 28:int:read (%23)
  looping thru 1 args of 28:int:read (%23)
  looping thru 1 args of 23:int:decl t = 22
  looping thru 1 args of 22:int:call RecursiveType_Valid_24:maxDepth(%21)
  looping thru 1 args of 21:X<null|X[]>:read (%20)
  looping thru 1 args of 20:RecursiveType_Valid_24:Link:decl l = 19
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(links)
  looping thru 2 args of 19:X<null|X[]>:arridx (%17, %18)
  looping thru 1 args of 17:X<X|null[]>:read (%4)
  looping thru 1 args of 4:X<X|null[]>:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_24:Link:decl links
  looping thru 1 args of 18:int:read (%10)
  looping thru 1 args of 10:int:decl i = 9
  looping thru 0 args of 9:int:const 0
assign 1 := 1
checking: 32:int:read (%10)
  looping thru 1 args of 32:int:read (%10)
  looping thru 1 args of 10:int:decl i = 9
  looping thru 0 args of 9:int:const 0
checking: 35:int:add (%33, %34)
  looping thru 2 args of 35:int:add (%33, %34)
  looping thru 1 args of 33:int:read (%10)
  looping thru 1 args of 10:int:decl i = 9
  looping thru 0 args of 9:int:const 0
  looping thru 0 args of 34:int:const 1
checking: 41:int:add (%39, %40)
  looping thru 2 args of 41:int:add (%39, %40)
  looping thru 1 args of 39:int:read (%8)
  looping thru 1 args of 8:int:decl r = 7
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 40:int:const 1
checking: 44:int:const 0
  looping thru 0 args of 44:int:const 0
checking: 14:bool:eq (%12, %13)
  looping thru 2 args of 14:bool:eq (%12, %13)
  looping thru 1 args of 12:int:call RecursiveType_Valid_24:maxDepth(%11)
  looping thru 1 args of 11:null:read (%1)
  looping thru 1 args of 1:RecursiveType_Valid_24:Link:decl l1 = 0
  looping thru 0 args of 0:null:const null
  looping thru 0 args of 13:int:const 0
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:int:call RecursiveType_Valid_24:maxDepth(%16)
  looping thru 1 args of 16:null[]:read (%4)
  looping thru 1 args of 4:RecursiveType_Valid_24:Link:decl l2 = 3
  looping thru 1 args of 3:null[]:arrinit (%2)
  looping thru 1 args of 2:null:read (%1)
  looping thru 1 args of 1:RecursiveType_Valid_24:Link:decl l1 = 0
  looping thru 0 args of 0:null:const null
  looping thru 0 args of 18:int:const 1
checking: 24:bool:eq (%22, %23)
  looping thru 2 args of 24:bool:eq (%22, %23)
  looping thru 1 args of 22:int:call RecursiveType_Valid_24:maxDepth(%21)
  looping thru 1 args of 21:null[][]:read (%7)
  looping thru 1 args of 7:RecursiveType_Valid_24:Link:decl l3 = 6
  looping thru 1 args of 6:null[][]:arrinit (%5)
  looping thru 1 args of 5:null[]:read (%4)
  looping thru 1 args of 4:RecursiveType_Valid_24:Link:decl l2 = 3
  looping thru 1 args of 3:null[]:arrinit (%2)
  looping thru 1 args of 2:null:read (%1)
  looping thru 1 args of 1:RecursiveType_Valid_24:Link:decl l1 = 0
  looping thru 0 args of 0:null:const null
  looping thru 0 args of 23:int:const 2
checking: 29:bool:eq (%27, %28)
  looping thru 2 args of 29:bool:eq (%27, %28)
  looping thru 1 args of 27:int:call RecursiveType_Valid_24:maxDepth(%26)
  looping thru 1 args of 26:null[][][]:read (%10)
  looping thru 1 args of 10:RecursiveType_Valid_24:Link:decl l4 = 9
  looping thru 1 args of 9:null[][][]:arrinit (%8)
  looping thru 1 args of 8:null[][]:read (%7)
  looping thru 1 args of 7:RecursiveType_Valid_24:Link:decl l3 = 6
  looping thru 1 args of 6:null[][]:arrinit (%5)
  looping thru 1 args of 5:null[]:read (%4)
  looping thru 1 args of 4:RecursiveType_Valid_24:Link:decl l2 = 3
  looping thru 1 args of 3:null[]:arrinit (%2)
  looping thru 1 args of 2:null:read (%1)
  looping thru 1 args of 1:RecursiveType_Valid_24:Link:decl l1 = 0
  looping thru 0 args of 0:null:const null
  looping thru 0 args of 28:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
RecursiveType_Valid_24.bpl(32,13): Error BP5001: This assertion might not hold.
Execution trace:
    RecursiveType_Valid_24.bpl(25,5): anon0
    RecursiveType_Valid_24.bpl(26,11): anon7_Then
    RecursiveType_Valid_24.bpl(28,9): anon8_LoopHead
    RecursiveType_Valid_24.bpl(30,15): anon8_LoopBody

Boogie program verifier finished with 1 verified, 1 error
===== RecursiveType_Valid_25.whiley =====
checking: 1:bool:const false
  looping thru 0 args of 1:bool:const false
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:RecursiveType_Valid_25:Value:read (%1)
  looping thru 1 args of 1:RecursiveType_Valid_25:Value:decl v = 0
  looping thru 0 args of 0:RecursiveType_Valid_25:Value:call RecursiveType_Valid_25:init()
  looping thru 0 args of 3:type:const RecursiveType_Valid_25:Expr[]
checking: 7:bool:const false
  looping thru 0 args of 7:bool:const false
checking: 12:bool:eq (%10, %11)
  looping thru 2 args of 12:bool:eq (%10, %11)
  looping thru 1 args of 10:RecursiveType_Valid_25:Value:read (%5)
  looping thru 1 args of 5:RecursiveType_Valid_25:Value:alias (%1)
  looping thru 1 args of 1:RecursiveType_Valid_25:Value:decl v = 0
  looping thru 0 args of 0:RecursiveType_Valid_25:Value:call RecursiveType_Valid_25:init()
  looping thru 0 args of 11:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecursiveType_Valid_26.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:RecursiveType_Valid_26:Expr:read (%0)
  looping thru 0 args of 0:RecursiveType_Valid_26:Expr:decl e
  looping thru 0 args of 3:type:const RecursiveType_Valid_26:SubExpr
checking: 11:bool:istype (%7, %8)
  looping thru 2 args of 11:bool:istype (%7, %8)
  looping thru 1 args of 7:X<bool|{int data,X lhs}>:read (%4)
  looping thru 1 args of 4:X<bool|{int data,X lhs}>:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_26:Expr:decl e
  looping thru 0 args of 8:type:const bool
checking: 12:int:const 0
  looping thru 0 args of 12:int:const 0
checking: 15:int:const 1
  looping thru 0 args of 15:int:const 1
checking: 21:int:neg (%20)
  looping thru 1 args of 21:int:neg (%20)
  looping thru 0 args of 20:int:const 1
checking: 21:bool:eq (%19, %20)
  looping thru 2 args of 21:bool:eq (%19, %20)
  looping thru 1 args of 19:int:call RecursiveType_Valid_26:toString(%18)
  looping thru 1 args of 18:bool:read (%1)
  looping thru 1 args of 1:RecursiveType_Valid_26:SubExpr:decl se1 = 0
  looping thru 0 args of 0:bool:const false
  looping thru 0 args of 20:int:const 0
checking: 26:bool:eq (%24, %25)
  looping thru 2 args of 26:bool:eq (%24, %25)
  looping thru 1 args of 24:int:call RecursiveType_Valid_26:toString(%23)
  looping thru 1 args of 23:{int data,bool lhs}:read (%5)
  looping thru 1 args of 5:RecursiveType_Valid_26:SubExpr:decl se2 = 4
  looping thru 2 args of 4:{int data,bool lhs}:recinit (%2, %3)
  looping thru 0 args of 2:int:const 1
  looping thru 1 args of 3:bool:read (%1)
  looping thru 1 args of 1:RecursiveType_Valid_26:SubExpr:decl se1 = 0
  looping thru 0 args of 0:bool:const false
  looping thru 0 args of 25:int:const 1
checking: 31:bool:eq (%29, %30)
  looping thru 2 args of 31:bool:eq (%29, %30)
  looping thru 1 args of 29:int:call RecursiveType_Valid_26:toString(%28)
  looping thru 1 args of 28:{int data,{int data,bool lhs} lhs}:read (%9)
  looping thru 1 args of 9:RecursiveType_Valid_26:SubExpr:decl se3 = 8
  looping thru 2 args of 8:{int data,{int data,bool lhs} lhs}:recinit (%6, %7)
  looping thru 0 args of 6:int:const 45
  looping thru 1 args of 7:{int data,bool lhs}:read (%5)
  looping thru 1 args of 5:RecursiveType_Valid_26:SubExpr:decl se2 = 4
  looping thru 2 args of 4:{int data,bool lhs}:recinit (%2, %3)
  looping thru 0 args of 2:int:const 1
  looping thru 1 args of 3:bool:read (%1)
  looping thru 1 args of 1:RecursiveType_Valid_26:SubExpr:decl se1 = 0
  looping thru 0 args of 0:bool:const false
  looping thru 0 args of 30:int:const 1
checking: 37:bool:eq (%34, %36)
  looping thru 2 args of 37:bool:eq (%34, %36)
  looping thru 1 args of 34:int:call RecursiveType_Valid_26:toString(%33)
  looping thru 1 args of 33:bool[]:read (%12)
  looping thru 1 args of 12:RecursiveType_Valid_26:Expr:decl e1 = 11
  looping thru 1 args of 11:bool[]:arrinit (%10)
  looping thru 1 args of 10:bool:read (%1)
  looping thru 1 args of 1:RecursiveType_Valid_26:SubExpr:decl se1 = 0
  looping thru 0 args of 0:bool:const false
  looping thru 1 args of 36:int:neg (%35)
  looping thru 0 args of 35:int:const 1
checking: 43:bool:eq (%40, %42)
  looping thru 2 args of 43:bool:eq (%40, %42)
  looping thru 1 args of 40:int:call RecursiveType_Valid_26:toString(%39)
  looping thru 1 args of 39:bool|bool[]|{int data,bool lhs}[]:read (%17)
  looping thru 1 args of 17:RecursiveType_Valid_26:Expr:decl e2 = 16
  looping thru 3 args of 16:bool|bool[]|{int data,bool lhs}[]:arrinit (%13, %14, %15)
  looping thru 1 args of 13:bool[]:read (%12)
  looping thru 1 args of 12:RecursiveType_Valid_26:Expr:decl e1 = 11
  looping thru 1 args of 11:bool[]:arrinit (%10)
  looping thru 1 args of 10:bool:read (%1)
  looping thru 1 args of 1:RecursiveType_Valid_26:SubExpr:decl se1 = 0
  looping thru 0 args of 0:bool:const false
  looping thru 1 args of 14:bool:read (%1)
  looping thru 1 args of 1:RecursiveType_Valid_26:SubExpr:decl se1 = 0
  looping thru 0 args of 0:bool:const false
  looping thru 1 args of 15:{int data,bool lhs}:read (%5)
  looping thru 1 args of 5:RecursiveType_Valid_26:SubExpr:decl se2 = 4
  looping thru 2 args of 4:{int data,bool lhs}:recinit (%2, %3)
  looping thru 0 args of 2:int:const 1
  looping thru 1 args of 3:bool:read (%1)
  looping thru 1 args of 1:RecursiveType_Valid_26:SubExpr:decl se1 = 0
  looping thru 0 args of 0:bool:const false
  looping thru 1 args of 42:int:neg (%41)
  looping thru 0 args of 41:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecursiveType_Valid_27.whiley =====
checking: 4:bool:gt (%2, %3)
  looping thru 2 args of 4:bool:gt (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl i
  looping thru 0 args of 3:int:const 10
checking: 6:{int[] id}:recinit (%5)
  looping thru 1 args of 6:{int[] id}:recinit (%5)
  looping thru 0 args of 5:int[]:const [118,97,114]
checking: 11:bool:gt (%9, %10)
  looping thru 2 args of 11:bool:gt (%9, %10)
  looping thru 1 args of 9:int:read (%0)
  looping thru 0 args of 0:int:decl i
  looping thru 0 args of 10:int:const 0
checking: 12:int:read (%0)
  looping thru 1 args of 12:int:read (%0)
  looping thru 0 args of 0:int:decl i
checking: 23:{RecursiveType_Valid_27:Expr lhs,RecursiveType_Valid_27:Expr rhs}:recinit (%18, %22)
  looping thru 2 args of 23:{RecursiveType_Valid_27:Expr lhs,RecursiveType_Valid_27:Expr rhs}:recinit (%18, %22)
  looping thru 1 args of 18:RecursiveType_Valid_27:Expr:call RecursiveType_Valid_27:build(%17)
  looping thru 2 args of 17:int:add (%15, %16)
  looping thru 1 args of 15:int:read (%0)
  looping thru 0 args of 0:int:decl i
  looping thru 0 args of 16:int:const 10
  looping thru 1 args of 22:RecursiveType_Valid_27:Expr:call RecursiveType_Valid_27:build(%21)
  looping thru 2 args of 21:int:add (%19, %20)
  looping thru 1 args of 19:int:read (%0)
  looping thru 0 args of 0:int:decl i
  looping thru 0 args of 20:int:const 1
checking: 4:bool:gt (%2, %3)
  looping thru 2 args of 4:bool:gt (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl i
  looping thru 0 args of 3:int:const 20
checking: 6:{int[] err}:recinit (%5)
  looping thru 1 args of 6:{int[] err}:recinit (%5)
  looping thru 0 args of 5:int[]:const [101,114,114,111,114]
checking: 10:RecursiveType_Valid_27:Expr:call RecursiveType_Valid_27:build(%9)
  looping thru 1 args of 10:RecursiveType_Valid_27:Expr:call RecursiveType_Valid_27:build(%9)
  looping thru 1 args of 9:int:read (%0)
  looping thru 0 args of 0:int:decl i
checking: 16:bool:eq (%2, %15)
  looping thru 2 args of 16:bool:eq (%2, %15)
  looping thru 1 args of 2:RecursiveType_Valid_27:SExpr:call RecursiveType_Valid_27:sbuild(%1)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 5
  looping thru 2 args of 15:{int lhs,{int lhs,{int lhs,{int lhs,{int lhs,{int lhs,int rhs} rhs} rhs} rhs} rhs} rhs}:recinit (%3, %14)
  looping thru 0 args of 3:int:const 5
  looping thru 2 args of 14:{int lhs,{int lhs,{int lhs,{int lhs,{int lhs,int rhs} rhs} rhs} rhs} rhs}:recinit (%4, %13)
  looping thru 0 args of 4:int:const 6
  looping thru 2 args of 13:{int lhs,{int lhs,{int lhs,{int lhs,int rhs} rhs} rhs} rhs}:recinit (%5, %12)
  looping thru 0 args of 5:int:const 7
  looping thru 2 args of 12:{int lhs,{int lhs,{int lhs,int rhs} rhs} rhs}:recinit (%6, %11)
  looping thru 0 args of 6:int:const 8
  looping thru 2 args of 11:{int lhs,{int lhs,int rhs} rhs}:recinit (%7, %10)
  looping thru 0 args of 7:int:const 9
  looping thru 2 args of 10:{int lhs,int rhs}:recinit (%8, %9)
  looping thru 0 args of 8:int:const 10
  looping thru 0 args of 9:int:const 1
checking: 32:bool:eq (%20, %31)
  looping thru 2 args of 32:bool:eq (%20, %31)
  looping thru 1 args of 20:RecursiveType_Valid_27:SExpr:call RecursiveType_Valid_27:sbuild(%19)
  looping thru 1 args of 19:int:neg (%18)
  looping thru 0 args of 18:int:const 4
  looping thru 2 args of 31:{int lhs,{int lhs,{int lhs,{int lhs,{int lhs,int rhs} rhs} rhs} rhs} rhs}:recinit (%21, %30)
  looping thru 0 args of 21:int:const 6
  looping thru 2 args of 30:{int lhs,{int lhs,{int lhs,{int lhs,int rhs} rhs} rhs} rhs}:recinit (%22, %29)
  looping thru 0 args of 22:int:const 7
  looping thru 2 args of 29:{int lhs,{int lhs,{int lhs,int rhs} rhs} rhs}:recinit (%23, %28)
  looping thru 0 args of 23:int:const 8
  looping thru 2 args of 28:{int lhs,{int lhs,int rhs} rhs}:recinit (%24, %27)
  looping thru 0 args of 24:int:const 9
  looping thru 2 args of 27:{int lhs,int rhs}:recinit (%25, %26)
  looping thru 0 args of 25:int:const 10
  looping thru 0 args of 26:int:const 1
checking: 46:bool:eq (%36, %45)
  looping thru 2 args of 46:bool:eq (%36, %45)
  looping thru 1 args of 36:RecursiveType_Valid_27:SExpr:call RecursiveType_Valid_27:sbuild(%35)
  looping thru 1 args of 35:int:neg (%34)
  looping thru 0 args of 34:int:const 3
  looping thru 2 args of 45:{int lhs,{int lhs,{int lhs,{int lhs,int rhs} rhs} rhs} rhs}:recinit (%37, %44)
  looping thru 0 args of 37:int:const 7
  looping thru 2 args of 44:{int lhs,{int lhs,{int lhs,int rhs} rhs} rhs}:recinit (%38, %43)
  looping thru 0 args of 38:int:const 8
  looping thru 2 args of 43:{int lhs,{int lhs,int rhs} rhs}:recinit (%39, %42)
  looping thru 0 args of 39:int:const 9
  looping thru 2 args of 42:{int lhs,int rhs}:recinit (%40, %41)
  looping thru 0 args of 40:int:const 10
  looping thru 0 args of 41:int:const 1
checking: 58:bool:eq (%50, %57)
  looping thru 2 args of 58:bool:eq (%50, %57)
  looping thru 1 args of 50:RecursiveType_Valid_27:SExpr:call RecursiveType_Valid_27:sbuild(%49)
  looping thru 1 args of 49:int:neg (%48)
  looping thru 0 args of 48:int:const 2
  looping thru 2 args of 57:{int lhs,{int lhs,{int lhs,int rhs} rhs} rhs}:recinit (%51, %56)
  looping thru 0 args of 51:int:const 8
  looping thru 2 args of 56:{int lhs,{int lhs,int rhs} rhs}:recinit (%52, %55)
  looping thru 0 args of 52:int:const 9
  looping thru 2 args of 55:{int lhs,int rhs}:recinit (%53, %54)
  looping thru 0 args of 53:int:const 10
  looping thru 0 args of 54:int:const 1
checking: 68:bool:eq (%62, %67)
  looping thru 2 args of 68:bool:eq (%62, %67)
  looping thru 1 args of 62:RecursiveType_Valid_27:SExpr:call RecursiveType_Valid_27:sbuild(%61)
  looping thru 1 args of 61:int:neg (%60)
  looping thru 0 args of 60:int:const 1
  looping thru 2 args of 67:{int lhs,{int lhs,int rhs} rhs}:recinit (%63, %66)
  looping thru 0 args of 63:int:const 9
  looping thru 2 args of 66:{int lhs,int rhs}:recinit (%64, %65)
  looping thru 0 args of 64:int:const 10
  looping thru 0 args of 65:int:const 1
checking: 75:bool:eq (%71, %74)
  looping thru 2 args of 75:bool:eq (%71, %74)
  looping thru 1 args of 71:RecursiveType_Valid_27:SExpr:call RecursiveType_Valid_27:sbuild(%70)
  looping thru 0 args of 70:int:const 0
  looping thru 2 args of 74:{int lhs,int rhs}:recinit (%72, %73)
  looping thru 0 args of 72:int:const 10
  looping thru 0 args of 73:int:const 1
checking: 80:bool:eq (%78, %79)
  looping thru 2 args of 80:bool:eq (%78, %79)
  looping thru 1 args of 78:RecursiveType_Valid_27:SExpr:call RecursiveType_Valid_27:sbuild(%77)
  looping thru 0 args of 77:int:const 1
  looping thru 0 args of 79:int:const 1
checking: 85:bool:eq (%83, %84)
  looping thru 2 args of 85:bool:eq (%83, %84)
  looping thru 1 args of 83:RecursiveType_Valid_27:SExpr:call RecursiveType_Valid_27:sbuild(%82)
  looping thru 0 args of 82:int:const 2
  looping thru 0 args of 84:int:const 2
checking: 90:bool:eq (%88, %89)
  looping thru 2 args of 90:bool:eq (%88, %89)
  looping thru 1 args of 88:RecursiveType_Valid_27:SExpr:call RecursiveType_Valid_27:sbuild(%87)
  looping thru 0 args of 87:int:const 3
  looping thru 0 args of 89:int:const 3
checking: 95:bool:eq (%93, %94)
  looping thru 2 args of 95:bool:eq (%93, %94)
  looping thru 1 args of 93:RecursiveType_Valid_27:SExpr:call RecursiveType_Valid_27:sbuild(%92)
  looping thru 0 args of 92:int:const 4
  looping thru 0 args of 94:int:const 4
checking: 100:bool:eq (%98, %99)
  looping thru 2 args of 100:bool:eq (%98, %99)
  looping thru 1 args of 98:RecursiveType_Valid_27:SExpr:call RecursiveType_Valid_27:sbuild(%97)
  looping thru 0 args of 97:int:const 5
  looping thru 0 args of 99:int:const 5
checking: 105:bool:eq (%103, %104)
  looping thru 2 args of 105:bool:eq (%103, %104)
  looping thru 1 args of 103:RecursiveType_Valid_27:SExpr:call RecursiveType_Valid_27:sbuild(%102)
  looping thru 0 args of 102:int:const 6
  looping thru 0 args of 104:int:const 6
checking: 110:bool:eq (%108, %109)
  looping thru 2 args of 110:bool:eq (%108, %109)
  looping thru 1 args of 108:RecursiveType_Valid_27:SExpr:call RecursiveType_Valid_27:sbuild(%107)
  looping thru 0 args of 107:int:const 7
  looping thru 0 args of 109:int:const 7
checking: 115:bool:eq (%113, %114)
  looping thru 2 args of 115:bool:eq (%113, %114)
  looping thru 1 args of 113:RecursiveType_Valid_27:SExpr:call RecursiveType_Valid_27:sbuild(%112)
  looping thru 0 args of 112:int:const 8
  looping thru 0 args of 114:int:const 8
checking: 120:bool:eq (%118, %119)
  looping thru 2 args of 120:bool:eq (%118, %119)
  looping thru 1 args of 118:RecursiveType_Valid_27:SExpr:call RecursiveType_Valid_27:sbuild(%117)
  looping thru 0 args of 117:int:const 9
  looping thru 0 args of 119:int:const 9
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== RecursiveType_Valid_28.whiley =====
Error compiling RecursiveType_Valid_28.whiley
./RecursiveType_Valid_28.whiley:27: unable to resolve name (no match for get(RecursiveType_Valid_28:LinkedList,int)
	found: RecursiveType_Valid_28:get : function(RecursiveType_Valid_28:Link,int)->(int))
        return get(ls.next,i+1)
               ^^^^^^^^^^^^^^^^

===== RecursiveType_Valid_3.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:RecursiveType_Valid_3:Expr:read (%0)
  looping thru 0 args of 0:RecursiveType_Valid_3:Expr:decl e
  looping thru 0 args of 3:type:const int
checking: 7:int:read (%4)
  looping thru 1 args of 7:int:read (%4)
  looping thru 1 args of 4:int:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_3:Expr:decl e
checking: 14:bool:istype (%10, %11)
  looping thru 2 args of 14:bool:istype (%10, %11)
  looping thru 1 args of 10:RecursiveType_Valid_3:Expr:read (%5)
  looping thru 1 args of 5:RecursiveType_Valid_3:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_3:Expr:decl e
  looping thru 0 args of 11:type:const RecursiveType_Valid_3:Expr[]
checking: 27:bool:lt (%24, %26)
  looping thru 2 args of 27:bool:lt (%24, %26)
  looping thru 1 args of 24:int:read (%21)
  looping thru 1 args of 21:int:decl i = 20
  looping thru 0 args of 20:int:const 0
  looping thru 1 args of 26:int:arrlen (%25)
  looping thru 1 args of 25:X<Y<X|int|{Y index,Y src}>[]>:read (%12)
  looping thru 1 args of 12:X<Y<X|int|{Y index,Y src}>[]>:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_3:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_3:Expr:decl e
assign 1 := 1
checking: 30:int|RecursiveType_Valid_3:Value:arridx (%28, %29)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(r)
  looping thru 2 args of 30:int|RecursiveType_Valid_3:Value:arridx (%28, %29)
  looping thru 1 args of 28:int|RecursiveType_Valid_3:Value[]:read (%19)
  looping thru 1 args of 19:RecursiveType_Valid_3:Value[]:decl r = 18
  looping thru 2 args of 18:int[]:arrgen (%15, %17)
  looping thru 0 args of 15:int:const 0
  looping thru 1 args of 17:int:arrlen (%16)
  looping thru 1 args of 16:X<Y<X|int|{Y index,Y src}>[]>:read (%12)
  looping thru 1 args of 12:X<Y<X|int|{Y index,Y src}>[]>:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_3:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_3:Expr:decl e
  looping thru 1 args of 29:int:read (%21)
  looping thru 1 args of 21:int:decl i = 20
  looping thru 0 args of 20:int:const 0
checking: 34:RecursiveType_Valid_3:Value:call RecursiveType_Valid_3:evaluate(%33)
  looping thru 1 args of 34:RecursiveType_Valid_3:Value:call RecursiveType_Valid_3:evaluate(%33)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(e)
  looping thru 2 args of 33:X<int|X[]|{X index,X src}>:arridx (%31, %32)
  looping thru 1 args of 31:X<Y<X|int|{Y index,Y src}>[]>:read (%12)
  looping thru 1 args of 12:X<Y<X|int|{Y index,Y src}>[]>:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_3:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_3:Expr:decl e
  looping thru 1 args of 32:int:read (%21)
  looping thru 1 args of 21:int:decl i = 20
  looping thru 0 args of 20:int:const 0
assign 1 := 1
checking: 36:int:read (%21)
  looping thru 1 args of 36:int:read (%21)
  looping thru 1 args of 21:int:decl i = 20
  looping thru 0 args of 20:int:const 0
checking: 39:int:add (%37, %38)
  looping thru 2 args of 39:int:add (%37, %38)
  looping thru 1 args of 37:int:read (%21)
  looping thru 1 args of 21:int:decl i = 20
  looping thru 0 args of 20:int:const 0
  looping thru 0 args of 38:int:const 1
checking: 43:int|RecursiveType_Valid_3:Value[]:read (%19)
  looping thru 1 args of 43:int|RecursiveType_Valid_3:Value[]:read (%19)
  looping thru 1 args of 19:RecursiveType_Valid_3:Value[]:decl r = 18
  looping thru 2 args of 18:int[]:arrgen (%15, %17)
  looping thru 0 args of 15:int:const 0
  looping thru 1 args of 17:int:arrlen (%16)
  looping thru 1 args of 16:X<Y<X|int|{Y index,Y src}>[]>:read (%12)
  looping thru 1 args of 12:X<Y<X|int|{Y index,Y src}>[]>:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_3:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_3:Expr:decl e
checking: 74:bool:land (%58, %72)
  looping thru 2 args of 58:bool:istype (%54, %55)
  looping thru 1 args of 54:RecursiveType_Valid_3:Value:read (%49)
  looping thru 1 args of 49:RecursiveType_Valid_3:Value:decl src = 48
  looping thru 1 args of 48:RecursiveType_Valid_3:Value:call RecursiveType_Valid_3:evaluate(%47)
  looping thru 1 args of 47:X<int|X[]|{X index,X src}>:recfield %46 src
  looping thru 1 args of 46:RecursiveType_Valid_3:Expr:read (%13)
  looping thru 1 args of 13:RecursiveType_Valid_3:Expr:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_3:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_3:Expr:decl e
  looping thru 0 args of 55:type:const RecursiveType_Valid_3:Expr[]
  looping thru 2 args of 63:bool:istype (%59, %60)
  looping thru 1 args of 59:RecursiveType_Valid_3:Value:read (%53)
  looping thru 1 args of 53:RecursiveType_Valid_3:Value:decl index = 52
  looping thru 1 args of 52:RecursiveType_Valid_3:Value:call RecursiveType_Valid_3:evaluate(%51)
  looping thru 1 args of 51:X<int|X[]|{X index,X src}>:recfield %50 index
  looping thru 1 args of 50:RecursiveType_Valid_3:Expr:read (%13)
  looping thru 1 args of 13:RecursiveType_Valid_3:Expr:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_3:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_3:Expr:decl e
  looping thru 0 args of 60:type:const int
  looping thru 2 args of 66:bool:gteq (%64, %65)
  looping thru 1 args of 64:int:read (%61)
  looping thru 1 args of 61:int:alias (%53)
  looping thru 1 args of 53:RecursiveType_Valid_3:Value:decl index = 52
  looping thru 1 args of 52:RecursiveType_Valid_3:Value:call RecursiveType_Valid_3:evaluate(%51)
  looping thru 1 args of 51:X<int|X[]|{X index,X src}>:recfield %50 index
  looping thru 1 args of 50:RecursiveType_Valid_3:Expr:read (%13)
  looping thru 1 args of 13:RecursiveType_Valid_3:Expr:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_3:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_3:Expr:decl e
  looping thru 0 args of 65:int:const 0
  looping thru 2 args of 70:bool:lt (%67, %69)
  looping thru 1 args of 67:int:read (%61)
  looping thru 1 args of 61:int:alias (%53)
  looping thru 1 args of 53:RecursiveType_Valid_3:Value:decl index = 52
  looping thru 1 args of 52:RecursiveType_Valid_3:Value:call RecursiveType_Valid_3:evaluate(%51)
  looping thru 1 args of 51:X<int|X[]|{X index,X src}>:recfield %50 index
  looping thru 1 args of 50:RecursiveType_Valid_3:Expr:read (%13)
  looping thru 1 args of 13:RecursiveType_Valid_3:Expr:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_3:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_3:Expr:decl e
  looping thru 1 args of 69:int:arrlen (%68)
  looping thru 1 args of 68:X<X|int[]>:read (%56)
  looping thru 1 args of 56:X<X|int[]>:alias (%49)
  looping thru 1 args of 49:RecursiveType_Valid_3:Value:decl src = 48
  looping thru 1 args of 48:RecursiveType_Valid_3:Value:call RecursiveType_Valid_3:evaluate(%47)
  looping thru 1 args of 47:X<int|X[]|{X index,X src}>:recfield %46 src
  looping thru 1 args of 46:RecursiveType_Valid_3:Expr:read (%13)
  looping thru 1 args of 13:RecursiveType_Valid_3:Expr:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_3:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_3:Expr:decl e
checking: 79:X<int|X[]>:arridx (%77, %78)
conjecture: 0 <= toInt(index) && toInt(index) < arraylen(src)
  looping thru 2 args of 79:X<int|X[]>:arridx (%77, %78)
  looping thru 1 args of 77:X<X|int[]>:read (%56)
  looping thru 1 args of 56:X<X|int[]>:alias (%49)
  looping thru 1 args of 49:RecursiveType_Valid_3:Value:decl src = 48
  looping thru 1 args of 48:RecursiveType_Valid_3:Value:call RecursiveType_Valid_3:evaluate(%47)
  looping thru 1 args of 47:X<int|X[]|{X index,X src}>:recfield %46 src
  looping thru 1 args of 46:RecursiveType_Valid_3:Expr:read (%13)
  looping thru 1 args of 13:RecursiveType_Valid_3:Expr:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_3:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_3:Expr:decl e
  looping thru 1 args of 78:int:read (%61)
  looping thru 1 args of 61:int:alias (%53)
  looping thru 1 args of 53:RecursiveType_Valid_3:Value:decl index = 52
  looping thru 1 args of 52:RecursiveType_Valid_3:Value:call RecursiveType_Valid_3:evaluate(%51)
  looping thru 1 args of 51:X<int|X[]|{X index,X src}>:recfield %50 index
  looping thru 1 args of 50:RecursiveType_Valid_3:Expr:read (%13)
  looping thru 1 args of 13:RecursiveType_Valid_3:Expr:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_3:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_3:Expr:decl e
checking: 82:null:const null
  looping thru 0 args of 82:null:const null
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:RecursiveType_Valid_3:Value:call RecursiveType_Valid_3:evaluate(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 1
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:RecursiveType_Valid_3:Value:call RecursiveType_Valid_3:evaluate(%10)
  looping thru 2 args of 10:{int index,int[] src}:recinit (%5, %9)
  looping thru 0 args of 5:int:const 0
  looping thru 3 args of 9:int[]:arrinit (%6, %7, %8)
  looping thru 0 args of 6:int:const 112
  looping thru 0 args of 7:int:const 212
  looping thru 0 args of 8:int:const 342
  looping thru 0 args of 12:int:const 112
checking: 23:bool:eq (%21, %22)
  looping thru 2 args of 23:bool:eq (%21, %22)
  looping thru 1 args of 21:RecursiveType_Valid_3:Value:call RecursiveType_Valid_3:evaluate(%20)
  looping thru 2 args of 20:{int index,int[] src}:recinit (%15, %19)
  looping thru 0 args of 15:int:const 2
  looping thru 3 args of 19:int[]:arrinit (%16, %17, %18)
  looping thru 0 args of 16:int:const 112312
  looping thru 0 args of 17:int:const 289712
  looping thru 0 args of 18:int:const 31231242
  looping thru 0 args of 22:int:const 31231242
checking: 34:bool:eq (%29, %33)
  looping thru 2 args of 34:bool:eq (%29, %33)
  looping thru 1 args of 29:RecursiveType_Valid_3:Value:call RecursiveType_Valid_3:evaluate(%28)
  looping thru 3 args of 28:int[]:arrinit (%25, %26, %27)
  looping thru 0 args of 25:int:const 1
  looping thru 0 args of 26:int:const 2
  looping thru 0 args of 27:int:const 3
  looping thru 3 args of 33:int[]:arrinit (%30, %31, %32)
  looping thru 0 args of 30:int:const 1
  looping thru 0 args of 31:int:const 2
  looping thru 0 args of 32:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
RecursiveType_Valid_3.bpl(42,17): Error BP5001: This assertion might not hold.
Execution trace:
    RecursiveType_Valid_3.bpl(33,5): anon0
    RecursiveType_Valid_3.bpl(37,9): anon9_Else
    RecursiveType_Valid_3.bpl(38,15): anon10_Then
    RecursiveType_Valid_3.bpl(40,13): anon11_LoopHead
    RecursiveType_Valid_3.bpl(42,17): anon11_LoopBody
RecursiveType_Valid_3.bpl(55,17): Error BP5003: A postcondition might not hold on this return path.
RecursiveType_Valid_3.bpl(26,5): Related location: This is the postcondition that might not hold.
Execution trace:
    RecursiveType_Valid_3.bpl(33,5): anon0
    RecursiveType_Valid_3.bpl(37,9): anon9_Else
    RecursiveType_Valid_3.bpl(50,17): anon10_Else
    RecursiveType_Valid_3.bpl(53,17): anon12_Then

Boogie program verifier finished with 1 verified, 2 errors
===== RecursiveType_Valid_4.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:RecursiveType_Valid_4:Expr:read (%0)
  looping thru 0 args of 0:RecursiveType_Valid_4:Expr:decl e
  looping thru 0 args of 3:type:const int
checking: 7:int:read (%4)
  looping thru 1 args of 7:int:read (%4)
  looping thru 1 args of 4:int:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_4:Expr:decl e
checking: 14:bool:istype (%10, %11)
  looping thru 2 args of 14:bool:istype (%10, %11)
  looping thru 1 args of 10:RecursiveType_Valid_4:Expr:read (%5)
  looping thru 1 args of 5:RecursiveType_Valid_4:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_4:Expr:decl e
  looping thru 0 args of 11:type:const RecursiveType_Valid_4:Expr[]
checking: 27:bool:lt (%24, %26)
  looping thru 2 args of 27:bool:lt (%24, %26)
  looping thru 1 args of 24:int:read (%21)
  looping thru 1 args of 21:int:decl i = 20
  looping thru 0 args of 20:int:const 0
  looping thru 1 args of 26:int:arrlen (%25)
  looping thru 1 args of 25:X<Y<X|int|{Y index,Y src}>[]>:read (%12)
  looping thru 1 args of 12:X<Y<X|int|{Y index,Y src}>[]>:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_4:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_4:Expr:decl e
checking: 37:bool:istype (%33, %34)
  looping thru 2 args of 37:bool:istype (%33, %34)
  looping thru 1 args of 33:null|RecursiveType_Valid_4:Value:read (%32)
  looping thru 1 args of 32:null|RecursiveType_Valid_4:Value:decl v = 31
  looping thru 1 args of 31:null|RecursiveType_Valid_4:Value:call RecursiveType_Valid_4:evaluate(%30)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(e)
  looping thru 2 args of 30:X<int|X[]|{X index,X src}>:arridx (%28, %29)
  looping thru 1 args of 28:X<Y<X|int|{Y index,Y src}>[]>:read (%12)
  looping thru 1 args of 12:X<Y<X|int|{Y index,Y src}>[]>:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_4:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_4:Expr:decl e
  looping thru 1 args of 29:int:read (%21)
  looping thru 1 args of 21:int:decl i = 20
  looping thru 0 args of 20:int:const 0
  looping thru 0 args of 34:type:const null
checking: 38:null:read (%35)
  looping thru 1 args of 38:null:read (%35)
  looping thru 1 args of 35:null:alias (%32)
  looping thru 1 args of 32:null|RecursiveType_Valid_4:Value:decl v = 31
  looping thru 1 args of 31:null|RecursiveType_Valid_4:Value:call RecursiveType_Valid_4:evaluate(%30)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(e)
  looping thru 2 args of 30:X<int|X[]|{X index,X src}>:arridx (%28, %29)
  looping thru 1 args of 28:X<Y<X|int|{Y index,Y src}>[]>:read (%12)
  looping thru 1 args of 12:X<Y<X|int|{Y index,Y src}>[]>:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_4:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_4:Expr:decl e
  looping thru 1 args of 29:int:read (%21)
  looping thru 1 args of 21:int:decl i = 20
  looping thru 0 args of 20:int:const 0
assign 1 := 1
checking: 43:int|RecursiveType_Valid_4:Value:arridx (%41, %42)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(r)
  looping thru 2 args of 43:int|RecursiveType_Valid_4:Value:arridx (%41, %42)
  looping thru 1 args of 41:int|RecursiveType_Valid_4:Value[]:read (%19)
  looping thru 1 args of 19:RecursiveType_Valid_4:Value[]:decl r = 18
  looping thru 2 args of 18:int[]:arrgen (%15, %17)
  looping thru 0 args of 15:int:const 0
  looping thru 1 args of 17:int:arrlen (%16)
  looping thru 1 args of 16:X<Y<X|int|{Y index,Y src}>[]>:read (%12)
  looping thru 1 args of 12:X<Y<X|int|{Y index,Y src}>[]>:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_4:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_4:Expr:decl e
  looping thru 1 args of 42:int:read (%21)
  looping thru 1 args of 21:int:decl i = 20
  looping thru 0 args of 20:int:const 0
checking: 44:RecursiveType_Valid_4:Value:read (%36)
  looping thru 1 args of 44:RecursiveType_Valid_4:Value:read (%36)
  looping thru 1 args of 36:RecursiveType_Valid_4:Value:alias (%32)
  looping thru 1 args of 32:null|RecursiveType_Valid_4:Value:decl v = 31
  looping thru 1 args of 31:null|RecursiveType_Valid_4:Value:call RecursiveType_Valid_4:evaluate(%30)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(e)
  looping thru 2 args of 30:X<int|X[]|{X index,X src}>:arridx (%28, %29)
  looping thru 1 args of 28:X<Y<X|int|{Y index,Y src}>[]>:read (%12)
  looping thru 1 args of 12:X<Y<X|int|{Y index,Y src}>[]>:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_4:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_4:Expr:decl e
  looping thru 1 args of 29:int:read (%21)
  looping thru 1 args of 21:int:decl i = 20
  looping thru 0 args of 20:int:const 0
assign 1 := 1
checking: 48:int:read (%21)
  looping thru 1 args of 48:int:read (%21)
  looping thru 1 args of 21:int:decl i = 20
  looping thru 0 args of 20:int:const 0
checking: 51:int:add (%49, %50)
  looping thru 2 args of 51:int:add (%49, %50)
  looping thru 1 args of 49:int:read (%21)
  looping thru 1 args of 21:int:decl i = 20
  looping thru 0 args of 20:int:const 0
  looping thru 0 args of 50:int:const 1
checking: 55:int|RecursiveType_Valid_4:Value[]:read (%19)
  looping thru 1 args of 55:int|RecursiveType_Valid_4:Value[]:read (%19)
  looping thru 1 args of 19:RecursiveType_Valid_4:Value[]:decl r = 18
  looping thru 2 args of 18:int[]:arrgen (%15, %17)
  looping thru 0 args of 15:int:const 0
  looping thru 1 args of 17:int:arrlen (%16)
  looping thru 1 args of 16:X<Y<X|int|{Y index,Y src}>[]>:read (%12)
  looping thru 1 args of 12:X<Y<X|int|{Y index,Y src}>[]>:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_4:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_4:Expr:decl e
checking: 86:bool:land (%70, %84)
  looping thru 2 args of 70:bool:istype (%66, %67)
  looping thru 1 args of 66:null|RecursiveType_Valid_4:Value:read (%61)
  looping thru 1 args of 61:null|RecursiveType_Valid_4:Value:decl src = 60
  looping thru 1 args of 60:null|RecursiveType_Valid_4:Value:call RecursiveType_Valid_4:evaluate(%59)
  looping thru 1 args of 59:X<int|X[]|{X index,X src}>:recfield %58 src
  looping thru 1 args of 58:RecursiveType_Valid_4:Expr:read (%13)
  looping thru 1 args of 13:RecursiveType_Valid_4:Expr:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_4:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_4:Expr:decl e
  looping thru 0 args of 67:type:const RecursiveType_Valid_4:Expr[]
  looping thru 2 args of 75:bool:istype (%71, %72)
  looping thru 1 args of 71:null|RecursiveType_Valid_4:Value:read (%65)
  looping thru 1 args of 65:null|RecursiveType_Valid_4:Value:decl index = 64
  looping thru 1 args of 64:null|RecursiveType_Valid_4:Value:call RecursiveType_Valid_4:evaluate(%63)
  looping thru 1 args of 63:X<int|X[]|{X index,X src}>:recfield %62 index
  looping thru 1 args of 62:RecursiveType_Valid_4:Expr:read (%13)
  looping thru 1 args of 13:RecursiveType_Valid_4:Expr:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_4:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_4:Expr:decl e
  looping thru 0 args of 72:type:const int
  looping thru 2 args of 78:bool:gteq (%76, %77)
  looping thru 1 args of 76:int:read (%73)
  looping thru 1 args of 73:int:alias (%65)
  looping thru 1 args of 65:null|RecursiveType_Valid_4:Value:decl index = 64
  looping thru 1 args of 64:null|RecursiveType_Valid_4:Value:call RecursiveType_Valid_4:evaluate(%63)
  looping thru 1 args of 63:X<int|X[]|{X index,X src}>:recfield %62 index
  looping thru 1 args of 62:RecursiveType_Valid_4:Expr:read (%13)
  looping thru 1 args of 13:RecursiveType_Valid_4:Expr:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_4:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_4:Expr:decl e
  looping thru 0 args of 77:int:const 0
  looping thru 2 args of 82:bool:lt (%79, %81)
  looping thru 1 args of 79:int:read (%73)
  looping thru 1 args of 73:int:alias (%65)
  looping thru 1 args of 65:null|RecursiveType_Valid_4:Value:decl index = 64
  looping thru 1 args of 64:null|RecursiveType_Valid_4:Value:call RecursiveType_Valid_4:evaluate(%63)
  looping thru 1 args of 63:X<int|X[]|{X index,X src}>:recfield %62 index
  looping thru 1 args of 62:RecursiveType_Valid_4:Expr:read (%13)
  looping thru 1 args of 13:RecursiveType_Valid_4:Expr:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_4:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_4:Expr:decl e
  looping thru 1 args of 81:int:arrlen (%80)
  looping thru 1 args of 80:X<X|int[]>:read (%68)
  looping thru 1 args of 68:X<X|int[]>:alias (%61)
  looping thru 1 args of 61:null|RecursiveType_Valid_4:Value:decl src = 60
  looping thru 1 args of 60:null|RecursiveType_Valid_4:Value:call RecursiveType_Valid_4:evaluate(%59)
  looping thru 1 args of 59:X<int|X[]|{X index,X src}>:recfield %58 src
  looping thru 1 args of 58:RecursiveType_Valid_4:Expr:read (%13)
  looping thru 1 args of 13:RecursiveType_Valid_4:Expr:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_4:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_4:Expr:decl e
checking: 91:X<int|X[]>:arridx (%89, %90)
conjecture: 0 <= toInt(index) && toInt(index) < arraylen(src)
  looping thru 2 args of 91:X<int|X[]>:arridx (%89, %90)
  looping thru 1 args of 89:X<X|int[]>:read (%68)
  looping thru 1 args of 68:X<X|int[]>:alias (%61)
  looping thru 1 args of 61:null|RecursiveType_Valid_4:Value:decl src = 60
  looping thru 1 args of 60:null|RecursiveType_Valid_4:Value:call RecursiveType_Valid_4:evaluate(%59)
  looping thru 1 args of 59:X<int|X[]|{X index,X src}>:recfield %58 src
  looping thru 1 args of 58:RecursiveType_Valid_4:Expr:read (%13)
  looping thru 1 args of 13:RecursiveType_Valid_4:Expr:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_4:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_4:Expr:decl e
  looping thru 1 args of 90:int:read (%73)
  looping thru 1 args of 73:int:alias (%65)
  looping thru 1 args of 65:null|RecursiveType_Valid_4:Value:decl index = 64
  looping thru 1 args of 64:null|RecursiveType_Valid_4:Value:call RecursiveType_Valid_4:evaluate(%63)
  looping thru 1 args of 63:X<int|X[]|{X index,X src}>:recfield %62 index
  looping thru 1 args of 62:RecursiveType_Valid_4:Expr:read (%13)
  looping thru 1 args of 13:RecursiveType_Valid_4:Expr:alias (%5)
  looping thru 1 args of 5:RecursiveType_Valid_4:Expr:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_4:Expr:decl e
checking: 94:null:const null
  looping thru 0 args of 94:null:const null
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:null|RecursiveType_Valid_4:Value:call RecursiveType_Valid_4:evaluate(%0)
  looping thru 0 args of 0:int:const 123
  looping thru 0 args of 2:int:const 123
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:null|RecursiveType_Valid_4:Value:call RecursiveType_Valid_4:evaluate(%10)
  looping thru 2 args of 10:{int index,int[] src}:recinit (%5, %9)
  looping thru 0 args of 5:int:const 0
  looping thru 3 args of 9:int[]:arrinit (%6, %7, %8)
  looping thru 0 args of 6:int:const 112
  looping thru 0 args of 7:int:const 212332
  looping thru 0 args of 8:int:const 342
  looping thru 0 args of 12:int:const 112
checking: 24:bool:eq (%22, %23)
  looping thru 2 args of 24:bool:eq (%22, %23)
  looping thru 1 args of 22:null|RecursiveType_Valid_4:Value:call RecursiveType_Valid_4:evaluate(%21)
  looping thru 2 args of 21:{int index,int[] src}:recinit (%15, %20)
  looping thru 0 args of 15:int:const 2
  looping thru 3 args of 20:int[]:arrinit (%16, %18, %19)
  looping thru 0 args of 16:int:const 112312
  looping thru 1 args of 18:int:neg (%17)
  looping thru 0 args of 17:int:const 289712
  looping thru 0 args of 19:int:const 312242
  looping thru 0 args of 23:int:const 312242
checking: 35:bool:eq (%30, %34)
  looping thru 2 args of 35:bool:eq (%30, %34)
  looping thru 1 args of 30:null|RecursiveType_Valid_4:Value:call RecursiveType_Valid_4:evaluate(%29)
  looping thru 3 args of 29:int[]:arrinit (%26, %27, %28)
  looping thru 0 args of 26:int:const 123
  looping thru 0 args of 27:int:const 223
  looping thru 0 args of 28:int:const 323
  looping thru 3 args of 34:int[]:arrinit (%31, %32, %33)
  looping thru 0 args of 31:int:const 123
  looping thru 0 args of 32:int:const 223
  looping thru 0 args of 33:int:const 323
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
RecursiveType_Valid_4.bpl(44,17): Error BP5001: This assertion might not hold.
Execution trace:
    RecursiveType_Valid_4.bpl(34,5): anon0
    RecursiveType_Valid_4.bpl(38,9): anon12_Else
    RecursiveType_Valid_4.bpl(39,15): anon13_Then
    RecursiveType_Valid_4.bpl(41,13): anon14_LoopHead
    RecursiveType_Valid_4.bpl(43,19): anon14_LoopBody
RecursiveType_Valid_4.bpl(50,21): Error BP5001: This assertion might not hold.
Execution trace:
    RecursiveType_Valid_4.bpl(34,5): anon0
    RecursiveType_Valid_4.bpl(38,9): anon12_Else
    RecursiveType_Valid_4.bpl(39,15): anon13_Then
    RecursiveType_Valid_4.bpl(41,13): anon14_LoopHead
    RecursiveType_Valid_4.bpl(43,19): anon14_LoopBody
    RecursiveType_Valid_4.bpl(50,21): anon15_Else

Boogie program verifier finished with 1 verified, 2 errors
===== RecursiveType_Valid_5.whiley =====
Error compiling RecursiveType_Valid_5.whiley
./RecursiveType_Valid_5.whiley:8: internal failure, Unable to type loop
    while i < n:
    ^^^^^^^^^^^^

===== RecursiveType_Valid_6.whiley =====
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:RecursiveType_Valid_6:expr:decl e = 0
  looping thru 0 args of 0:int:const 123
  looping thru 0 args of 3:int:const 123
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== RecursiveType_Valid_7.whiley =====
checking: 5:{int offset,int op}:recinit (%3, %4)
  looping thru 2 args of 5:{int offset,int op}:recinit (%3, %4)
  looping thru 1 args of 3:int:read (%0)
  looping thru 0 args of 0:int:decl offset
  looping thru 1 args of 4:int:read (%1)
  looping thru 0 args of 1:int:decl op
checking: 7:{int index,int offset,int op}:recinit (%4, %5, %6)
  looping thru 3 args of 7:{int index,int offset,int op}:recinit (%4, %5, %6)
  looping thru 1 args of 4:int:read (%2)
  looping thru 0 args of 2:int:decl index
  looping thru 1 args of 5:int:read (%0)
  looping thru 0 args of 0:int:decl offset
  looping thru 1 args of 6:int:read (%1)
  looping thru 0 args of 1:int:decl op
checking: 11:{RecursiveType_Valid_7:string name,int offset,int op,RecursiveType_Valid_7:class_t owner,RecursiveType_Valid_7:fun_t type}:recinit (%6, %7, %8, %9, %10)
  looping thru 5 args of 11:{RecursiveType_Valid_7:string name,int offset,int op,RecursiveType_Valid_7:class_t owner,RecursiveType_Valid_7:fun_t type}:recinit (%6, %7, %8, %9, %10)
  looping thru 1 args of 6:RecursiveType_Valid_7:string:read (%3)
  looping thru 0 args of 3:RecursiveType_Valid_7:string:decl name
  looping thru 1 args of 7:int:read (%0)
  looping thru 0 args of 0:int:decl offset
  looping thru 1 args of 8:int:read (%1)
  looping thru 0 args of 1:int:decl op
  looping thru 1 args of 9:RecursiveType_Valid_7:class_t:read (%2)
  looping thru 0 args of 2:RecursiveType_Valid_7:class_t:decl owner
  looping thru 1 args of 10:RecursiveType_Valid_7:fun_t:read (%4)
  looping thru 0 args of 4:RecursiveType_Valid_7:fun_t:decl type
checking: 11:{RecursiveType_Valid_7:string name,int offset,int op,RecursiveType_Valid_7:class_t owner,RecursiveType_Valid_7:jvm_t type}:recinit (%6, %7, %8, %9, %10)
  looping thru 5 args of 11:{RecursiveType_Valid_7:string name,int offset,int op,RecursiveType_Valid_7:class_t owner,RecursiveType_Valid_7:jvm_t type}:recinit (%6, %7, %8, %9, %10)
  looping thru 1 args of 6:RecursiveType_Valid_7:string:read (%3)
  looping thru 0 args of 3:RecursiveType_Valid_7:string:decl name
  looping thru 1 args of 7:int:read (%0)
  looping thru 0 args of 0:int:decl offset
  looping thru 1 args of 8:int:read (%1)
  looping thru 0 args of 1:int:decl op
  looping thru 1 args of 9:RecursiveType_Valid_7:class_t:read (%2)
  looping thru 0 args of 2:RecursiveType_Valid_7:class_t:decl owner
  looping thru 1 args of 10:RecursiveType_Valid_7:jvm_t:read (%4)
  looping thru 0 args of 4:RecursiveType_Valid_7:jvm_t:decl type
checking: 7:{int index,int offset,int op}:recinit (%4, %5, %6)
  looping thru 3 args of 7:{int index,int offset,int op}:recinit (%4, %5, %6)
  looping thru 1 args of 4:int:read (%2)
  looping thru 0 args of 2:int:decl index
  looping thru 1 args of 5:int:read (%0)
  looping thru 0 args of 0:int:decl offset
  looping thru 1 args of 6:int:read (%1)
  looping thru 0 args of 1:int:decl op
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:RecursiveType_Valid_7:Bytecode:read (%0)
  looping thru 0 args of 0:RecursiveType_Valid_7:Bytecode:decl b
  looping thru 0 args of 3:type:const RecursiveType_Valid_7:MethodIndex
checking: 10:int[]:arridx (%7, %9)
conjecture: 0 <= toInt(toRecord(b)[$op]) && toInt(toRecord(b)[$op]) < arraylen(fromArray(arrayconst(fromArray(arrayconst(fromInt(110))[1 := fromInt(111)][2 := fromInt(112)], 3))[1 := fromArray(arrayconst(fromInt(97))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(110)][8 := fromInt(117)][9 := fromInt(108)][10 := fromInt(108)], 11)][2 := fromArray(arrayconst(fromInt(105))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(109)][8 := fromInt(49)], 9)][3 := fromArray(arrayconst(fromInt(105))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(48)], 8)][4 := fromArray(arrayconst(fromInt(105))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(49)], 8)][5 := fromArray(arrayconst(fromInt(105))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(50)], 8)][6 := fromArray(arrayconst(fromInt(105))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(51)], 8)][7 := fromArray(arrayconst(fromInt(105))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(52)], 8)][8 := fromArray(arrayconst(fromInt(105))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(53)], 8)][9 := fromArray(arrayconst(fromInt(108))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(48)], 8)][10 := fromArray(arrayconst(fromInt(108))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(49)], 8)][11 := fromArray(arrayconst(fromInt(102))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(48)], 8)][12 := fromArray(arrayconst(fromInt(102))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(49)], 8)][13 := fromArray(arrayconst(fromInt(102))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(50)], 8)][14 := fromArray(arrayconst(fromInt(100))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(48)], 8)][15 := fromArray(arrayconst(fromInt(100))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(49)], 8)][16 := fromArray(arrayconst(fromInt(98))[1 := fromInt(105)][2 := fromInt(112)][3 := fromInt(117)][4 := fromInt(115)][5 := fromInt(104)], 6)][17 := fromArray(arrayconst(fromInt(115))[1 := fromInt(105)][2 := fromInt(112)][3 := fromInt(117)][4 := fromInt(115)][5 := fromInt(104)], 6)][18 := fromArray(arrayconst(fromInt(108))[1 := fromInt(100)][2 := fromInt(99)], 3)][19 := fromArray(arrayconst(fromInt(108))[1 := fromInt(100)][2 := fromInt(99)][3 := fromInt(95)][4 := fromInt(119)], 5)][20 := fromArray(arrayconst(fromInt(108))[1 := fromInt(100)][2 := fromInt(99)][3 := fromInt(50)][4 := fromInt(95)][5 := fromInt(119)], 6)][21 := fromArray(arrayconst(fromInt(105))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)], 5)][22 := fromArray(arrayconst(fromInt(108))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)], 5)][23 := fromArray(arrayconst(fromInt(102))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)], 5)][24 := fromArray(arrayconst(fromInt(100))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)], 5)][25 := fromArray(arrayconst(fromInt(97))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)], 5)][26 := fromArray(arrayconst(fromInt(105))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(48)], 7)][27 := fromArray(arrayconst(fromInt(105))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(49)], 7)][28 := fromArray(arrayconst(fromInt(105))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(50)], 7)][29 := fromArray(arrayconst(fromInt(105))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(51)], 7)][30 := fromArray(arrayconst(fromInt(108))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(48)], 7)][31 := fromArray(arrayconst(fromInt(108))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(49)], 7)][32 := fromArray(arrayconst(fromInt(108))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(50)], 7)][33 := fromArray(arrayconst(fromInt(108))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(51)], 7)][34 := fromArray(arrayconst(fromInt(102))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(48)], 7)][35 := fromArray(arrayconst(fromInt(102))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(49)], 7)][36 := fromArray(arrayconst(fromInt(102))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(50)], 7)][37 := fromArray(arrayconst(fromInt(102))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(51)], 7)][38 := fromArray(arrayconst(fromInt(100))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(48)], 7)][39 := fromArray(arrayconst(fromInt(100))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(49)], 7)][40 := fromArray(arrayconst(fromInt(100))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(50)], 7)][41 := fromArray(arrayconst(fromInt(100))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(51)], 7)][42 := fromArray(arrayconst(fromInt(97))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(48)], 7)][43 := fromArray(arrayconst(fromInt(97))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(49)], 7)][44 := fromArray(arrayconst(fromInt(97))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(50)], 7)][45 := fromArray(arrayconst(fromInt(97))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(51)], 7)][46 := fromArray(arrayconst(fromInt(105))[1 := fromInt(97)][2 := fromInt(108)][3 := fromInt(111)][4 := fromInt(97)][5 := fromInt(100)], 6)][47 := fromArray(arrayconst(fromInt(108))[1 := fromInt(97)][2 := fromInt(108)][3 := fromInt(111)][4 := fromInt(97)][5 := fromInt(100)], 6)][48 := fromArray(arrayconst(fromInt(102))[1 := fromInt(97)][2 := fromInt(108)][3 := fromInt(111)][4 := fromInt(97)][5 := fromInt(100)], 6)][49 := fromArray(arrayconst(fromInt(100))[1 := fromInt(97)][2 := fromInt(108)][3 := fromInt(111)][4 := fromInt(97)][5 := fromInt(100)], 6)][50 := fromArray(arrayconst(fromInt(97))[1 := fromInt(97)][2 := fromInt(108)][3 := fromInt(111)][4 := fromInt(97)][5 := fromInt(100)], 6)][51 := fromArray(arrayconst(fromInt(98))[1 := fromInt(97)][2 := fromInt(108)][3 := fromInt(111)][4 := fromInt(97)][5 := fromInt(100)], 6)][52 := fromArray(arrayconst(fromInt(99))[1 := fromInt(97)][2 := fromInt(108)][3 := fromInt(111)][4 := fromInt(97)][5 := fromInt(100)], 6)][53 := fromArray(arrayconst(fromInt(115))[1 := fromInt(97)][2 := fromInt(108)][3 := fromInt(111)][4 := fromInt(97)][5 := fromInt(100)], 6)][54 := fromArray(arrayconst(fromInt(105))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)], 6)][55 := fromArray(arrayconst(fromInt(108))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)], 6)][56 := fromArray(arrayconst(fromInt(102))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)], 6)][57 := fromArray(arrayconst(fromInt(100))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)], 6)][58 := fromArray(arrayconst(fromInt(97))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)], 6)][59 := fromArray(arrayconst(fromInt(105))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(48)], 8)][60 := fromArray(arrayconst(fromInt(105))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(49)], 8)][61 := fromArray(arrayconst(fromInt(105))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(50)], 8)][62 := fromArray(arrayconst(fromInt(105))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(51)], 8)][63 := fromArray(arrayconst(fromInt(108))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(48)], 8)][64 := fromArray(arrayconst(fromInt(108))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(49)], 8)][65 := fromArray(arrayconst(fromInt(108))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(50)], 8)][66 := fromArray(arrayconst(fromInt(108))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(51)], 8)][67 := fromArray(arrayconst(fromInt(102))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(48)], 8)][68 := fromArray(arrayconst(fromInt(102))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(49)], 8)][69 := fromArray(arrayconst(fromInt(102))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(50)], 8)][70 := fromArray(arrayconst(fromInt(102))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(51)], 8)][71 := fromArray(arrayconst(fromInt(100))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(48)], 8)][72 := fromArray(arrayconst(fromInt(100))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(49)], 8)][73 := fromArray(arrayconst(fromInt(100))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(50)], 8)][74 := fromArray(arrayconst(fromInt(100))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(51)], 8)][75 := fromArray(arrayconst(fromInt(97))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(48)], 8)][76 := fromArray(arrayconst(fromInt(97))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(49)], 8)][77 := fromArray(arrayconst(fromInt(97))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(50)], 8)][78 := fromArray(arrayconst(fromInt(97))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(51)], 8)][79 := fromArray(arrayconst(fromInt(105))[1 := fromInt(97)][2 := fromInt(115)][3 := fromInt(116)][4 := fromInt(111)][5 := fromInt(114)][6 := fromInt(101)], 7)][80 := fromArray(arrayconst(fromInt(108))[1 := fromInt(97)][2 := fromInt(115)][3 := fromInt(116)][4 := fromInt(111)][5 := fromInt(114)][6 := fromInt(101)], 7)][81 := fromArray(arrayconst(fromInt(102))[1 := fromInt(97)][2 := fromInt(115)][3 := fromInt(116)][4 := fromInt(111)][5 := fromInt(114)][6 := fromInt(101)], 7)][82 := fromArray(arrayconst(fromInt(100))[1 := fromInt(97)][2 := fromInt(115)][3 := fromInt(116)][4 := fromInt(111)][5 := fromInt(114)][6 := fromInt(101)], 7)][83 := fromArray(arrayconst(fromInt(97))[1 := fromInt(97)][2 := fromInt(115)][3 := fromInt(116)][4 := fromInt(111)][5 := fromInt(114)][6 := fromInt(101)], 7)][84 := fromArray(arrayconst(fromInt(98))[1 := fromInt(97)][2 := fromInt(115)][3 := fromInt(116)][4 := fromInt(111)][5 := fromInt(114)][6 := fromInt(101)], 7)][85 := fromArray(arrayconst(fromInt(99))[1 := fromInt(97)][2 := fromInt(115)][3 := fromInt(116)][4 := fromInt(111)][5 := fromInt(114)][6 := fromInt(101)], 7)][86 := fromArray(arrayconst(fromInt(115))[1 := fromInt(97)][2 := fromInt(115)][3 := fromInt(116)][4 := fromInt(111)][5 := fromInt(114)][6 := fromInt(101)], 7)][87 := fromArray(arrayconst(fromInt(112))[1 := fromInt(111)][2 := fromInt(112)], 3)][88 := fromArray(arrayconst(fromInt(112))[1 := fromInt(111)][2 := fromInt(112)][3 := fromInt(50)], 4)][89 := fromArray(arrayconst(fromInt(100))[1 := fromInt(117)][2 := fromInt(112)], 3)][90 := fromArray(arrayconst(fromInt(100))[1 := fromInt(117)][2 := fromInt(112)][3 := fromInt(95)][4 := fromInt(120)][5 := fromInt(49)], 6)][91 := fromArray(arrayconst(fromInt(100))[1 := fromInt(117)][2 := fromInt(112)][3 := fromInt(95)][4 := fromInt(120)][5 := fromInt(50)], 6)][92 := fromArray(arrayconst(fromInt(100))[1 := fromInt(117)][2 := fromInt(112)][3 := fromInt(50)], 4)][93 := fromArray(arrayconst(fromInt(100))[1 := fromInt(117)][2 := fromInt(112)][3 := fromInt(50)][4 := fromInt(95)][5 := fromInt(120)][6 := fromInt(49)], 7)][94 := fromArray(arrayconst(fromInt(100))[1 := fromInt(117)][2 := fromInt(112)][3 := fromInt(50)][4 := fromInt(95)][5 := fromInt(120)][6 := fromInt(50)], 7)][95 := fromArray(arrayconst(fromInt(115))[1 := fromInt(119)][2 := fromInt(97)][3 := fromInt(112)], 4)][96 := fromArray(arrayconst(fromInt(105))[1 := fromInt(97)][2 := fromInt(100)][3 := fromInt(100)], 4)][97 := fromArray(arrayconst(fromInt(108))[1 := fromInt(97)][2 := fromInt(100)][3 := fromInt(100)], 4)][98 := fromArray(arrayconst(fromInt(102))[1 := fromInt(97)][2 := fromInt(100)][3 := fromInt(100)], 4)][99 := fromArray(arrayconst(fromInt(100))[1 := fromInt(97)][2 := fromInt(100)][3 := fromInt(100)], 4)][100 := fromArray(arrayconst(fromInt(105))[1 := fromInt(115)][2 := fromInt(117)][3 := fromInt(98)], 4)][101 := fromArray(arrayconst(fromInt(108))[1 := fromInt(115)][2 := fromInt(117)][3 := fromInt(98)], 4)][102 := fromArray(arrayconst(fromInt(102))[1 := fromInt(115)][2 := fromInt(117)][3 := fromInt(98)], 4)][103 := fromArray(arrayconst(fromInt(100))[1 := fromInt(115)][2 := fromInt(117)][3 := fromInt(98)], 4)][104 := fromArray(arrayconst(fromInt(105))[1 := fromInt(109)][2 := fromInt(117)][3 := fromInt(108)], 4)][105 := fromArray(arrayconst(fromInt(108))[1 := fromInt(109)][2 := fromInt(117)][3 := fromInt(108)], 4)][106 := fromArray(arrayconst(fromInt(102))[1 := fromInt(109)][2 := fromInt(117)][3 := fromInt(108)], 4)][107 := fromArray(arrayconst(fromInt(100))[1 := fromInt(109)][2 := fromInt(117)][3 := fromInt(108)], 4)][108 := fromArray(arrayconst(fromInt(105))[1 := fromInt(100)][2 := fromInt(105)][3 := fromInt(118)], 4)][109 := fromArray(arrayconst(fromInt(108))[1 := fromInt(100)][2 := fromInt(105)][3 := fromInt(118)], 4)][110 := fromArray(arrayconst(fromInt(102))[1 := fromInt(100)][2 := fromInt(105)][3 := fromInt(118)], 4)][111 := fromArray(arrayconst(fromInt(100))[1 := fromInt(100)][2 := fromInt(105)][3 := fromInt(118)], 4)][112 := fromArray(arrayconst(fromInt(105))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(109)], 4)][113 := fromArray(arrayconst(fromInt(108))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(109)], 4)][114 := fromArray(arrayconst(fromInt(102))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(109)], 4)][115 := fromArray(arrayconst(fromInt(100))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(109)], 4)][116 := fromArray(arrayconst(fromInt(105))[1 := fromInt(110)][2 := fromInt(101)][3 := fromInt(103)], 4)][117 := fromArray(arrayconst(fromInt(108))[1 := fromInt(110)][2 := fromInt(101)][3 := fromInt(103)], 4)][118 := fromArray(arrayconst(fromInt(102))[1 := fromInt(110)][2 := fromInt(101)][3 := fromInt(103)], 4)][119 := fromArray(arrayconst(fromInt(100))[1 := fromInt(110)][2 := fromInt(101)][3 := fromInt(103)], 4)][120 := fromArray(arrayconst(fromInt(105))[1 := fromInt(115)][2 := fromInt(104)][3 := fromInt(108)], 4)][121 := fromArray(arrayconst(fromInt(108))[1 := fromInt(115)][2 := fromInt(104)][3 := fromInt(108)], 4)][122 := fromArray(arrayconst(fromInt(105))[1 := fromInt(115)][2 := fromInt(104)][3 := fromInt(114)], 4)][123 := fromArray(arrayconst(fromInt(108))[1 := fromInt(115)][2 := fromInt(104)][3 := fromInt(114)], 4)][124 := fromArray(arrayconst(fromInt(105))[1 := fromInt(117)][2 := fromInt(115)][3 := fromInt(104)][4 := fromInt(114)], 5)][125 := fromArray(arrayconst(fromInt(108))[1 := fromInt(117)][2 := fromInt(115)][3 := fromInt(104)][4 := fromInt(114)], 5)][126 := fromArray(arrayconst(fromInt(105))[1 := fromInt(97)][2 := fromInt(110)][3 := fromInt(100)], 4)][127 := fromArray(arrayconst(fromInt(108))[1 := fromInt(97)][2 := fromInt(110)][3 := fromInt(100)], 4)][128 := fromArray(arrayconst(fromInt(105))[1 := fromInt(111)][2 := fromInt(114)], 3)][129 := fromArray(arrayconst(fromInt(108))[1 := fromInt(111)][2 := fromInt(114)], 3)][130 := fromArray(arrayconst(fromInt(105))[1 := fromInt(120)][2 := fromInt(111)][3 := fromInt(114)], 4)][131 := fromArray(arrayconst(fromInt(108))[1 := fromInt(120)][2 := fromInt(111)][3 := fromInt(114)], 4)][132 := fromArray(arrayconst(fromInt(105))[1 := fromInt(105)][2 := fromInt(110)][3 := fromInt(99)], 4)][133 := fromArray(arrayconst(fromInt(105))[1 := fromInt(50)][2 := fromInt(108)], 3)][134 := fromArray(arrayconst(fromInt(105))[1 := fromInt(50)][2 := fromInt(102)], 3)][135 := fromArray(arrayconst(fromInt(105))[1 := fromInt(50)][2 := fromInt(100)], 3)][136 := fromArray(arrayconst(fromInt(108))[1 := fromInt(50)][2 := fromInt(105)], 3)][137 := fromArray(arrayconst(fromInt(108))[1 := fromInt(50)][2 := fromInt(102)], 3)][138 := fromArray(arrayconst(fromInt(108))[1 := fromInt(50)][2 := fromInt(100)], 3)][139 := fromArray(arrayconst(fromInt(102))[1 := fromInt(50)][2 := fromInt(105)], 3)][140 := fromArray(arrayconst(fromInt(102))[1 := fromInt(50)][2 := fromInt(108)], 3)][141 := fromArray(arrayconst(fromInt(102))[1 := fromInt(50)][2 := fromInt(100)], 3)][142 := fromArray(arrayconst(fromInt(100))[1 := fromInt(50)][2 := fromInt(105)], 3)][143 := fromArray(arrayconst(fromInt(100))[1 := fromInt(50)][2 := fromInt(108)], 3)][144 := fromArray(arrayconst(fromInt(100))[1 := fromInt(50)][2 := fromInt(102)], 3)][145 := fromArray(arrayconst(fromInt(105))[1 := fromInt(50)][2 := fromInt(98)], 3)][146 := fromArray(arrayconst(fromInt(105))[1 := fromInt(50)][2 := fromInt(99)], 3)][147 := fromArray(arrayconst(fromInt(105))[1 := fromInt(50)][2 := fromInt(115)], 3)][148 := fromArray(arrayconst(fromInt(108))[1 := fromInt(99)][2 := fromInt(109)][3 := fromInt(112)], 4)][149 := fromArray(arrayconst(fromInt(102))[1 := fromInt(99)][2 := fromInt(109)][3 := fromInt(112)][4 := fromInt(108)], 5)][150 := fromArray(arrayconst(fromInt(102))[1 := fromInt(99)][2 := fromInt(109)][3 := fromInt(112)][4 := fromInt(103)], 5)][151 := fromArray(arrayconst(fromInt(100))[1 := fromInt(99)][2 := fromInt(109)][3 := fromInt(112)][4 := fromInt(108)], 5)][152 := fromArray(arrayconst(fromInt(100))[1 := fromInt(99)][2 := fromInt(109)][3 := fromInt(112)][4 := fromInt(103)], 5)][153 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(101)][3 := fromInt(113)], 4)][154 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(110)][3 := fromInt(101)], 4)][155 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(108)][3 := fromInt(116)], 4)][156 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(103)][3 := fromInt(101)], 4)][157 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(103)][3 := fromInt(116)], 4)][158 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(108)][3 := fromInt(101)], 4)][159 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(95)][3 := fromInt(105)][4 := fromInt(99)][5 := fromInt(109)][6 := fromInt(112)][7 := fromInt(101)][8 := fromInt(113)], 9)][160 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(95)][3 := fromInt(105)][4 := fromInt(99)][5 := fromInt(109)][6 := fromInt(112)][7 := fromInt(110)][8 := fromInt(101)], 9)][161 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(95)][3 := fromInt(105)][4 := fromInt(99)][5 := fromInt(109)][6 := fromInt(112)][7 := fromInt(108)][8 := fromInt(116)], 9)][162 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(95)][3 := fromInt(105)][4 := fromInt(99)][5 := fromInt(109)][6 := fromInt(112)][7 := fromInt(103)][8 := fromInt(101)], 9)][163 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(95)][3 := fromInt(105)][4 := fromInt(99)][5 := fromInt(109)][6 := fromInt(112)][7 := fromInt(103)][8 := fromInt(116)], 9)][164 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(95)][3 := fromInt(105)][4 := fromInt(99)][5 := fromInt(109)][6 := fromInt(112)][7 := fromInt(108)][8 := fromInt(101)], 9)][165 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(95)][3 := fromInt(97)][4 := fromInt(99)][5 := fromInt(109)][6 := fromInt(112)][7 := fromInt(101)][8 := fromInt(113)], 9)][166 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(95)][3 := fromInt(97)][4 := fromInt(99)][5 := fromInt(109)][6 := fromInt(112)][7 := fromInt(110)][8 := fromInt(101)], 9)][167 := fromArray(arrayconst(fromInt(103))[1 := fromInt(111)][2 := fromInt(116)][3 := fromInt(111)], 4)][168 := fromArray(arrayconst(fromInt(106))[1 := fromInt(115)][2 := fromInt(114)], 3)][169 := fromArray(arrayconst(fromInt(114))[1 := fromInt(101)][2 := fromInt(116)], 3)][170 := fromArray(arrayconst(fromInt(116))[1 := fromInt(97)][2 := fromInt(98)][3 := fromInt(108)][4 := fromInt(101)][5 := fromInt(115)][6 := fromInt(119)][7 := fromInt(105)][8 := fromInt(116)][9 := fromInt(99)][10 := fromInt(104)], 11)][171 := fromArray(arrayconst(fromInt(108))[1 := fromInt(111)][2 := fromInt(111)][3 := fromInt(107)][4 := fromInt(117)][5 := fromInt(112)][6 := fromInt(115)][7 := fromInt(119)][8 := fromInt(105)][9 := fromInt(116)][10 := fromInt(99)][11 := fromInt(104)], 12)][172 := fromArray(arrayconst(fromInt(105))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(116)][4 := fromInt(117)][5 := fromInt(114)][6 := fromInt(110)], 7)][173 := fromArray(arrayconst(fromInt(108))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(116)][4 := fromInt(117)][5 := fromInt(114)][6 := fromInt(110)], 7)][174 := fromArray(arrayconst(fromInt(102))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(116)][4 := fromInt(117)][5 := fromInt(114)][6 := fromInt(110)], 7)][175 := fromArray(arrayconst(fromInt(100))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(116)][4 := fromInt(117)][5 := fromInt(114)][6 := fromInt(110)], 7)][176 := fromArray(arrayconst(fromInt(97))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(116)][4 := fromInt(117)][5 := fromInt(114)][6 := fromInt(110)], 7)][177 := fromArray(arrayconst(fromInt(114))[1 := fromInt(101)][2 := fromInt(116)][3 := fromInt(117)][4 := fromInt(114)][5 := fromInt(110)], 6)][178 := fromArray(arrayconst(fromInt(103))[1 := fromInt(101)][2 := fromInt(116)][3 := fromInt(115)][4 := fromInt(116)][5 := fromInt(97)][6 := fromInt(116)][7 := fromInt(105)][8 := fromInt(99)], 9)][179 := fromArray(arrayconst(fromInt(112))[1 := fromInt(117)][2 := fromInt(116)][3 := fromInt(115)][4 := fromInt(116)][5 := fromInt(97)][6 := fromInt(116)][7 := fromInt(105)][8 := fromInt(99)], 9)][180 := fromArray(arrayconst(fromInt(103))[1 := fromInt(101)][2 := fromInt(116)][3 := fromInt(102)][4 := fromInt(105)][5 := fromInt(101)][6 := fromInt(108)][7 := fromInt(100)], 8)][181 := fromArray(arrayconst(fromInt(112))[1 := fromInt(117)][2 := fromInt(116)][3 := fromInt(102)][4 := fromInt(105)][5 := fromInt(101)][6 := fromInt(108)][7 := fromInt(100)], 8)][182 := fromArray(arrayconst(fromInt(105))[1 := fromInt(110)][2 := fromInt(118)][3 := fromInt(111)][4 := fromInt(107)][5 := fromInt(101)][6 := fromInt(118)][7 := fromInt(105)][8 := fromInt(114)][9 := fromInt(116)][10 := fromInt(117)][11 := fromInt(97)][12 := fromInt(108)], 13)][183 := fromArray(arrayconst(fromInt(105))[1 := fromInt(110)][2 := fromInt(118)][3 := fromInt(111)][4 := fromInt(107)][5 := fromInt(101)][6 := fromInt(115)][7 := fromInt(112)][8 := fromInt(101)][9 := fromInt(99)][10 := fromInt(105)][11 := fromInt(97)][12 := fromInt(108)], 13)][184 := fromArray(arrayconst(fromInt(105))[1 := fromInt(110)][2 := fromInt(118)][3 := fromInt(111)][4 := fromInt(107)][5 := fromInt(101)][6 := fromInt(115)][7 := fromInt(116)][8 := fromInt(97)][9 := fromInt(116)][10 := fromInt(105)][11 := fromInt(99)], 12)][185 := fromArray(arrayconst(fromInt(105))[1 := fromInt(110)][2 := fromInt(118)][3 := fromInt(111)][4 := fromInt(107)][5 := fromInt(101)][6 := fromInt(101)][7 := fromInt(114)][8 := fromInt(102)][9 := fromInt(97)][10 := fromInt(99)][11 := fromInt(101)], 12)][186 := fromArray(arrayconst(fromInt(117))[1 := fromInt(110)][2 := fromInt(117)][3 := fromInt(115)][4 := fromInt(101)][5 := fromInt(100)], 6)][187 := fromArray(arrayconst(fromInt(110))[1 := fromInt(101)][2 := fromInt(119)], 3)][188 := fromArray(arrayconst(fromInt(110))[1 := fromInt(101)][2 := fromInt(119)][3 := fromInt(97)][4 := fromInt(114)][5 := fromInt(114)][6 := fromInt(97)][7 := fromInt(121)], 8)][189 := fromArray(arrayconst(fromInt(97))[1 := fromInt(110)][2 := fromInt(101)][3 := fromInt(119)][4 := fromInt(97)][5 := fromInt(114)][6 := fromInt(114)][7 := fromInt(97)][8 := fromInt(121)], 9)][190 := fromArray(arrayconst(fromInt(97))[1 := fromInt(114)][2 := fromInt(114)][3 := fromInt(97)][4 := fromInt(121)][5 := fromInt(108)][6 := fromInt(101)][7 := fromInt(110)][8 := fromInt(103)][9 := fromInt(116)][10 := fromInt(104)], 11)][191 := fromArray(arrayconst(fromInt(97))[1 := fromInt(116)][2 := fromInt(104)][3 := fromInt(114)][4 := fromInt(111)][5 := fromInt(119)], 6)][192 := fromArray(arrayconst(fromInt(99))[1 := fromInt(104)][2 := fromInt(101)][3 := fromInt(99)][4 := fromInt(107)][5 := fromInt(99)][6 := fromInt(97)][7 := fromInt(115)][8 := fromInt(116)], 9)][193 := fromArray(arrayconst(fromInt(105))[1 := fromInt(110)][2 := fromInt(115)][3 := fromInt(116)][4 := fromInt(97)][5 := fromInt(110)][6 := fromInt(99)][7 := fromInt(101)][8 := fromInt(111)][9 := fromInt(102)], 10)][194 := fromArray(arrayconst(fromInt(109))[1 := fromInt(111)][2 := fromInt(110)][3 := fromInt(105)][4 := fromInt(116)][5 := fromInt(111)][6 := fromInt(114)][7 := fromInt(101)][8 := fromInt(110)][9 := fromInt(116)][10 := fromInt(101)][11 := fromInt(114)], 12)][195 := fromArray(arrayconst(fromInt(109))[1 := fromInt(111)][2 := fromInt(110)][3 := fromInt(105)][4 := fromInt(116)][5 := fromInt(111)][6 := fromInt(114)][7 := fromInt(101)][8 := fromInt(120)][9 := fromInt(105)][10 := fromInt(116)], 11)][196 := fromArray(arrayconst(fromInt(119))[1 := fromInt(105)][2 := fromInt(100)][3 := fromInt(101)], 4)][197 := fromArray(arrayconst(fromInt(109))[1 := fromInt(117)][2 := fromInt(108)][3 := fromInt(116)][4 := fromInt(105)][5 := fromInt(97)][6 := fromInt(110)][7 := fromInt(101)][8 := fromInt(119)][9 := fromInt(97)][10 := fromInt(114)][11 := fromInt(114)][12 := fromInt(97)][13 := fromInt(121)], 14)][198 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(110)][3 := fromInt(117)][4 := fromInt(108)][5 := fromInt(108)], 6)][199 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(110)][3 := fromInt(111)][4 := fromInt(110)][5 := fromInt(110)][6 := fromInt(117)][7 := fromInt(108)][8 := fromInt(108)], 9)][200 := fromArray(arrayconst(fromInt(103))[1 := fromInt(111)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(95)][5 := fromInt(119)], 6)][201 := fromArray(arrayconst(fromInt(106))[1 := fromInt(115)][2 := fromInt(114)][3 := fromInt(95)][4 := fromInt(119)], 5)][202 := fromArray(arrayconst(fromInt(98))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(97)][4 := fromInt(107)][5 := fromInt(112)][6 := fromInt(111)], 7)][203 := fromArray(arrayconst(fromInt(105))[1 := fromInt(109)][2 := fromInt(112)][3 := fromInt(100)][4 := fromInt(101)][5 := fromInt(112)][6 := fromInt(49)], 7)][204 := fromArray(arrayconst(fromInt(105))[1 := fromInt(109)][2 := fromInt(112)][3 := fromInt(100)][4 := fromInt(101)][5 := fromInt(112)][6 := fromInt(50)], 7)], 205))
  looping thru 2 args of 10:int[]:arridx (%7, %9)
  looping thru 0 args of 7:int[][]:const [[110,111,112],[97,99,111,110,115,116,95,110,117,108,108],[105,99,111,110,115,116,95,109,49],[105,99,111,110,115,116,95,48],[105,99,111,110,115,116,95,49],[105,99,111,110,115,116,95,50],[105,99,111,110,115,116,95,51],[105,99,111,110,115,116,95,52],[105,99,111,110,115,116,95,53],[108,99,111,110,115,116,95,48],[108,99,111,110,115,116,95,49],[102,99,111,110,115,116,95,48],[102,99,111,110,115,116,95,49],[102,99,111,110,115,116,95,50],[100,99,111,110,115,116,95,48],[100,99,111,110,115,116,95,49],[98,105,112,117,115,104],[115,105,112,117,115,104],[108,100,99],[108,100,99,95,119],[108,100,99,50,95,119],[105,108,111,97,100],[108,108,111,97,100],[102,108,111,97,100],[100,108,111,97,100],[97,108,111,97,100],[105,108,111,97,100,95,48],[105,108,111,97,100,95,49],[105,108,111,97,100,95,50],[105,108,111,97,100,95,51],[108,108,111,97,100,95,48],[108,108,111,97,100,95,49],[108,108,111,97,100,95,50],[108,108,111,97,100,95,51],[102,108,111,97,100,95,48],[102,108,111,97,100,95,49],[102,108,111,97,100,95,50],[102,108,111,97,100,95,51],[100,108,111,97,100,95,48],[100,108,111,97,100,95,49],[100,108,111,97,100,95,50],[100,108,111,97,100,95,51],[97,108,111,97,100,95,48],[97,108,111,97,100,95,49],[97,108,111,97,100,95,50],[97,108,111,97,100,95,51],[105,97,108,111,97,100],[108,97,108,111,97,100],[102,97,108,111,97,100],[100,97,108,111,97,100],[97,97,108,111,97,100],[98,97,108,111,97,100],[99,97,108,111,97,100],[115,97,108,111,97,100],[105,115,116,111,114,101],[108,115,116,111,114,101],[102,115,116,111,114,101],[100,115,116,111,114,101],[97,115,116,111,114,101],[105,115,116,111,114,101,95,48],[105,115,116,111,114,101,95,49],[105,115,116,111,114,101,95,50],[105,115,116,111,114,101,95,51],[108,115,116,111,114,101,95,48],[108,115,116,111,114,101,95,49],[108,115,116,111,114,101,95,50],[108,115,116,111,114,101,95,51],[102,115,116,111,114,101,95,48],[102,115,116,111,114,101,95,49],[102,115,116,111,114,101,95,50],[102,115,116,111,114,101,95,51],[100,115,116,111,114,101,95,48],[100,115,116,111,114,101,95,49],[100,115,116,111,114,101,95,50],[100,115,116,111,114,101,95,51],[97,115,116,111,114,101,95,48],[97,115,116,111,114,101,95,49],[97,115,116,111,114,101,95,50],[97,115,116,111,114,101,95,51],[105,97,115,116,111,114,101],[108,97,115,116,111,114,101],[102,97,115,116,111,114,101],[100,97,115,116,111,114,101],[97,97,115,116,111,114,101],[98,97,115,116,111,114,101],[99,97,115,116,111,114,101],[115,97,115,116,111,114,101],[112,111,112],[112,111,112,50],[100,117,112],[100,117,112,95,120,49],[100,117,112,95,120,50],[100,117,112,50],[100,117,112,50,95,120,49],[100,117,112,50,95,120,50],[115,119,97,112],[105,97,100,100],[108,97,100,100],[102,97,100,100],[100,97,100,100],[105,115,117,98],[108,115,117,98],[102,115,117,98],[100,115,117,98],[105,109,117,108],[108,109,117,108],[102,109,117,108],[100,109,117,108],[105,100,105,118],[108,100,105,118],[102,100,105,118],[100,100,105,118],[105,114,101,109],[108,114,101,109],[102,114,101,109],[100,114,101,109],[105,110,101,103],[108,110,101,103],[102,110,101,103],[100,110,101,103],[105,115,104,108],[108,115,104,108],[105,115,104,114],[108,115,104,114],[105,117,115,104,114],[108,117,115,104,114],[105,97,110,100],[108,97,110,100],[105,111,114],[108,111,114],[105,120,111,114],[108,120,111,114],[105,105,110,99],[105,50,108],[105,50,102],[105,50,100],[108,50,105],[108,50,102],[108,50,100],[102,50,105],[102,50,108],[102,50,100],[100,50,105],[100,50,108],[100,50,102],[105,50,98],[105,50,99],[105,50,115],[108,99,109,112],[102,99,109,112,108],[102,99,109,112,103],[100,99,109,112,108],[100,99,109,112,103],[105,102,101,113],[105,102,110,101],[105,102,108,116],[105,102,103,101],[105,102,103,116],[105,102,108,101],[105,102,95,105,99,109,112,101,113],[105,102,95,105,99,109,112,110,101],[105,102,95,105,99,109,112,108,116],[105,102,95,105,99,109,112,103,101],[105,102,95,105,99,109,112,103,116],[105,102,95,105,99,109,112,108,101],[105,102,95,97,99,109,112,101,113],[105,102,95,97,99,109,112,110,101],[103,111,116,111],[106,115,114],[114,101,116],[116,97,98,108,101,115,119,105,116,99,104],[108,111,111,107,117,112,115,119,105,116,99,104],[105,114,101,116,117,114,110],[108,114,101,116,117,114,110],[102,114,101,116,117,114,110],[100,114,101,116,117,114,110],[97,114,101,116,117,114,110],[114,101,116,117,114,110],[103,101,116,115,116,97,116,105,99],[112,117,116,115,116,97,116,105,99],[103,101,116,102,105,101,108,100],[112,117,116,102,105,101,108,100],[105,110,118,111,107,101,118,105,114,116,117,97,108],[105,110,118,111,107,101,115,112,101,99,105,97,108],[105,110,118,111,107,101,115,116,97,116,105,99],[105,110,118,111,107,101,101,114,102,97,99,101],[117,110,117,115,101,100],[110,101,119],[110,101,119,97,114,114,97,121],[97,110,101,119,97,114,114,97,121],[97,114,114,97,121,108,101,110,103,116,104],[97,116,104,114,111,119],[99,104,101,99,107,99,97,115,116],[105,110,115,116,97,110,99,101,111,102],[109,111,110,105,116,111,114,101,110,116,101,114],[109,111,110,105,116,111,114,101,120,105,116],[119,105,100,101],[109,117,108,116,105,97,110,101,119,97,114,114,97,121],[105,102,110,117,108,108],[105,102,110,111,110,110,117,108,108],[103,111,116,111,95,119],[106,115,114,95,119],[98,114,101,97,107,112,111],[105,109,112,100,101,112,49],[105,109,112,100,101,112,50]]
  looping thru 1 args of 9:int:recfield %8 op
  looping thru 1 args of 8:{int[] name,int offset,int op,{int[][] classes,int[] pkg} owner,{X<int|{int[][] classes,int[] pkg}|{X element}>[] params,X<int|{int[][] classes,int[] pkg}|{X element}> ret} type}:read (%4)
  looping thru 1 args of 4:{int[] name,int offset,int op,{int[][] classes,int[] pkg} owner,{X<int|{int[][] classes,int[] pkg}|{X element}>[] params,X<int|{int[][] classes,int[] pkg}|{X element}> ret} type}:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_7:Bytecode:decl b
checking: 16:int[]:arridx (%13, %15)
conjecture: 0 <= toInt(toRecord(b)[$op]) && toInt(toRecord(b)[$op]) < arraylen(fromArray(arrayconst(fromArray(arrayconst(fromInt(110))[1 := fromInt(111)][2 := fromInt(112)], 3))[1 := fromArray(arrayconst(fromInt(97))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(110)][8 := fromInt(117)][9 := fromInt(108)][10 := fromInt(108)], 11)][2 := fromArray(arrayconst(fromInt(105))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(109)][8 := fromInt(49)], 9)][3 := fromArray(arrayconst(fromInt(105))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(48)], 8)][4 := fromArray(arrayconst(fromInt(105))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(49)], 8)][5 := fromArray(arrayconst(fromInt(105))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(50)], 8)][6 := fromArray(arrayconst(fromInt(105))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(51)], 8)][7 := fromArray(arrayconst(fromInt(105))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(52)], 8)][8 := fromArray(arrayconst(fromInt(105))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(53)], 8)][9 := fromArray(arrayconst(fromInt(108))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(48)], 8)][10 := fromArray(arrayconst(fromInt(108))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(49)], 8)][11 := fromArray(arrayconst(fromInt(102))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(48)], 8)][12 := fromArray(arrayconst(fromInt(102))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(49)], 8)][13 := fromArray(arrayconst(fromInt(102))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(50)], 8)][14 := fromArray(arrayconst(fromInt(100))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(48)], 8)][15 := fromArray(arrayconst(fromInt(100))[1 := fromInt(99)][2 := fromInt(111)][3 := fromInt(110)][4 := fromInt(115)][5 := fromInt(116)][6 := fromInt(95)][7 := fromInt(49)], 8)][16 := fromArray(arrayconst(fromInt(98))[1 := fromInt(105)][2 := fromInt(112)][3 := fromInt(117)][4 := fromInt(115)][5 := fromInt(104)], 6)][17 := fromArray(arrayconst(fromInt(115))[1 := fromInt(105)][2 := fromInt(112)][3 := fromInt(117)][4 := fromInt(115)][5 := fromInt(104)], 6)][18 := fromArray(arrayconst(fromInt(108))[1 := fromInt(100)][2 := fromInt(99)], 3)][19 := fromArray(arrayconst(fromInt(108))[1 := fromInt(100)][2 := fromInt(99)][3 := fromInt(95)][4 := fromInt(119)], 5)][20 := fromArray(arrayconst(fromInt(108))[1 := fromInt(100)][2 := fromInt(99)][3 := fromInt(50)][4 := fromInt(95)][5 := fromInt(119)], 6)][21 := fromArray(arrayconst(fromInt(105))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)], 5)][22 := fromArray(arrayconst(fromInt(108))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)], 5)][23 := fromArray(arrayconst(fromInt(102))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)], 5)][24 := fromArray(arrayconst(fromInt(100))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)], 5)][25 := fromArray(arrayconst(fromInt(97))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)], 5)][26 := fromArray(arrayconst(fromInt(105))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(48)], 7)][27 := fromArray(arrayconst(fromInt(105))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(49)], 7)][28 := fromArray(arrayconst(fromInt(105))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(50)], 7)][29 := fromArray(arrayconst(fromInt(105))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(51)], 7)][30 := fromArray(arrayconst(fromInt(108))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(48)], 7)][31 := fromArray(arrayconst(fromInt(108))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(49)], 7)][32 := fromArray(arrayconst(fromInt(108))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(50)], 7)][33 := fromArray(arrayconst(fromInt(108))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(51)], 7)][34 := fromArray(arrayconst(fromInt(102))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(48)], 7)][35 := fromArray(arrayconst(fromInt(102))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(49)], 7)][36 := fromArray(arrayconst(fromInt(102))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(50)], 7)][37 := fromArray(arrayconst(fromInt(102))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(51)], 7)][38 := fromArray(arrayconst(fromInt(100))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(48)], 7)][39 := fromArray(arrayconst(fromInt(100))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(49)], 7)][40 := fromArray(arrayconst(fromInt(100))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(50)], 7)][41 := fromArray(arrayconst(fromInt(100))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(51)], 7)][42 := fromArray(arrayconst(fromInt(97))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(48)], 7)][43 := fromArray(arrayconst(fromInt(97))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(49)], 7)][44 := fromArray(arrayconst(fromInt(97))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(50)], 7)][45 := fromArray(arrayconst(fromInt(97))[1 := fromInt(108)][2 := fromInt(111)][3 := fromInt(97)][4 := fromInt(100)][5 := fromInt(95)][6 := fromInt(51)], 7)][46 := fromArray(arrayconst(fromInt(105))[1 := fromInt(97)][2 := fromInt(108)][3 := fromInt(111)][4 := fromInt(97)][5 := fromInt(100)], 6)][47 := fromArray(arrayconst(fromInt(108))[1 := fromInt(97)][2 := fromInt(108)][3 := fromInt(111)][4 := fromInt(97)][5 := fromInt(100)], 6)][48 := fromArray(arrayconst(fromInt(102))[1 := fromInt(97)][2 := fromInt(108)][3 := fromInt(111)][4 := fromInt(97)][5 := fromInt(100)], 6)][49 := fromArray(arrayconst(fromInt(100))[1 := fromInt(97)][2 := fromInt(108)][3 := fromInt(111)][4 := fromInt(97)][5 := fromInt(100)], 6)][50 := fromArray(arrayconst(fromInt(97))[1 := fromInt(97)][2 := fromInt(108)][3 := fromInt(111)][4 := fromInt(97)][5 := fromInt(100)], 6)][51 := fromArray(arrayconst(fromInt(98))[1 := fromInt(97)][2 := fromInt(108)][3 := fromInt(111)][4 := fromInt(97)][5 := fromInt(100)], 6)][52 := fromArray(arrayconst(fromInt(99))[1 := fromInt(97)][2 := fromInt(108)][3 := fromInt(111)][4 := fromInt(97)][5 := fromInt(100)], 6)][53 := fromArray(arrayconst(fromInt(115))[1 := fromInt(97)][2 := fromInt(108)][3 := fromInt(111)][4 := fromInt(97)][5 := fromInt(100)], 6)][54 := fromArray(arrayconst(fromInt(105))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)], 6)][55 := fromArray(arrayconst(fromInt(108))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)], 6)][56 := fromArray(arrayconst(fromInt(102))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)], 6)][57 := fromArray(arrayconst(fromInt(100))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)], 6)][58 := fromArray(arrayconst(fromInt(97))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)], 6)][59 := fromArray(arrayconst(fromInt(105))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(48)], 8)][60 := fromArray(arrayconst(fromInt(105))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(49)], 8)][61 := fromArray(arrayconst(fromInt(105))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(50)], 8)][62 := fromArray(arrayconst(fromInt(105))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(51)], 8)][63 := fromArray(arrayconst(fromInt(108))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(48)], 8)][64 := fromArray(arrayconst(fromInt(108))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(49)], 8)][65 := fromArray(arrayconst(fromInt(108))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(50)], 8)][66 := fromArray(arrayconst(fromInt(108))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(51)], 8)][67 := fromArray(arrayconst(fromInt(102))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(48)], 8)][68 := fromArray(arrayconst(fromInt(102))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(49)], 8)][69 := fromArray(arrayconst(fromInt(102))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(50)], 8)][70 := fromArray(arrayconst(fromInt(102))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(51)], 8)][71 := fromArray(arrayconst(fromInt(100))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(48)], 8)][72 := fromArray(arrayconst(fromInt(100))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(49)], 8)][73 := fromArray(arrayconst(fromInt(100))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(50)], 8)][74 := fromArray(arrayconst(fromInt(100))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(51)], 8)][75 := fromArray(arrayconst(fromInt(97))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(48)], 8)][76 := fromArray(arrayconst(fromInt(97))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(49)], 8)][77 := fromArray(arrayconst(fromInt(97))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(50)], 8)][78 := fromArray(arrayconst(fromInt(97))[1 := fromInt(115)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(114)][5 := fromInt(101)][6 := fromInt(95)][7 := fromInt(51)], 8)][79 := fromArray(arrayconst(fromInt(105))[1 := fromInt(97)][2 := fromInt(115)][3 := fromInt(116)][4 := fromInt(111)][5 := fromInt(114)][6 := fromInt(101)], 7)][80 := fromArray(arrayconst(fromInt(108))[1 := fromInt(97)][2 := fromInt(115)][3 := fromInt(116)][4 := fromInt(111)][5 := fromInt(114)][6 := fromInt(101)], 7)][81 := fromArray(arrayconst(fromInt(102))[1 := fromInt(97)][2 := fromInt(115)][3 := fromInt(116)][4 := fromInt(111)][5 := fromInt(114)][6 := fromInt(101)], 7)][82 := fromArray(arrayconst(fromInt(100))[1 := fromInt(97)][2 := fromInt(115)][3 := fromInt(116)][4 := fromInt(111)][5 := fromInt(114)][6 := fromInt(101)], 7)][83 := fromArray(arrayconst(fromInt(97))[1 := fromInt(97)][2 := fromInt(115)][3 := fromInt(116)][4 := fromInt(111)][5 := fromInt(114)][6 := fromInt(101)], 7)][84 := fromArray(arrayconst(fromInt(98))[1 := fromInt(97)][2 := fromInt(115)][3 := fromInt(116)][4 := fromInt(111)][5 := fromInt(114)][6 := fromInt(101)], 7)][85 := fromArray(arrayconst(fromInt(99))[1 := fromInt(97)][2 := fromInt(115)][3 := fromInt(116)][4 := fromInt(111)][5 := fromInt(114)][6 := fromInt(101)], 7)][86 := fromArray(arrayconst(fromInt(115))[1 := fromInt(97)][2 := fromInt(115)][3 := fromInt(116)][4 := fromInt(111)][5 := fromInt(114)][6 := fromInt(101)], 7)][87 := fromArray(arrayconst(fromInt(112))[1 := fromInt(111)][2 := fromInt(112)], 3)][88 := fromArray(arrayconst(fromInt(112))[1 := fromInt(111)][2 := fromInt(112)][3 := fromInt(50)], 4)][89 := fromArray(arrayconst(fromInt(100))[1 := fromInt(117)][2 := fromInt(112)], 3)][90 := fromArray(arrayconst(fromInt(100))[1 := fromInt(117)][2 := fromInt(112)][3 := fromInt(95)][4 := fromInt(120)][5 := fromInt(49)], 6)][91 := fromArray(arrayconst(fromInt(100))[1 := fromInt(117)][2 := fromInt(112)][3 := fromInt(95)][4 := fromInt(120)][5 := fromInt(50)], 6)][92 := fromArray(arrayconst(fromInt(100))[1 := fromInt(117)][2 := fromInt(112)][3 := fromInt(50)], 4)][93 := fromArray(arrayconst(fromInt(100))[1 := fromInt(117)][2 := fromInt(112)][3 := fromInt(50)][4 := fromInt(95)][5 := fromInt(120)][6 := fromInt(49)], 7)][94 := fromArray(arrayconst(fromInt(100))[1 := fromInt(117)][2 := fromInt(112)][3 := fromInt(50)][4 := fromInt(95)][5 := fromInt(120)][6 := fromInt(50)], 7)][95 := fromArray(arrayconst(fromInt(115))[1 := fromInt(119)][2 := fromInt(97)][3 := fromInt(112)], 4)][96 := fromArray(arrayconst(fromInt(105))[1 := fromInt(97)][2 := fromInt(100)][3 := fromInt(100)], 4)][97 := fromArray(arrayconst(fromInt(108))[1 := fromInt(97)][2 := fromInt(100)][3 := fromInt(100)], 4)][98 := fromArray(arrayconst(fromInt(102))[1 := fromInt(97)][2 := fromInt(100)][3 := fromInt(100)], 4)][99 := fromArray(arrayconst(fromInt(100))[1 := fromInt(97)][2 := fromInt(100)][3 := fromInt(100)], 4)][100 := fromArray(arrayconst(fromInt(105))[1 := fromInt(115)][2 := fromInt(117)][3 := fromInt(98)], 4)][101 := fromArray(arrayconst(fromInt(108))[1 := fromInt(115)][2 := fromInt(117)][3 := fromInt(98)], 4)][102 := fromArray(arrayconst(fromInt(102))[1 := fromInt(115)][2 := fromInt(117)][3 := fromInt(98)], 4)][103 := fromArray(arrayconst(fromInt(100))[1 := fromInt(115)][2 := fromInt(117)][3 := fromInt(98)], 4)][104 := fromArray(arrayconst(fromInt(105))[1 := fromInt(109)][2 := fromInt(117)][3 := fromInt(108)], 4)][105 := fromArray(arrayconst(fromInt(108))[1 := fromInt(109)][2 := fromInt(117)][3 := fromInt(108)], 4)][106 := fromArray(arrayconst(fromInt(102))[1 := fromInt(109)][2 := fromInt(117)][3 := fromInt(108)], 4)][107 := fromArray(arrayconst(fromInt(100))[1 := fromInt(109)][2 := fromInt(117)][3 := fromInt(108)], 4)][108 := fromArray(arrayconst(fromInt(105))[1 := fromInt(100)][2 := fromInt(105)][3 := fromInt(118)], 4)][109 := fromArray(arrayconst(fromInt(108))[1 := fromInt(100)][2 := fromInt(105)][3 := fromInt(118)], 4)][110 := fromArray(arrayconst(fromInt(102))[1 := fromInt(100)][2 := fromInt(105)][3 := fromInt(118)], 4)][111 := fromArray(arrayconst(fromInt(100))[1 := fromInt(100)][2 := fromInt(105)][3 := fromInt(118)], 4)][112 := fromArray(arrayconst(fromInt(105))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(109)], 4)][113 := fromArray(arrayconst(fromInt(108))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(109)], 4)][114 := fromArray(arrayconst(fromInt(102))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(109)], 4)][115 := fromArray(arrayconst(fromInt(100))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(109)], 4)][116 := fromArray(arrayconst(fromInt(105))[1 := fromInt(110)][2 := fromInt(101)][3 := fromInt(103)], 4)][117 := fromArray(arrayconst(fromInt(108))[1 := fromInt(110)][2 := fromInt(101)][3 := fromInt(103)], 4)][118 := fromArray(arrayconst(fromInt(102))[1 := fromInt(110)][2 := fromInt(101)][3 := fromInt(103)], 4)][119 := fromArray(arrayconst(fromInt(100))[1 := fromInt(110)][2 := fromInt(101)][3 := fromInt(103)], 4)][120 := fromArray(arrayconst(fromInt(105))[1 := fromInt(115)][2 := fromInt(104)][3 := fromInt(108)], 4)][121 := fromArray(arrayconst(fromInt(108))[1 := fromInt(115)][2 := fromInt(104)][3 := fromInt(108)], 4)][122 := fromArray(arrayconst(fromInt(105))[1 := fromInt(115)][2 := fromInt(104)][3 := fromInt(114)], 4)][123 := fromArray(arrayconst(fromInt(108))[1 := fromInt(115)][2 := fromInt(104)][3 := fromInt(114)], 4)][124 := fromArray(arrayconst(fromInt(105))[1 := fromInt(117)][2 := fromInt(115)][3 := fromInt(104)][4 := fromInt(114)], 5)][125 := fromArray(arrayconst(fromInt(108))[1 := fromInt(117)][2 := fromInt(115)][3 := fromInt(104)][4 := fromInt(114)], 5)][126 := fromArray(arrayconst(fromInt(105))[1 := fromInt(97)][2 := fromInt(110)][3 := fromInt(100)], 4)][127 := fromArray(arrayconst(fromInt(108))[1 := fromInt(97)][2 := fromInt(110)][3 := fromInt(100)], 4)][128 := fromArray(arrayconst(fromInt(105))[1 := fromInt(111)][2 := fromInt(114)], 3)][129 := fromArray(arrayconst(fromInt(108))[1 := fromInt(111)][2 := fromInt(114)], 3)][130 := fromArray(arrayconst(fromInt(105))[1 := fromInt(120)][2 := fromInt(111)][3 := fromInt(114)], 4)][131 := fromArray(arrayconst(fromInt(108))[1 := fromInt(120)][2 := fromInt(111)][3 := fromInt(114)], 4)][132 := fromArray(arrayconst(fromInt(105))[1 := fromInt(105)][2 := fromInt(110)][3 := fromInt(99)], 4)][133 := fromArray(arrayconst(fromInt(105))[1 := fromInt(50)][2 := fromInt(108)], 3)][134 := fromArray(arrayconst(fromInt(105))[1 := fromInt(50)][2 := fromInt(102)], 3)][135 := fromArray(arrayconst(fromInt(105))[1 := fromInt(50)][2 := fromInt(100)], 3)][136 := fromArray(arrayconst(fromInt(108))[1 := fromInt(50)][2 := fromInt(105)], 3)][137 := fromArray(arrayconst(fromInt(108))[1 := fromInt(50)][2 := fromInt(102)], 3)][138 := fromArray(arrayconst(fromInt(108))[1 := fromInt(50)][2 := fromInt(100)], 3)][139 := fromArray(arrayconst(fromInt(102))[1 := fromInt(50)][2 := fromInt(105)], 3)][140 := fromArray(arrayconst(fromInt(102))[1 := fromInt(50)][2 := fromInt(108)], 3)][141 := fromArray(arrayconst(fromInt(102))[1 := fromInt(50)][2 := fromInt(100)], 3)][142 := fromArray(arrayconst(fromInt(100))[1 := fromInt(50)][2 := fromInt(105)], 3)][143 := fromArray(arrayconst(fromInt(100))[1 := fromInt(50)][2 := fromInt(108)], 3)][144 := fromArray(arrayconst(fromInt(100))[1 := fromInt(50)][2 := fromInt(102)], 3)][145 := fromArray(arrayconst(fromInt(105))[1 := fromInt(50)][2 := fromInt(98)], 3)][146 := fromArray(arrayconst(fromInt(105))[1 := fromInt(50)][2 := fromInt(99)], 3)][147 := fromArray(arrayconst(fromInt(105))[1 := fromInt(50)][2 := fromInt(115)], 3)][148 := fromArray(arrayconst(fromInt(108))[1 := fromInt(99)][2 := fromInt(109)][3 := fromInt(112)], 4)][149 := fromArray(arrayconst(fromInt(102))[1 := fromInt(99)][2 := fromInt(109)][3 := fromInt(112)][4 := fromInt(108)], 5)][150 := fromArray(arrayconst(fromInt(102))[1 := fromInt(99)][2 := fromInt(109)][3 := fromInt(112)][4 := fromInt(103)], 5)][151 := fromArray(arrayconst(fromInt(100))[1 := fromInt(99)][2 := fromInt(109)][3 := fromInt(112)][4 := fromInt(108)], 5)][152 := fromArray(arrayconst(fromInt(100))[1 := fromInt(99)][2 := fromInt(109)][3 := fromInt(112)][4 := fromInt(103)], 5)][153 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(101)][3 := fromInt(113)], 4)][154 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(110)][3 := fromInt(101)], 4)][155 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(108)][3 := fromInt(116)], 4)][156 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(103)][3 := fromInt(101)], 4)][157 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(103)][3 := fromInt(116)], 4)][158 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(108)][3 := fromInt(101)], 4)][159 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(95)][3 := fromInt(105)][4 := fromInt(99)][5 := fromInt(109)][6 := fromInt(112)][7 := fromInt(101)][8 := fromInt(113)], 9)][160 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(95)][3 := fromInt(105)][4 := fromInt(99)][5 := fromInt(109)][6 := fromInt(112)][7 := fromInt(110)][8 := fromInt(101)], 9)][161 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(95)][3 := fromInt(105)][4 := fromInt(99)][5 := fromInt(109)][6 := fromInt(112)][7 := fromInt(108)][8 := fromInt(116)], 9)][162 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(95)][3 := fromInt(105)][4 := fromInt(99)][5 := fromInt(109)][6 := fromInt(112)][7 := fromInt(103)][8 := fromInt(101)], 9)][163 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(95)][3 := fromInt(105)][4 := fromInt(99)][5 := fromInt(109)][6 := fromInt(112)][7 := fromInt(103)][8 := fromInt(116)], 9)][164 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(95)][3 := fromInt(105)][4 := fromInt(99)][5 := fromInt(109)][6 := fromInt(112)][7 := fromInt(108)][8 := fromInt(101)], 9)][165 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(95)][3 := fromInt(97)][4 := fromInt(99)][5 := fromInt(109)][6 := fromInt(112)][7 := fromInt(101)][8 := fromInt(113)], 9)][166 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(95)][3 := fromInt(97)][4 := fromInt(99)][5 := fromInt(109)][6 := fromInt(112)][7 := fromInt(110)][8 := fromInt(101)], 9)][167 := fromArray(arrayconst(fromInt(103))[1 := fromInt(111)][2 := fromInt(116)][3 := fromInt(111)], 4)][168 := fromArray(arrayconst(fromInt(106))[1 := fromInt(115)][2 := fromInt(114)], 3)][169 := fromArray(arrayconst(fromInt(114))[1 := fromInt(101)][2 := fromInt(116)], 3)][170 := fromArray(arrayconst(fromInt(116))[1 := fromInt(97)][2 := fromInt(98)][3 := fromInt(108)][4 := fromInt(101)][5 := fromInt(115)][6 := fromInt(119)][7 := fromInt(105)][8 := fromInt(116)][9 := fromInt(99)][10 := fromInt(104)], 11)][171 := fromArray(arrayconst(fromInt(108))[1 := fromInt(111)][2 := fromInt(111)][3 := fromInt(107)][4 := fromInt(117)][5 := fromInt(112)][6 := fromInt(115)][7 := fromInt(119)][8 := fromInt(105)][9 := fromInt(116)][10 := fromInt(99)][11 := fromInt(104)], 12)][172 := fromArray(arrayconst(fromInt(105))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(116)][4 := fromInt(117)][5 := fromInt(114)][6 := fromInt(110)], 7)][173 := fromArray(arrayconst(fromInt(108))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(116)][4 := fromInt(117)][5 := fromInt(114)][6 := fromInt(110)], 7)][174 := fromArray(arrayconst(fromInt(102))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(116)][4 := fromInt(117)][5 := fromInt(114)][6 := fromInt(110)], 7)][175 := fromArray(arrayconst(fromInt(100))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(116)][4 := fromInt(117)][5 := fromInt(114)][6 := fromInt(110)], 7)][176 := fromArray(arrayconst(fromInt(97))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(116)][4 := fromInt(117)][5 := fromInt(114)][6 := fromInt(110)], 7)][177 := fromArray(arrayconst(fromInt(114))[1 := fromInt(101)][2 := fromInt(116)][3 := fromInt(117)][4 := fromInt(114)][5 := fromInt(110)], 6)][178 := fromArray(arrayconst(fromInt(103))[1 := fromInt(101)][2 := fromInt(116)][3 := fromInt(115)][4 := fromInt(116)][5 := fromInt(97)][6 := fromInt(116)][7 := fromInt(105)][8 := fromInt(99)], 9)][179 := fromArray(arrayconst(fromInt(112))[1 := fromInt(117)][2 := fromInt(116)][3 := fromInt(115)][4 := fromInt(116)][5 := fromInt(97)][6 := fromInt(116)][7 := fromInt(105)][8 := fromInt(99)], 9)][180 := fromArray(arrayconst(fromInt(103))[1 := fromInt(101)][2 := fromInt(116)][3 := fromInt(102)][4 := fromInt(105)][5 := fromInt(101)][6 := fromInt(108)][7 := fromInt(100)], 8)][181 := fromArray(arrayconst(fromInt(112))[1 := fromInt(117)][2 := fromInt(116)][3 := fromInt(102)][4 := fromInt(105)][5 := fromInt(101)][6 := fromInt(108)][7 := fromInt(100)], 8)][182 := fromArray(arrayconst(fromInt(105))[1 := fromInt(110)][2 := fromInt(118)][3 := fromInt(111)][4 := fromInt(107)][5 := fromInt(101)][6 := fromInt(118)][7 := fromInt(105)][8 := fromInt(114)][9 := fromInt(116)][10 := fromInt(117)][11 := fromInt(97)][12 := fromInt(108)], 13)][183 := fromArray(arrayconst(fromInt(105))[1 := fromInt(110)][2 := fromInt(118)][3 := fromInt(111)][4 := fromInt(107)][5 := fromInt(101)][6 := fromInt(115)][7 := fromInt(112)][8 := fromInt(101)][9 := fromInt(99)][10 := fromInt(105)][11 := fromInt(97)][12 := fromInt(108)], 13)][184 := fromArray(arrayconst(fromInt(105))[1 := fromInt(110)][2 := fromInt(118)][3 := fromInt(111)][4 := fromInt(107)][5 := fromInt(101)][6 := fromInt(115)][7 := fromInt(116)][8 := fromInt(97)][9 := fromInt(116)][10 := fromInt(105)][11 := fromInt(99)], 12)][185 := fromArray(arrayconst(fromInt(105))[1 := fromInt(110)][2 := fromInt(118)][3 := fromInt(111)][4 := fromInt(107)][5 := fromInt(101)][6 := fromInt(101)][7 := fromInt(114)][8 := fromInt(102)][9 := fromInt(97)][10 := fromInt(99)][11 := fromInt(101)], 12)][186 := fromArray(arrayconst(fromInt(117))[1 := fromInt(110)][2 := fromInt(117)][3 := fromInt(115)][4 := fromInt(101)][5 := fromInt(100)], 6)][187 := fromArray(arrayconst(fromInt(110))[1 := fromInt(101)][2 := fromInt(119)], 3)][188 := fromArray(arrayconst(fromInt(110))[1 := fromInt(101)][2 := fromInt(119)][3 := fromInt(97)][4 := fromInt(114)][5 := fromInt(114)][6 := fromInt(97)][7 := fromInt(121)], 8)][189 := fromArray(arrayconst(fromInt(97))[1 := fromInt(110)][2 := fromInt(101)][3 := fromInt(119)][4 := fromInt(97)][5 := fromInt(114)][6 := fromInt(114)][7 := fromInt(97)][8 := fromInt(121)], 9)][190 := fromArray(arrayconst(fromInt(97))[1 := fromInt(114)][2 := fromInt(114)][3 := fromInt(97)][4 := fromInt(121)][5 := fromInt(108)][6 := fromInt(101)][7 := fromInt(110)][8 := fromInt(103)][9 := fromInt(116)][10 := fromInt(104)], 11)][191 := fromArray(arrayconst(fromInt(97))[1 := fromInt(116)][2 := fromInt(104)][3 := fromInt(114)][4 := fromInt(111)][5 := fromInt(119)], 6)][192 := fromArray(arrayconst(fromInt(99))[1 := fromInt(104)][2 := fromInt(101)][3 := fromInt(99)][4 := fromInt(107)][5 := fromInt(99)][6 := fromInt(97)][7 := fromInt(115)][8 := fromInt(116)], 9)][193 := fromArray(arrayconst(fromInt(105))[1 := fromInt(110)][2 := fromInt(115)][3 := fromInt(116)][4 := fromInt(97)][5 := fromInt(110)][6 := fromInt(99)][7 := fromInt(101)][8 := fromInt(111)][9 := fromInt(102)], 10)][194 := fromArray(arrayconst(fromInt(109))[1 := fromInt(111)][2 := fromInt(110)][3 := fromInt(105)][4 := fromInt(116)][5 := fromInt(111)][6 := fromInt(114)][7 := fromInt(101)][8 := fromInt(110)][9 := fromInt(116)][10 := fromInt(101)][11 := fromInt(114)], 12)][195 := fromArray(arrayconst(fromInt(109))[1 := fromInt(111)][2 := fromInt(110)][3 := fromInt(105)][4 := fromInt(116)][5 := fromInt(111)][6 := fromInt(114)][7 := fromInt(101)][8 := fromInt(120)][9 := fromInt(105)][10 := fromInt(116)], 11)][196 := fromArray(arrayconst(fromInt(119))[1 := fromInt(105)][2 := fromInt(100)][3 := fromInt(101)], 4)][197 := fromArray(arrayconst(fromInt(109))[1 := fromInt(117)][2 := fromInt(108)][3 := fromInt(116)][4 := fromInt(105)][5 := fromInt(97)][6 := fromInt(110)][7 := fromInt(101)][8 := fromInt(119)][9 := fromInt(97)][10 := fromInt(114)][11 := fromInt(114)][12 := fromInt(97)][13 := fromInt(121)], 14)][198 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(110)][3 := fromInt(117)][4 := fromInt(108)][5 := fromInt(108)], 6)][199 := fromArray(arrayconst(fromInt(105))[1 := fromInt(102)][2 := fromInt(110)][3 := fromInt(111)][4 := fromInt(110)][5 := fromInt(110)][6 := fromInt(117)][7 := fromInt(108)][8 := fromInt(108)], 9)][200 := fromArray(arrayconst(fromInt(103))[1 := fromInt(111)][2 := fromInt(116)][3 := fromInt(111)][4 := fromInt(95)][5 := fromInt(119)], 6)][201 := fromArray(arrayconst(fromInt(106))[1 := fromInt(115)][2 := fromInt(114)][3 := fromInt(95)][4 := fromInt(119)], 5)][202 := fromArray(arrayconst(fromInt(98))[1 := fromInt(114)][2 := fromInt(101)][3 := fromInt(97)][4 := fromInt(107)][5 := fromInt(112)][6 := fromInt(111)], 7)][203 := fromArray(arrayconst(fromInt(105))[1 := fromInt(109)][2 := fromInt(112)][3 := fromInt(100)][4 := fromInt(101)][5 := fromInt(112)][6 := fromInt(49)], 7)][204 := fromArray(arrayconst(fromInt(105))[1 := fromInt(109)][2 := fromInt(112)][3 := fromInt(100)][4 := fromInt(101)][5 := fromInt(112)][6 := fromInt(50)], 7)], 205))
  looping thru 2 args of 16:int[]:arridx (%13, %15)
  looping thru 0 args of 13:int[][]:const [[110,111,112],[97,99,111,110,115,116,95,110,117,108,108],[105,99,111,110,115,116,95,109,49],[105,99,111,110,115,116,95,48],[105,99,111,110,115,116,95,49],[105,99,111,110,115,116,95,50],[105,99,111,110,115,116,95,51],[105,99,111,110,115,116,95,52],[105,99,111,110,115,116,95,53],[108,99,111,110,115,116,95,48],[108,99,111,110,115,116,95,49],[102,99,111,110,115,116,95,48],[102,99,111,110,115,116,95,49],[102,99,111,110,115,116,95,50],[100,99,111,110,115,116,95,48],[100,99,111,110,115,116,95,49],[98,105,112,117,115,104],[115,105,112,117,115,104],[108,100,99],[108,100,99,95,119],[108,100,99,50,95,119],[105,108,111,97,100],[108,108,111,97,100],[102,108,111,97,100],[100,108,111,97,100],[97,108,111,97,100],[105,108,111,97,100,95,48],[105,108,111,97,100,95,49],[105,108,111,97,100,95,50],[105,108,111,97,100,95,51],[108,108,111,97,100,95,48],[108,108,111,97,100,95,49],[108,108,111,97,100,95,50],[108,108,111,97,100,95,51],[102,108,111,97,100,95,48],[102,108,111,97,100,95,49],[102,108,111,97,100,95,50],[102,108,111,97,100,95,51],[100,108,111,97,100,95,48],[100,108,111,97,100,95,49],[100,108,111,97,100,95,50],[100,108,111,97,100,95,51],[97,108,111,97,100,95,48],[97,108,111,97,100,95,49],[97,108,111,97,100,95,50],[97,108,111,97,100,95,51],[105,97,108,111,97,100],[108,97,108,111,97,100],[102,97,108,111,97,100],[100,97,108,111,97,100],[97,97,108,111,97,100],[98,97,108,111,97,100],[99,97,108,111,97,100],[115,97,108,111,97,100],[105,115,116,111,114,101],[108,115,116,111,114,101],[102,115,116,111,114,101],[100,115,116,111,114,101],[97,115,116,111,114,101],[105,115,116,111,114,101,95,48],[105,115,116,111,114,101,95,49],[105,115,116,111,114,101,95,50],[105,115,116,111,114,101,95,51],[108,115,116,111,114,101,95,48],[108,115,116,111,114,101,95,49],[108,115,116,111,114,101,95,50],[108,115,116,111,114,101,95,51],[102,115,116,111,114,101,95,48],[102,115,116,111,114,101,95,49],[102,115,116,111,114,101,95,50],[102,115,116,111,114,101,95,51],[100,115,116,111,114,101,95,48],[100,115,116,111,114,101,95,49],[100,115,116,111,114,101,95,50],[100,115,116,111,114,101,95,51],[97,115,116,111,114,101,95,48],[97,115,116,111,114,101,95,49],[97,115,116,111,114,101,95,50],[97,115,116,111,114,101,95,51],[105,97,115,116,111,114,101],[108,97,115,116,111,114,101],[102,97,115,116,111,114,101],[100,97,115,116,111,114,101],[97,97,115,116,111,114,101],[98,97,115,116,111,114,101],[99,97,115,116,111,114,101],[115,97,115,116,111,114,101],[112,111,112],[112,111,112,50],[100,117,112],[100,117,112,95,120,49],[100,117,112,95,120,50],[100,117,112,50],[100,117,112,50,95,120,49],[100,117,112,50,95,120,50],[115,119,97,112],[105,97,100,100],[108,97,100,100],[102,97,100,100],[100,97,100,100],[105,115,117,98],[108,115,117,98],[102,115,117,98],[100,115,117,98],[105,109,117,108],[108,109,117,108],[102,109,117,108],[100,109,117,108],[105,100,105,118],[108,100,105,118],[102,100,105,118],[100,100,105,118],[105,114,101,109],[108,114,101,109],[102,114,101,109],[100,114,101,109],[105,110,101,103],[108,110,101,103],[102,110,101,103],[100,110,101,103],[105,115,104,108],[108,115,104,108],[105,115,104,114],[108,115,104,114],[105,117,115,104,114],[108,117,115,104,114],[105,97,110,100],[108,97,110,100],[105,111,114],[108,111,114],[105,120,111,114],[108,120,111,114],[105,105,110,99],[105,50,108],[105,50,102],[105,50,100],[108,50,105],[108,50,102],[108,50,100],[102,50,105],[102,50,108],[102,50,100],[100,50,105],[100,50,108],[100,50,102],[105,50,98],[105,50,99],[105,50,115],[108,99,109,112],[102,99,109,112,108],[102,99,109,112,103],[100,99,109,112,108],[100,99,109,112,103],[105,102,101,113],[105,102,110,101],[105,102,108,116],[105,102,103,101],[105,102,103,116],[105,102,108,101],[105,102,95,105,99,109,112,101,113],[105,102,95,105,99,109,112,110,101],[105,102,95,105,99,109,112,108,116],[105,102,95,105,99,109,112,103,101],[105,102,95,105,99,109,112,103,116],[105,102,95,105,99,109,112,108,101],[105,102,95,97,99,109,112,101,113],[105,102,95,97,99,109,112,110,101],[103,111,116,111],[106,115,114],[114,101,116],[116,97,98,108,101,115,119,105,116,99,104],[108,111,111,107,117,112,115,119,105,116,99,104],[105,114,101,116,117,114,110],[108,114,101,116,117,114,110],[102,114,101,116,117,114,110],[100,114,101,116,117,114,110],[97,114,101,116,117,114,110],[114,101,116,117,114,110],[103,101,116,115,116,97,116,105,99],[112,117,116,115,116,97,116,105,99],[103,101,116,102,105,101,108,100],[112,117,116,102,105,101,108,100],[105,110,118,111,107,101,118,105,114,116,117,97,108],[105,110,118,111,107,101,115,112,101,99,105,97,108],[105,110,118,111,107,101,115,116,97,116,105,99],[105,110,118,111,107,101,101,114,102,97,99,101],[117,110,117,115,101,100],[110,101,119],[110,101,119,97,114,114,97,121],[97,110,101,119,97,114,114,97,121],[97,114,114,97,121,108,101,110,103,116,104],[97,116,104,114,111,119],[99,104,101,99,107,99,97,115,116],[105,110,115,116,97,110,99,101,111,102],[109,111,110,105,116,111,114,101,110,116,101,114],[109,111,110,105,116,111,114,101,120,105,116],[119,105,100,101],[109,117,108,116,105,97,110,101,119,97,114,114,97,121],[105,102,110,117,108,108],[105,102,110,111,110,110,117,108,108],[103,111,116,111,95,119],[106,115,114,95,119],[98,114,101,97,107,112,111],[105,109,112,100,101,112,49],[105,109,112,100,101,112,50]]
  looping thru 1 args of 15:int:recfield %14 op
  looping thru 1 args of 14:RecursiveType_Valid_7:Bytecode:read (%5)
  looping thru 1 args of 5:RecursiveType_Valid_7:Bytecode:alias (%0)
  looping thru 0 args of 0:RecursiveType_Valid_7:Bytecode:decl b
checking: 7:bool:eq (%5, %6)
  looping thru 2 args of 7:bool:eq (%5, %6)
  looping thru 1 args of 5:RecursiveType_Valid_7:string:read (%4)
  looping thru 1 args of 4:int[]:decl s1 = 3
  looping thru 1 args of 3:RecursiveType_Valid_7:string:call RecursiveType_Valid_7:code2toString(%2)
  looping thru 2 args of 2:RecursiveType_Valid_7:Unit:call RecursiveType_Valid_7:Unit(%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 6:int[]:const [97,99,111,110,115,116,95,110,117,108,108]
checking: 22:bool:eq (%20, %21)
  looping thru 2 args of 22:bool:eq (%20, %21)
  looping thru 1 args of 20:RecursiveType_Valid_7:string:read (%19)
  looping thru 1 args of 19:int[]:decl s2 = 18
  looping thru 1 args of 18:RecursiveType_Valid_7:string:call RecursiveType_Valid_7:code2toString(%17)
  looping thru 5 args of 17:RecursiveType_Valid_7:FieldIndex:call RecursiveType_Valid_7:FieldIndex(%9, %10, %14, %15, %16)
  looping thru 0 args of 9:int:const 0
  looping thru 0 args of 10:int:const 180
  looping thru 2 args of 14:{int[][] classes,int[] pkg}:recinit (%12, %13)
  looping thru 1 args of 12:int[][]:arrinit (%11)
  looping thru 0 args of 11:int[]:const [79,98,106,101,99,116]
  looping thru 0 args of 13:int[]:const [106,97,118,97,46,108,97,110,103]
  looping thru 0 args of 15:int[]:const [102,105,101,108,100]
  looping thru 0 args of 16:int:const 10
  looping thru 0 args of 21:int[]:const [103,101,116,102,105,101,108,100]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
RecursiveType_Valid_7.bpl(136,72): error: invalid Type
(0,0): error: the type of the last parameter is unspecified
2 parse errors detected in RecursiveType_Valid_7.bpl
===== RecursiveType_Valid_8.whiley =====
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:RecursiveType_Valid_8:expr:decl e = 0
  looping thru 0 args of 0:int:const 14897
  looping thru 0 args of 3:int:const 14897
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== RecursiveType_Valid_9.whiley =====
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:RecursiveType_Valid_9:expr:decl e = 0
  looping thru 0 args of 0:int:const 14897
  looping thru 0 args of 3:int:const 14897
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ReferenceType_Valid_1.whiley =====
checking: 1:int:const 1
  looping thru 0 args of 1:int:const 1
checking: 2:bool:eq (%0, %1)
  looping thru 2 args of 2:bool:eq (%0, %1)
  looping thru 0 args of 0:int|&null:call ReferenceType_Valid_1:f()
  looping thru 0 args of 1:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Reference_Valid_1.whiley =====
wyboogie.NotImplementedYet: dereference in 3:int:deref (%2)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:986)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Reference_Valid_2.whiley =====
wyboogie.NotImplementedYet: new record/object in 4:&bool[]:new (%3)
	at wyboogie.Wyil2Boogie.writeNewObject(Wyil2Boogie.java:1175)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:982)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Reference_Valid_3.whiley =====
wyboogie.NotImplementedYet: new record/object in 5:&{bool[] items}:new (%4)
	at wyboogie.Wyil2Boogie.writeNewObject(Wyil2Boogie.java:1175)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:982)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Reference_Valid_4.whiley =====
wyboogie.NotImplementedYet: new record/object in 1:&int:new (%0)
	at wyboogie.Wyil2Boogie.writeNewObject(Wyil2Boogie.java:1175)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:982)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Reference_Valid_5.whiley =====
wyboogie.NotImplementedYet: new record/object in 2:&{int x}:new (%1)
	at wyboogie.Wyil2Boogie.writeNewObject(Wyil2Boogie.java:1175)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:982)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Reference_Valid_6.whiley =====
wyboogie.NotImplementedYet: dereference in 2:&int:deref (%1)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:986)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Reference_Valid_7.whiley =====
assign 1 := 1
checking: 2:int:deref (%1)
  looping thru 1 args of 2:int:deref (%1)
  looping thru 1 args of 1:&int:read (%0)
  looping thru 0 args of 0:&int:decl x
checking: 3:int:const 42
  looping thru 0 args of 3:int:const 42
wyboogie.NotImplementedYet: dereference in 2:int:deref (%1)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:986)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:750)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Reference_Valid_8.whiley =====
wyboogie.NotImplementedYet: new record/object in 4:&null|int:new (%3)
	at wyboogie.Wyil2Boogie.writeNewObject(Wyil2Boogie.java:1175)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:982)
	at wyboogie.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:925)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:656)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Remainder_Valid_1.whiley =====
checking: 8:int:rem (%6, %7)
  looping thru 2 args of 8:int:rem (%6, %7)
  looping thru 1 args of 6:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 7:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 2 args of 2:int:call Remainder_Valid_1:f(%0, %1)
  looping thru 0 args of 0:int:const 10
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 3:int:const 0
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 2 args of 8:int:call Remainder_Valid_1:f(%6, %7)
  looping thru 0 args of 6:int:const 10
  looping thru 0 args of 7:int:const 4
  looping thru 0 args of 9:int:const 2
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 2 args of 14:int:call Remainder_Valid_1:f(%12, %13)
  looping thru 0 args of 12:int:const 1
  looping thru 0 args of 13:int:const 4
  looping thru 0 args of 15:int:const 1
checking: 22:bool:eq (%20, %21)
  looping thru 2 args of 22:bool:eq (%20, %21)
  looping thru 2 args of 20:int:call Remainder_Valid_1:f(%18, %19)
  looping thru 0 args of 18:int:const 103
  looping thru 0 args of 19:int:const 2
  looping thru 0 args of 21:int:const 1
checking: 29:bool:eq (%27, %28)
  looping thru 2 args of 29:bool:eq (%27, %28)
  looping thru 2 args of 27:int:call Remainder_Valid_1:f(%25, %26)
  looping thru 1 args of 25:int:neg (%24)
  looping thru 0 args of 24:int:const 10
  looping thru 0 args of 26:int:const 5
  looping thru 0 args of 28:int:const 0
checking: 37:bool:eq (%34, %36)
  looping thru 2 args of 37:bool:eq (%34, %36)
  looping thru 2 args of 34:int:call Remainder_Valid_1:f(%32, %33)
  looping thru 1 args of 32:int:neg (%31)
  looping thru 0 args of 31:int:const 10
  looping thru 0 args of 33:int:const 4
  looping thru 1 args of 36:int:neg (%35)
  looping thru 0 args of 35:int:const 2
checking: 45:bool:eq (%42, %44)
  looping thru 2 args of 45:bool:eq (%42, %44)
  looping thru 2 args of 42:int:call Remainder_Valid_1:f(%40, %41)
  looping thru 1 args of 40:int:neg (%39)
  looping thru 0 args of 39:int:const 1
  looping thru 0 args of 41:int:const 4
  looping thru 1 args of 44:int:neg (%43)
  looping thru 0 args of 43:int:const 1
checking: 53:bool:eq (%50, %52)
  looping thru 2 args of 53:bool:eq (%50, %52)
  looping thru 2 args of 50:int:call Remainder_Valid_1:f(%48, %49)
  looping thru 1 args of 48:int:neg (%47)
  looping thru 0 args of 47:int:const 103
  looping thru 0 args of 49:int:const 2
  looping thru 1 args of 52:int:neg (%51)
  looping thru 0 args of 51:int:const 1
checking: 61:bool:eq (%59, %60)
  looping thru 2 args of 61:bool:eq (%59, %60)
  looping thru 2 args of 59:int:call Remainder_Valid_1:f(%56, %58)
  looping thru 1 args of 56:int:neg (%55)
  looping thru 0 args of 55:int:const 10
  looping thru 1 args of 58:int:neg (%57)
  looping thru 0 args of 57:int:const 5
  looping thru 0 args of 60:int:const 0
checking: 70:bool:eq (%67, %69)
  looping thru 2 args of 70:bool:eq (%67, %69)
  looping thru 2 args of 67:int:call Remainder_Valid_1:f(%64, %66)
  looping thru 1 args of 64:int:neg (%63)
  looping thru 0 args of 63:int:const 10
  looping thru 1 args of 66:int:neg (%65)
  looping thru 0 args of 65:int:const 4
  looping thru 1 args of 69:int:neg (%68)
  looping thru 0 args of 68:int:const 2
checking: 79:bool:eq (%76, %78)
  looping thru 2 args of 79:bool:eq (%76, %78)
  looping thru 2 args of 76:int:call Remainder_Valid_1:f(%73, %75)
  looping thru 1 args of 73:int:neg (%72)
  looping thru 0 args of 72:int:const 1
  looping thru 1 args of 75:int:neg (%74)
  looping thru 0 args of 74:int:const 4
  looping thru 1 args of 78:int:neg (%77)
  looping thru 0 args of 77:int:const 1
checking: 88:bool:eq (%85, %87)
  looping thru 2 args of 88:bool:eq (%85, %87)
  looping thru 2 args of 85:int:call Remainder_Valid_1:f(%82, %84)
  looping thru 1 args of 82:int:neg (%81)
  looping thru 0 args of 81:int:const 103
  looping thru 1 args of 84:int:neg (%83)
  looping thru 0 args of 83:int:const 2
  looping thru 1 args of 87:int:neg (%86)
  looping thru 0 args of 86:int:const 1
checking: 95:bool:eq (%93, %94)
  looping thru 2 args of 95:bool:eq (%93, %94)
  looping thru 2 args of 93:int:call Remainder_Valid_1:f(%90, %92)
  looping thru 0 args of 90:int:const 10
  looping thru 1 args of 92:int:neg (%91)
  looping thru 0 args of 91:int:const 5
  looping thru 0 args of 94:int:const 0
checking: 102:bool:eq (%100, %101)
  looping thru 2 args of 102:bool:eq (%100, %101)
  looping thru 2 args of 100:int:call Remainder_Valid_1:f(%97, %99)
  looping thru 0 args of 97:int:const 10
  looping thru 1 args of 99:int:neg (%98)
  looping thru 0 args of 98:int:const 4
  looping thru 0 args of 101:int:const 2
checking: 109:bool:eq (%107, %108)
  looping thru 2 args of 109:bool:eq (%107, %108)
  looping thru 2 args of 107:int:call Remainder_Valid_1:f(%104, %106)
  looping thru 0 args of 104:int:const 1
  looping thru 1 args of 106:int:neg (%105)
  looping thru 0 args of 105:int:const 4
  looping thru 0 args of 108:int:const 1
checking: 116:bool:eq (%114, %115)
  looping thru 2 args of 116:bool:eq (%114, %115)
  looping thru 2 args of 114:int:call Remainder_Valid_1:f(%111, %113)
  looping thru 0 args of 111:int:const 103
  looping thru 1 args of 113:int:neg (%112)
  looping thru 0 args of 112:int:const 2
  looping thru 0 args of 115:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Requires_Valid_1.whiley =====
checking: 4:int:add (%2, %3)
  looping thru 2 args of 4:int:add (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 3:int:const 1
checking: 9:{int nx,int ny}:recinit (%7, %8)
  looping thru 2 args of 9:{int nx,int ny}:recinit (%7, %8)
  looping thru 1 args of 7:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 1 args of 8:int:read (%1)
  looping thru 0 args of 1:int:decl y
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:recfield %5 nx
  looping thru 1 args of 5:{int nx,int ny}:read (%4)
  looping thru 1 args of 4:{int nx,int ny}:decl p = 3
  looping thru 2 args of 3:{int nx,int ny}:call Requires_Valid_1:g(%0, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 2:int:call Requires_Valid_1:f(%1)
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 7:int:const 1
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:int:recfield %10 ny
  looping thru 1 args of 10:{int nx,int ny}:read (%4)
  looping thru 1 args of 4:{int nx,int ny}:decl p = 3
  looping thru 2 args of 3:{int nx,int ny}:call Requires_Valid_1:g(%0, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 2:int:call Requires_Valid_1:f(%1)
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 12:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Resolution_Valid_1.whiley =====
checking: 4:int:add (%2, %3)
  looping thru 2 args of 4:int:add (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl b
  looping thru 0 args of 3:int:const 1
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:read (%2)
  looping thru 1 args of 2:int:decl b = 1
  looping thru 1 args of 1:int:call Resolution_Valid_1:f(%0)
  looping thru 0 args of 0:int:const 10
  looping thru 0 args of 4:int:const 11
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Return_Valid_1.whiley =====
wyboogie.NotImplementedYet: multiple return values:f
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:272)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== SingleLineComment_Valid_1.whiley =====
checking: 2:bool:neq (%0, %1)
  looping thru 2 args of 2:bool:neq (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Skip_Valid_1.whiley =====
checking: 4:bool:gt (%2, %3)
  looping thru 2 args of 4:bool:gt (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 3:int:const 0
checking: 8:int:neg (%7)
  looping thru 1 args of 8:int:neg (%7)
  looping thru 0 args of 7:int:const 1
checking: 12:int:read (%0)
  looping thru 1 args of 12:int:read (%0)
  looping thru 0 args of 0:int:decl x
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call Skip_Valid_1:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 1
checking: 10:bool:eq (%7, %9)
  looping thru 2 args of 10:bool:eq (%7, %9)
  looping thru 1 args of 7:int:call Skip_Valid_1:f(%6)
  looping thru 1 args of 6:int:neg (%5)
  looping thru 0 args of 5:int:const 10
  looping thru 1 args of 9:int:neg (%8)
  looping thru 0 args of 8:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== String_Valid_1.whiley =====
checking: 6:bool:gteq (%3, %5)
  looping thru 2 args of 6:bool:gteq (%3, %5)
  looping thru 1 args of 3:String_Valid_1:nat:read (%0)
  looping thru 0 args of 0:String_Valid_1:nat:decl pos
  looping thru 1 args of 5:int:arrlen (%4)
  looping thru 1 args of 4:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl input
checking: 7:null:const null
  looping thru 0 args of 7:null:const null
checking: 16:bool:read (%15)
  looping thru 1 args of 16:bool:read (%15)
  looping thru 1 args of 15:bool:decl flag = 14
  looping thru 2 args of 14:bool:eq (%12, %13)
conjecture: 0 <= toInt(pos) && toInt(pos) < arraylen(input)
  looping thru 2 args of 12:int:arridx (%10, %11)
  looping thru 1 args of 10:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl input
  looping thru 1 args of 11:String_Valid_1:nat:read (%0)
  looping thru 0 args of 0:String_Valid_1:nat:decl pos
  looping thru 0 args of 13:int:const 79
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 2 args of 2:null|bool:call String_Valid_1:f(%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int[]:const [79,120]
  looping thru 0 args of 3:bool:const true
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 2 args of 8:null|bool:call String_Valid_1:f(%6, %7)
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 7:int[]:const [49,120]
  looping thru 0 args of 9:bool:const false
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 2 args of 14:null|bool:call String_Valid_1:f(%12, %13)
  looping thru 0 args of 12:int:const 1
  looping thru 0 args of 13:int[]:const [79]
  looping thru 0 args of 15:null:const null
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== String_Valid_2.whiley =====
checking: 12:bool:lt (%9, %11)
  looping thru 2 args of 12:bool:lt (%9, %11)
  looping thru 1 args of 9:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 0 args of 3:int:const 0
  looping thru 1 args of 11:int:arrlen (%10)
  looping thru 1 args of 10:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl str
checking: 17:bool:eq (%15, %16)
  looping thru 2 args of 17:bool:eq (%15, %16)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(str)
  looping thru 2 args of 15:int:arridx (%13, %14)
  looping thru 1 args of 13:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl str
  looping thru 1 args of 14:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 0 args of 3:int:const 0
  looping thru 1 args of 16:int:read (%0)
  looping thru 0 args of 0:int:decl c
checking: 18:bool:const true
  looping thru 0 args of 18:bool:const true
assign 1 := 1
checking: 22:int:read (%4)
  looping thru 1 args of 22:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 0 args of 3:int:const 0
checking: 25:int:add (%23, %24)
  looping thru 2 args of 25:int:add (%23, %24)
  looping thru 1 args of 23:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 0 args of 3:int:const 0
  looping thru 0 args of 24:int:const 1
checking: 29:bool:const false
  looping thru 0 args of 29:bool:const false
checking: 6:bool:eq (%4, %5)
  looping thru 2 args of 6:bool:eq (%4, %5)
  looping thru 2 args of 4:bool:call String_Valid_2:has(%2, %3)
  looping thru 0 args of 2:int:const 108
  looping thru 1 args of 3:int[]:read (%1)
  looping thru 1 args of 1:int[]:decl s = 0
  looping thru 0 args of 0:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 5:bool:const true
checking: 12:bool:eq (%10, %11)
  looping thru 2 args of 12:bool:eq (%10, %11)
  looping thru 2 args of 10:bool:call String_Valid_2:has(%8, %9)
  looping thru 0 args of 8:int:const 101
  looping thru 1 args of 9:int[]:read (%1)
  looping thru 1 args of 1:int[]:decl s = 0
  looping thru 0 args of 0:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 11:bool:const true
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 2 args of 16:bool:call String_Valid_2:has(%14, %15)
  looping thru 0 args of 14:int:const 104
  looping thru 1 args of 15:int[]:read (%1)
  looping thru 1 args of 1:int[]:decl s = 0
  looping thru 0 args of 0:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 17:bool:const false
checking: 24:bool:eq (%22, %23)
  looping thru 2 args of 24:bool:eq (%22, %23)
  looping thru 2 args of 22:bool:call String_Valid_2:has(%20, %21)
  looping thru 0 args of 20:int:const 122
  looping thru 1 args of 21:int[]:read (%1)
  looping thru 1 args of 1:int[]:decl s = 0
  looping thru 0 args of 0:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 23:bool:const false
checking: 30:bool:eq (%28, %29)
  looping thru 2 args of 30:bool:eq (%28, %29)
  looping thru 2 args of 28:bool:call String_Valid_2:has(%26, %27)
  looping thru 0 args of 26:int:const 72
  looping thru 1 args of 27:int[]:read (%1)
  looping thru 1 args of 1:int[]:decl s = 0
  looping thru 0 args of 0:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 29:bool:const true
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== String_Valid_3.whiley =====
checking: 12:bool:lt (%9, %11)
  looping thru 2 args of 12:bool:lt (%9, %11)
  looping thru 1 args of 9:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 0 args of 3:int:const 0
  looping thru 1 args of 11:int:arrlen (%10)
  looping thru 1 args of 10:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl str
checking: 17:bool:eq (%13, %16)
  looping thru 2 args of 17:bool:eq (%13, %16)
  looping thru 1 args of 13:int:read (%0)
  looping thru 0 args of 0:int:decl c1
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(str)
  looping thru 2 args of 16:int:arridx (%14, %15)
  looping thru 1 args of 14:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl str
  looping thru 1 args of 15:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 0 args of 3:int:const 0
checking: 18:bool:const true
  looping thru 0 args of 18:bool:const true
assign 1 := 1
checking: 22:int:read (%4)
  looping thru 1 args of 22:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 0 args of 3:int:const 0
checking: 25:int:add (%23, %24)
  looping thru 2 args of 25:int:add (%23, %24)
  looping thru 1 args of 23:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 0 args of 3:int:const 0
  looping thru 0 args of 24:int:const 1
checking: 29:bool:const false
  looping thru 0 args of 29:bool:const false
checking: 6:bool:eq (%4, %5)
  looping thru 2 args of 6:bool:eq (%4, %5)
  looping thru 2 args of 4:bool:call String_Valid_3:has(%2, %3)
  looping thru 0 args of 2:int:const 108
  looping thru 1 args of 3:int[]:read (%1)
  looping thru 1 args of 1:int[]:decl s = 0
  looping thru 0 args of 0:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 5:bool:const true
checking: 12:bool:eq (%10, %11)
  looping thru 2 args of 12:bool:eq (%10, %11)
  looping thru 2 args of 10:bool:call String_Valid_3:has(%8, %9)
  looping thru 0 args of 8:int:const 101
  looping thru 1 args of 9:int[]:read (%1)
  looping thru 1 args of 1:int[]:decl s = 0
  looping thru 0 args of 0:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 11:bool:const true
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 2 args of 16:bool:call String_Valid_3:has(%14, %15)
  looping thru 0 args of 14:int:const 104
  looping thru 1 args of 15:int[]:read (%1)
  looping thru 1 args of 1:int[]:decl s = 0
  looping thru 0 args of 0:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 17:bool:const false
checking: 24:bool:eq (%22, %23)
  looping thru 2 args of 24:bool:eq (%22, %23)
  looping thru 2 args of 22:bool:call String_Valid_3:has(%20, %21)
  looping thru 0 args of 20:int:const 122
  looping thru 1 args of 21:int[]:read (%1)
  looping thru 1 args of 1:int[]:decl s = 0
  looping thru 0 args of 0:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 23:bool:const false
checking: 30:bool:eq (%28, %29)
  looping thru 2 args of 30:bool:eq (%28, %29)
  looping thru 2 args of 28:bool:call String_Valid_3:has(%26, %27)
  looping thru 0 args of 26:int:const 72
  looping thru 1 args of 27:int[]:read (%1)
  looping thru 1 args of 1:int[]:decl s = 0
  looping thru 0 args of 0:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 29:bool:const true
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== String_Valid_4.whiley =====
MUTATED INPUT str : int[]
checking: 14:bool:lt (%11, %13)
  looping thru 2 args of 14:bool:lt (%11, %13)
  looping thru 1 args of 11:int:read (%5)
  looping thru 1 args of 5:int:decl i = 4
  looping thru 0 args of 4:int:const 0
  looping thru 1 args of 13:int:arrlen (%12)
  looping thru 1 args of 12:int[]:read (%2)
  looping thru 0 args of 2:int[]:decl str
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(str)
  looping thru 2 args of 17:int:arridx (%15, %16)
  looping thru 1 args of 15:int[]:read (%2)
  looping thru 0 args of 2:int[]:decl str
  looping thru 1 args of 16:int:read (%5)
  looping thru 1 args of 5:int:decl i = 4
  looping thru 0 args of 4:int:const 0
  looping thru 1 args of 18:int:read (%0)
  looping thru 0 args of 0:int:decl old
assign 1 := 1
checking: 22:int:arridx (%20, %21)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(str)
  looping thru 2 args of 22:int:arridx (%20, %21)
  looping thru 1 args of 20:int[]:read (%2)
  looping thru 0 args of 2:int[]:decl str
  looping thru 1 args of 21:int:read (%5)
  looping thru 1 args of 5:int:decl i = 4
  looping thru 0 args of 4:int:const 0
checking: 23:int:read (%1)
  looping thru 1 args of 23:int:read (%1)
  looping thru 0 args of 1:int:decl n
assign 1 := 1
checking: 27:int:read (%5)
  looping thru 1 args of 27:int:read (%5)
  looping thru 1 args of 5:int:decl i = 4
  looping thru 0 args of 4:int:const 0
checking: 30:int:add (%28, %29)
  looping thru 2 args of 30:int:add (%28, %29)
  looping thru 1 args of 28:int:read (%5)
  looping thru 1 args of 5:int:decl i = 4
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 29:int:const 1
checking: 34:int[]:read (%2)
  looping thru 1 args of 34:int[]:read (%2)
  looping thru 0 args of 2:int[]:decl str
checking: 7:bool:eq (%5, %6)
  looping thru 2 args of 7:bool:eq (%5, %6)
  looping thru 3 args of 5:int[]:call String_Valid_4:repl(%2, %3, %4)
  looping thru 0 args of 2:int:const 108
  looping thru 0 args of 3:int:const 49
  looping thru 1 args of 4:int[]:read (%1)
  looping thru 1 args of 1:int[]:decl s = 0
  looping thru 0 args of 0:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 6:int[]:const [72,101,49,49,111,32,87,111,114,49,100]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
String_Valid_4.bpl(1,20): error: ")" expected
1 parse errors detected in String_Valid_4.bpl
===== String_Valid_5.whiley =====
checking: 12:bool:lt (%9, %11)
  looping thru 2 args of 12:bool:lt (%9, %11)
  looping thru 1 args of 9:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 0 args of 3:int:const 0
  looping thru 1 args of 11:int:arrlen (%10)
  looping thru 1 args of 10:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl str
checking: 17:bool:eq (%13, %16)
  looping thru 2 args of 17:bool:eq (%13, %16)
  looping thru 1 args of 13:int:read (%0)
  looping thru 0 args of 0:int:decl c1
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(str)
  looping thru 2 args of 16:int:arridx (%14, %15)
  looping thru 1 args of 14:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl str
  looping thru 1 args of 15:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 0 args of 3:int:const 0
checking: 18:int:read (%4)
  looping thru 1 args of 18:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 0 args of 3:int:const 0
assign 1 := 1
checking: 22:int:read (%4)
  looping thru 1 args of 22:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 0 args of 3:int:const 0
checking: 25:int:add (%23, %24)
  looping thru 2 args of 25:int:add (%23, %24)
  looping thru 1 args of 23:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 0 args of 3:int:const 0
  looping thru 0 args of 24:int:const 1
checking: 29:null:const null
  looping thru 0 args of 29:null:const null
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 2 args of 2:null|int:call String_Valid_5:indexOf(%0, %1)
  looping thru 0 args of 0:int:const 72
  looping thru 0 args of 1:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 3:int:const 0
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 2 args of 8:null|int:call String_Valid_5:indexOf(%6, %7)
  looping thru 0 args of 6:int:const 101
  looping thru 0 args of 7:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 9:int:const 1
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 2 args of 14:null|int:call String_Valid_5:indexOf(%12, %13)
  looping thru 0 args of 12:int:const 108
  looping thru 0 args of 13:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 15:int:const 2
checking: 22:bool:eq (%20, %21)
  looping thru 2 args of 22:bool:eq (%20, %21)
  looping thru 2 args of 20:null|int:call String_Valid_5:indexOf(%18, %19)
  looping thru 0 args of 18:int:const 111
  looping thru 0 args of 19:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 21:int:const 4
checking: 28:bool:eq (%26, %27)
  looping thru 2 args of 28:bool:eq (%26, %27)
  looping thru 2 args of 26:null|int:call String_Valid_5:indexOf(%24, %25)
  looping thru 0 args of 24:int:const 32
  looping thru 0 args of 25:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 27:int:const 5
checking: 34:bool:eq (%32, %33)
  looping thru 2 args of 34:bool:eq (%32, %33)
  looping thru 2 args of 32:null|int:call String_Valid_5:indexOf(%30, %31)
  looping thru 0 args of 30:int:const 87
  looping thru 0 args of 31:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 33:int:const 6
checking: 40:bool:eq (%38, %39)
  looping thru 2 args of 40:bool:eq (%38, %39)
  looping thru 2 args of 38:null|int:call String_Valid_5:indexOf(%36, %37)
  looping thru 0 args of 36:int:const 114
  looping thru 0 args of 37:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 39:int:const 8
checking: 46:bool:eq (%44, %45)
  looping thru 2 args of 46:bool:eq (%44, %45)
  looping thru 2 args of 44:null|int:call String_Valid_5:indexOf(%42, %43)
  looping thru 0 args of 42:int:const 100
  looping thru 0 args of 43:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 45:int:const 10
checking: 52:bool:eq (%50, %51)
  looping thru 2 args of 52:bool:eq (%50, %51)
  looping thru 2 args of 50:null|int:call String_Valid_5:indexOf(%48, %49)
  looping thru 0 args of 48:int:const 122
  looping thru 0 args of 49:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 51:null:const null
checking: 58:bool:eq (%56, %57)
  looping thru 2 args of 58:bool:eq (%56, %57)
  looping thru 2 args of 56:null|int:call String_Valid_5:indexOf(%54, %55)
  looping thru 0 args of 54:int:const 49
  looping thru 0 args of 55:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 57:null:const null
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== String_Valid_6.whiley =====
checking: 44:bool:lt (%41, %43)
  looping thru 2 args of 44:bool:lt (%41, %43)
  looping thru 1 args of 41:int:read (%22)
  looping thru 1 args of 22:int:decl i = 21
  looping thru 0 args of 21:int:const 0
  looping thru 1 args of 43:int:arrlen (%42)
  looping thru 1 args of 42:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
assign 1 := 1
checking: 47:int:arridx (%45, %46)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(rs)
  looping thru 2 args of 47:int:arridx (%45, %46)
  looping thru 1 args of 45:int[]:read (%20)
  looping thru 1 args of 20:int[]:decl rs = 19
  looping thru 2 args of 19:int[]:arrgen (%17, %18)
  looping thru 0 args of 17:int:const 0
  looping thru 1 args of 18:int:read (%16)
  looping thru 1 args of 16:int:decl count = 15
  looping thru 2 args of 15:int:add (%12, %14)
  looping thru 1 args of 12:int:arrlen (%11)
  looping thru 1 args of 11:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 14:int:arrlen (%13)
  looping thru 1 args of 13:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl ys
  looping thru 1 args of 46:int:read (%22)
  looping thru 1 args of 22:int:decl i = 21
  looping thru 0 args of 21:int:const 0
checking: 50:int:arridx (%48, %49)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 50:int:arridx (%48, %49)
  looping thru 1 args of 48:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 49:int:read (%22)
  looping thru 1 args of 22:int:decl i = 21
  looping thru 0 args of 21:int:const 0
assign 1 := 1
checking: 52:int:read (%22)
  looping thru 1 args of 52:int:read (%22)
  looping thru 1 args of 22:int:decl i = 21
  looping thru 0 args of 21:int:const 0
checking: 55:int:add (%53, %54)
  looping thru 2 args of 55:int:add (%53, %54)
  looping thru 1 args of 53:int:read (%22)
  looping thru 1 args of 22:int:decl i = 21
  looping thru 0 args of 21:int:const 0
  looping thru 0 args of 54:int:const 1
checking: 77:bool:lt (%74, %76)
  looping thru 2 args of 77:bool:lt (%74, %76)
  looping thru 1 args of 74:int:read (%60)
  looping thru 1 args of 60:int:decl j = 59
  looping thru 0 args of 59:int:const 0
  looping thru 1 args of 76:int:arrlen (%75)
  looping thru 1 args of 75:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl ys
assign 1 := 1
checking: 82:int:arridx (%78, %81)
conjecture: 0 <= toInt(j) + toInt(i) && toInt(j) + toInt(i) < arraylen(rs)
  looping thru 2 args of 82:int:arridx (%78, %81)
  looping thru 1 args of 78:int[]:read (%20)
  looping thru 1 args of 20:int[]:decl rs = 19
  looping thru 2 args of 19:int[]:arrgen (%17, %18)
  looping thru 0 args of 17:int:const 0
  looping thru 1 args of 18:int:read (%16)
  looping thru 1 args of 16:int:decl count = 15
  looping thru 2 args of 15:int:add (%12, %14)
  looping thru 1 args of 12:int:arrlen (%11)
  looping thru 1 args of 11:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 14:int:arrlen (%13)
  looping thru 1 args of 13:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl ys
  looping thru 2 args of 81:int:add (%79, %80)
  looping thru 1 args of 79:int:read (%60)
  looping thru 1 args of 60:int:decl j = 59
  looping thru 0 args of 59:int:const 0
  looping thru 1 args of 80:int:read (%22)
  looping thru 1 args of 22:int:decl i = 21
  looping thru 0 args of 21:int:const 0
checking: 85:int:arridx (%83, %84)
conjecture: 0 <= toInt(j) && toInt(j) < arraylen(ys)
  looping thru 2 args of 85:int:arridx (%83, %84)
  looping thru 1 args of 83:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl ys
  looping thru 1 args of 84:int:read (%60)
  looping thru 1 args of 60:int:decl j = 59
  looping thru 0 args of 59:int:const 0
assign 1 := 1
checking: 87:int:read (%60)
  looping thru 1 args of 87:int:read (%60)
  looping thru 1 args of 60:int:decl j = 59
  looping thru 0 args of 59:int:const 0
checking: 90:int:add (%88, %89)
  looping thru 2 args of 90:int:add (%88, %89)
  looping thru 1 args of 88:int:read (%60)
  looping thru 1 args of 60:int:decl j = 59
  looping thru 0 args of 59:int:const 0
  looping thru 0 args of 89:int:const 1
checking: 94:int[]:read (%20)
  looping thru 1 args of 94:int[]:read (%20)
  looping thru 1 args of 20:int[]:decl rs = 19
  looping thru 2 args of 19:int[]:arrgen (%17, %18)
  looping thru 0 args of 17:int:const 0
  looping thru 1 args of 18:int:read (%16)
  looping thru 1 args of 16:int:decl count = 15
  looping thru 2 args of 15:int:add (%12, %14)
  looping thru 1 args of 12:int:arrlen (%11)
  looping thru 1 args of 11:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 14:int:arrlen (%13)
  looping thru 1 args of 13:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl ys
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 2 args of 2:int[]:call String_Valid_6:append(%0, %1)
  looping thru 0 args of 0:int[]:const [72,101,108,108,111,32]
  looping thru 0 args of 1:int[]:const [49,50,50]
  looping thru 0 args of 3:int[]:const [72,101,108,108,111,32,49,50,50]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Subtype_Valid_1.whiley =====
assign 1 := 1
checking: 5:int:arridx (%3, %4)
conjecture: 0 <= 0 && 0 < arraylen(x)
  looping thru 2 args of 5:int:arridx (%3, %4)
  looping thru 1 args of 3:int[]:read (%2)
  looping thru 1 args of 2:int[]:decl x = 1
  looping thru 1 args of 1:int[]:arrinit (%0)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 4:int:const 0
checking: 6:int:const 1
  looping thru 0 args of 6:int:const 1
checking: 11:bool:eq (%8, %10)
  looping thru 2 args of 11:bool:eq (%8, %10)
  looping thru 1 args of 8:int[]:read (%2)
  looping thru 1 args of 2:int[]:decl x = 1
  looping thru 1 args of 1:int[]:arrinit (%0)
  looping thru 0 args of 0:int:const 2
  looping thru 1 args of 10:int[]:arrinit (%9)
  looping thru 0 args of 9:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_10.whiley =====
assign 1 := 1
checking: 4:int:recfield %3 f
  looping thru 1 args of 4:int:recfield %3 f
  looping thru 1 args of 3:{int f}:read (%2)
  looping thru 1 args of 2:{Subtype_Valid_10:sr5nat f}:decl x = 1
  looping thru 1 args of 1:{int f}:recinit (%0)
  looping thru 0 args of 0:int:const 1
checking: 5:int:const 2
  looping thru 0 args of 5:int:const 2
checking: 10:bool:eq (%7, %9)
  looping thru 2 args of 10:bool:eq (%7, %9)
  looping thru 1 args of 7:{int f}:read (%2)
  looping thru 1 args of 2:{Subtype_Valid_10:sr5nat f}:decl x = 1
  looping thru 1 args of 1:{int f}:recinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 9:{int f}:recinit (%8)
  looping thru 0 args of 8:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_11.whiley =====
assign 1 := 1
checking: 4:int:recfield %3 f
  looping thru 1 args of 4:int:recfield %3 f
  looping thru 1 args of 3:{int f}:read (%2)
  looping thru 1 args of 2:{Subtype_Valid_11:sr5nat f}:decl x = 1
  looping thru 1 args of 1:{int f}:recinit (%0)
  looping thru 0 args of 0:int:const 1
checking: 5:int:const 2
  looping thru 0 args of 5:int:const 2
checking: 10:bool:eq (%7, %9)
  looping thru 2 args of 10:bool:eq (%7, %9)
  looping thru 1 args of 7:{int f}:read (%2)
  looping thru 1 args of 2:{Subtype_Valid_11:sr5nat f}:decl x = 1
  looping thru 1 args of 1:{int f}:recinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 9:{int f}:recinit (%8)
  looping thru 0 args of 8:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_12.whiley =====
assign 1 := 1
checking: 5:int:recfield %4 f
  looping thru 1 args of 5:int:recfield %4 f
  looping thru 1 args of 4:{int f,int g}:read (%3)
  looping thru 1 args of 3:Subtype_Valid_12:sr6tup:decl x = 2
  looping thru 2 args of 2:{int f,int g}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 5
checking: 6:int:const 2
  looping thru 0 args of 6:int:const 2
checking: 12:bool:eq (%8, %11)
  looping thru 2 args of 12:bool:eq (%8, %11)
  looping thru 1 args of 8:{int f,int g}:read (%3)
  looping thru 1 args of 3:Subtype_Valid_12:sr6tup:decl x = 2
  looping thru 2 args of 2:{int f,int g}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 5
  looping thru 2 args of 11:{int f,int g}:recinit (%9, %10)
  looping thru 0 args of 9:int:const 2
  looping thru 0 args of 10:int:const 5
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_13.whiley =====
assign 1 := 1
checking: 5:int:recfield %4 g
  looping thru 1 args of 5:int:recfield %4 g
  looping thru 1 args of 4:{int f,int g}:read (%3)
  looping thru 1 args of 3:Subtype_Valid_13:sr6tup:decl x = 2
  looping thru 2 args of 2:{int f,int g}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 5
checking: 6:int:const 2
  looping thru 0 args of 6:int:const 2
checking: 12:bool:eq (%8, %11)
  looping thru 2 args of 12:bool:eq (%8, %11)
  looping thru 1 args of 8:{int f,int g}:read (%3)
  looping thru 1 args of 3:Subtype_Valid_13:sr6tup:decl x = 2
  looping thru 2 args of 2:{int f,int g}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 5
  looping thru 2 args of 11:{int f,int g}:recinit (%9, %10)
  looping thru 0 args of 9:int:const 1
  looping thru 0 args of 10:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_14.whiley =====
assign 1 := 1
checking: 4:int:recfield %3 f
  looping thru 1 args of 4:int:recfield %3 f
  looping thru 1 args of 3:{int f}:read (%2)
  looping thru 1 args of 2:{Subtype_Valid_14:sr7nat f}:decl x = 1
  looping thru 1 args of 1:{int f}:recinit (%0)
  looping thru 0 args of 0:int:const 1
checking: 8:int:add (%6, %7)
  looping thru 2 args of 8:int:add (%6, %7)
  looping thru 1 args of 6:int:recfield %5 f
  looping thru 1 args of 5:{int f}:read (%2)
  looping thru 1 args of 2:{Subtype_Valid_14:sr7nat f}:decl x = 1
  looping thru 1 args of 1:{int f}:recinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 7:int:const 1
checking: 13:bool:eq (%10, %12)
  looping thru 2 args of 13:bool:eq (%10, %12)
  looping thru 1 args of 10:{int f}:read (%2)
  looping thru 1 args of 2:{Subtype_Valid_14:sr7nat f}:decl x = 1
  looping thru 1 args of 1:{int f}:recinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 12:{int f}:recinit (%11)
  looping thru 0 args of 11:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_2.whiley =====
assign 1 := 1
checking: 4:int:recfield %3 f
  looping thru 1 args of 4:int:recfield %3 f
  looping thru 1 args of 3:{int f}:read (%2)
  looping thru 1 args of 2:{int f}:decl x = 1
  looping thru 1 args of 1:{int f}:recinit (%0)
  looping thru 0 args of 0:int:const 1
checking: 8:int:add (%6, %7)
  looping thru 2 args of 8:int:add (%6, %7)
  looping thru 1 args of 6:int:recfield %5 f
  looping thru 1 args of 5:{int f}:read (%2)
  looping thru 1 args of 2:{int f}:decl x = 1
  looping thru 1 args of 1:{int f}:recinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 7:int:const 1
checking: 13:bool:eq (%10, %12)
  looping thru 2 args of 13:bool:eq (%10, %12)
  looping thru 1 args of 10:{int f}:read (%2)
  looping thru 1 args of 2:{int f}:decl x = 1
  looping thru 1 args of 1:{int f}:recinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 12:{int f}:recinit (%11)
  looping thru 0 args of 11:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_3.whiley =====
assign 1 := 1
checking: 11:int:recfield %10 f
  looping thru 1 args of 11:int:recfield %10 f
conjecture: 0 <= 0 && 0 < arraylen(x)
  looping thru 2 args of 10:{int f,int g}:arridx (%8, %9)
  looping thru 1 args of 8:{int f,int g}[]:read (%7)
  looping thru 1 args of 7:Subtype_Valid_3:sr8tup[]:decl x = 6
  looping thru 2 args of 6:{int f,int g}[]:arrinit (%2, %5)
  looping thru 2 args of 2:{int f,int g}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 3
  looping thru 2 args of 5:{int f,int g}:recinit (%3, %4)
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 4:int:const 8
  looping thru 0 args of 9:int:const 0
checking: 12:int:const 2
  looping thru 0 args of 12:int:const 2
wyboogie.NotImplementedYet: record update of complex expression in 13::assign (%11) = (%12)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:734)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Subtype_Valid_4.whiley =====
assign 1 := 1
checking: 11:int:recfield %10 f
  looping thru 1 args of 11:int:recfield %10 f
conjecture: 0 <= 0 && 0 < arraylen(x)
  looping thru 2 args of 10:{int f,int g}:arridx (%8, %9)
  looping thru 1 args of 8:{int f,int g}[]:read (%7)
  looping thru 1 args of 7:Subtype_Valid_4:sr8tup[]:decl x = 6
  looping thru 2 args of 6:{int f,int g}[]:arrinit (%2, %5)
  looping thru 2 args of 2:{int f,int g}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 3
  looping thru 2 args of 5:{int f,int g}:recinit (%3, %4)
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 4:int:const 8
  looping thru 0 args of 9:int:const 0
checking: 12:int:const 2
  looping thru 0 args of 12:int:const 2
wyboogie.NotImplementedYet: record update of complex expression in 13::assign (%11) = (%12)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:734)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Subtype_Valid_5.whiley =====
assign 1 := 1
checking: 11:int:recfield %10 f
  looping thru 1 args of 11:int:recfield %10 f
conjecture: 0 <= 0 && 0 < arraylen(x)
  looping thru 2 args of 10:{int f,int g}:arridx (%8, %9)
  looping thru 1 args of 8:{int f,int g}[]:read (%7)
  looping thru 1 args of 7:Subtype_Valid_5:sr9arr:decl x = 6
  looping thru 2 args of 6:{int f,int g}[]:arrinit (%2, %5)
  looping thru 2 args of 2:{int f,int g}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 2 args of 5:{int f,int g}:recinit (%3, %4)
  looping thru 0 args of 3:int:const 1
  looping thru 0 args of 4:int:const 8
  looping thru 0 args of 9:int:const 0
checking: 12:int:const 2
  looping thru 0 args of 12:int:const 2
wyboogie.NotImplementedYet: record update of complex expression in 13::assign (%11) = (%12)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:734)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Subtype_Valid_6.whiley =====
assign 1 := 1
checking: 11:int:recfield %10 f
  looping thru 1 args of 11:int:recfield %10 f
conjecture: 0 <= 0 && 0 < arraylen(x)
  looping thru 2 args of 10:{int f,int g}:arridx (%8, %9)
  looping thru 1 args of 8:{int f,int g}[]:read (%7)
  looping thru 1 args of 7:Subtype_Valid_6:sr9arr:decl x = 6
  looping thru 2 args of 6:{int f,int g}[]:arrinit (%2, %5)
  looping thru 2 args of 2:{int f,int g}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 2 args of 5:{int f,int g}:recinit (%3, %4)
  looping thru 0 args of 3:int:const 1
  looping thru 0 args of 4:int:const 8
  looping thru 0 args of 9:int:const 0
checking: 12:int:const 2
  looping thru 0 args of 12:int:const 2
wyboogie.NotImplementedYet: record update of complex expression in 13::assign (%11) = (%12)
	at wyboogie.Wyil2Boogie.writeAssign(Wyil2Boogie.java:734)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:606)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Subtype_Valid_7.whiley =====
assign 1 := 1
checking: 6:int:arridx (%4, %5)
conjecture: 0 <= 0 && 0 < arraylen(x)
  looping thru 2 args of 6:int:arridx (%4, %5)
  looping thru 1 args of 4:int[]:read (%3)
  looping thru 1 args of 3:int[]:decl x = 2
  looping thru 2 args of 2:int[]:arrinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 5:int:const 0
checking: 7:int:const 2
  looping thru 0 args of 7:int:const 2
checking: 13:bool:eq (%9, %12)
  looping thru 2 args of 13:bool:eq (%9, %12)
  looping thru 1 args of 9:int[]:read (%3)
  looping thru 1 args of 3:int[]:decl x = 2
  looping thru 2 args of 2:int[]:arrinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 2 args of 12:int[]:arrinit (%10, %11)
  looping thru 0 args of 10:int:const 2
  looping thru 0 args of 11:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_8.whiley =====
checking: 6:bool:eq (%3, %5)
  looping thru 2 args of 6:bool:eq (%3, %5)
  looping thru 1 args of 3:int[]:read (%2)
  looping thru 1 args of 2:Subtype_Valid_8:sr4list:decl x = 1
  looping thru 1 args of 1:int[]:arrinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 5:int[]:arrinit (%4)
  looping thru 0 args of 4:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_9.whiley =====
checking: 6:bool:eq (%3, %5)
  looping thru 2 args of 6:bool:eq (%3, %5)
  looping thru 1 args of 3:int[]:read (%2)
  looping thru 1 args of 2:Subtype_Valid_9:sr4list:decl x = 1
  looping thru 1 args of 1:int[]:arrinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 5:int[]:arrinit (%4)
  looping thru 0 args of 4:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Switch_Valid_1.whiley =====
checking: 2:int:read (%0)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
wyboogie.NotImplementedYet: switch in 13::switch
	at wyboogie.Wyil2Boogie.writeSwitch(Wyil2Boogie.java:915)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:652)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Switch_Valid_10.whiley =====
checking: 2:bool:read (%0)
  looping thru 1 args of 2:bool:read (%0)
  looping thru 0 args of 0:bool:decl x
wyboogie.NotImplementedYet: switch in 10::switch
	at wyboogie.Wyil2Boogie.writeSwitch(Wyil2Boogie.java:915)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:652)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Switch_Valid_11.whiley =====
checking: 9:int:read (%0)
  looping thru 1 args of 9:int:read (%0)
  looping thru 0 args of 0:int:decl x
wyboogie.NotImplementedYet: switch in 16::switch
	at wyboogie.Wyil2Boogie.writeSwitch(Wyil2Boogie.java:915)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:652)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Switch_Valid_12.whiley =====
checking: 2:int[]:read (%0)
  looping thru 1 args of 2:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl x
wyboogie.NotImplementedYet: switch in 10::switch
	at wyboogie.Wyil2Boogie.writeSwitch(Wyil2Boogie.java:915)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:652)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Switch_Valid_13.whiley =====
checking: 2:int:read (%0)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
wyboogie.NotImplementedYet: switch in 10::switch
	at wyboogie.Wyil2Boogie.writeSwitch(Wyil2Boogie.java:915)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:652)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Switch_Valid_2.whiley =====
checking: 3:int:read (%0)
  looping thru 1 args of 3:int:read (%0)
  looping thru 0 args of 0:int:decl x
wyboogie.NotImplementedYet: switch in 18::switch
	at wyboogie.Wyil2Boogie.writeSwitch(Wyil2Boogie.java:915)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:652)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Switch_Valid_3.whiley =====
checking: 11:int:read (%9)
  looping thru 1 args of 11:int:read (%9)
  looping thru 1 args of 9:int:decl c = 8
conjecture: 0 <= 0 && 0 < arraylen(input)
  looping thru 2 args of 8:int:arridx (%6, %7)
  looping thru 1 args of 6:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl input
  looping thru 0 args of 7:int:const 0
wyboogie.NotImplementedYet: switch in 36::switch
	at wyboogie.Wyil2Boogie.writeSwitch(Wyil2Boogie.java:915)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:652)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Switch_Valid_4.whiley =====
checking: 2:Switch_Valid_4:RGB:read (%0)
  looping thru 1 args of 2:Switch_Valid_4:RGB:read (%0)
  looping thru 0 args of 0:Switch_Valid_4:RGB:decl c
wyboogie.NotImplementedYet: switch in 12::switch
	at wyboogie.Wyil2Boogie.writeSwitch(Wyil2Boogie.java:915)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:652)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Switch_Valid_5.whiley =====
checking: 2:int:read (%0)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl type
wyboogie.NotImplementedYet: switch in 21::switch
	at wyboogie.Wyil2Boogie.writeSwitch(Wyil2Boogie.java:915)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:652)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Switch_Valid_6.whiley =====
checking: 2:int:read (%0)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
wyboogie.NotImplementedYet: switch in 10::switch
	at wyboogie.Wyil2Boogie.writeSwitch(Wyil2Boogie.java:915)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:652)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Switch_Valid_7.whiley =====
checking: 12:int:read (%0)
  looping thru 1 args of 12:int:read (%0)
  looping thru 0 args of 0:int:decl x
wyboogie.NotImplementedYet: switch in 19::switch
	at wyboogie.Wyil2Boogie.writeSwitch(Wyil2Boogie.java:915)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:652)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Switch_Valid_8.whiley =====
checking: 2:int:read (%1)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 1
wyboogie.NotImplementedYet: switch in 11::switch
	at wyboogie.Wyil2Boogie.writeSwitch(Wyil2Boogie.java:915)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:652)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Switch_Valid_9.whiley =====
checking: 5:int:read (%0)
  looping thru 1 args of 5:int:read (%0)
  looping thru 0 args of 0:int:decl x
wyboogie.NotImplementedYet: switch in 12::switch
	at wyboogie.Wyil2Boogie.writeSwitch(Wyil2Boogie.java:915)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:652)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== Syntax_Valid_1.whiley =====
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== TypeEquals_Valid_1.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_1:expr:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_1:expr:decl e
  looping thru 0 args of 3:type:const int
checking: 7:bool:const true
  looping thru 0 args of 7:bool:const true
checking: 10:bool:const false
  looping thru 0 args of 10:bool:const false
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:bool:call TypeEquals_Valid_1:f(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_1:expr:decl e = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 4:bool:const true
assign 1 := 1
checking: 7:int:read (%1)
  looping thru 1 args of 7:int:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_1:expr:decl e = 0
  looping thru 0 args of 0:int:const 1
checking: 10:{int x,int y}:recinit (%8, %9)
  looping thru 2 args of 10:{int x,int y}:recinit (%8, %9)
  looping thru 0 args of 8:int:const 1
  looping thru 0 args of 9:int:const 2
checking: 15:bool:eq (%13, %14)
  looping thru 2 args of 15:bool:eq (%13, %14)
  looping thru 1 args of 13:bool:call TypeEquals_Valid_1:f(%12)
  looping thru 1 args of 12:{int x,int y}:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_1:expr:decl e = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 14:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_10.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_10:Rtypes:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_10:Rtypes:decl e
  looping thru 0 args of 3:type:const {int x,int y}
checking: 7:bool:const true
  looping thru 0 args of 7:bool:const true
checking: 10:bool:const false
  looping thru 0 args of 10:bool:const false
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:bool:call TypeEquals_Valid_10:f(%2)
  looping thru 2 args of 2:{int x,int y}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 4:bool:const true
checking: 12:bool:eq (%10, %11)
  looping thru 2 args of 12:bool:eq (%10, %11)
  looping thru 1 args of 10:bool:call TypeEquals_Valid_10:f(%9)
  looping thru 2 args of 9:{int x,int z}:recinit (%7, %8)
  looping thru 0 args of 7:int:const 3
  looping thru 0 args of 8:int:const 1
  looping thru 0 args of 11:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_11.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_11:Rtypes:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_11:Rtypes:decl e
  looping thru 0 args of 3:type:const {int x,int z}
checking: 7:bool:const true
  looping thru 0 args of 7:bool:const true
checking: 10:bool:const false
  looping thru 0 args of 10:bool:const false
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:bool:call TypeEquals_Valid_11:f(%2)
  looping thru 2 args of 2:{bool x,bool y}:recinit (%0, %1)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const false
  looping thru 0 args of 4:bool:const false
checking: 12:bool:eq (%10, %11)
  looping thru 2 args of 12:bool:eq (%10, %11)
  looping thru 1 args of 10:bool:call TypeEquals_Valid_11:f(%9)
  looping thru 2 args of 9:{bool x,bool y}:recinit (%7, %8)
  looping thru 0 args of 7:bool:const true
  looping thru 0 args of 8:bool:const true
  looping thru 0 args of 11:bool:const false
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:bool:call TypeEquals_Valid_11:f(%16)
  looping thru 2 args of 16:{int x,int z}:recinit (%14, %15)
  looping thru 0 args of 14:int:const 1
  looping thru 0 args of 15:int:const 1
  looping thru 0 args of 18:bool:const true
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_12.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_12:expr:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_12:expr:decl e
  looping thru 0 args of 3:type:const int
checking: 7:bool:const true
  looping thru 0 args of 7:bool:const true
checking: 10:bool:const false
  looping thru 0 args of 10:bool:const false
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:bool:call TypeEquals_Valid_12:f(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_12:expr:decl e = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 4:bool:const true
assign 1 := 1
checking: 7:int:read (%1)
  looping thru 1 args of 7:int:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_12:expr:decl e = 0
  looping thru 0 args of 0:int:const 1
checking: 10:{int x,int y}:recinit (%8, %9)
  looping thru 2 args of 10:{int x,int y}:recinit (%8, %9)
  looping thru 0 args of 8:int:const 1
  looping thru 0 args of 9:int:const 2
checking: 15:bool:eq (%13, %14)
  looping thru 2 args of 15:bool:eq (%13, %14)
  looping thru 1 args of 13:bool:call TypeEquals_Valid_12:f(%12)
  looping thru 1 args of 12:{int x,int y}:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_12:expr:decl e = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 14:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_14.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_14:src:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_14:src:decl e
  looping thru 0 args of 3:type:const TypeEquals_Valid_14:test
checking: 7:bool:const true
  looping thru 0 args of 7:bool:const true
checking: 10:bool:const false
  looping thru 0 args of 10:bool:const false
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:bool:call TypeEquals_Valid_14:f(%1)
  looping thru 1 args of 1:{int x}:recinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 3:bool:const true
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 1 args of 8:bool:call TypeEquals_Valid_14:f(%7)
  looping thru 1 args of 7:{int y}:recinit (%6)
  looping thru 0 args of 6:int:const 2
  looping thru 0 args of 9:bool:const true
checking: 15:bool:eq (%13, %14)
  looping thru 2 args of 15:bool:eq (%13, %14)
  looping thru 1 args of 13:bool:call TypeEquals_Valid_14:f(%12)
  looping thru 0 args of 12:int:const 1
  looping thru 0 args of 14:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_15.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_15:src:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_15:src:decl e
  looping thru 0 args of 3:type:const any[]
checking: 7:bool:const true
  looping thru 0 args of 7:bool:const true
checking: 10:bool:const false
  looping thru 0 args of 10:bool:const false
checking: 6:bool:eq (%4, %5)
  looping thru 2 args of 6:bool:eq (%4, %5)
  looping thru 1 args of 4:bool:call TypeEquals_Valid_15:f(%3)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 5:bool:const true
checking: 15:bool:eq (%13, %14)
  looping thru 2 args of 15:bool:eq (%13, %14)
  looping thru 1 args of 13:bool:call TypeEquals_Valid_15:f(%12)
  looping thru 2 args of 12:int[][]:arrinit (%9, %11)
  looping thru 1 args of 9:int[]:arrinit (%8)
  looping thru 0 args of 8:int:const 1
  looping thru 1 args of 11:int[]:arrinit (%10)
  looping thru 0 args of 10:int:const 2
  looping thru 0 args of 14:bool:const true
checking: 20:bool:eq (%18, %19)
  looping thru 2 args of 20:bool:eq (%18, %19)
  looping thru 1 args of 18:bool:call TypeEquals_Valid_15:f(%17)
  looping thru 0 args of 17:int:const 1
  looping thru 0 args of 19:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_16.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_16:src:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_16:src:decl e
  looping thru 0 args of 3:type:const any[]
checking: 7:bool:const true
  looping thru 0 args of 7:bool:const true
checking: 10:bool:const false
  looping thru 0 args of 10:bool:const false
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:bool:call TypeEquals_Valid_16:f(%1)
  looping thru 1 args of 1:int[]:arrinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 3:bool:const true
checking: 11:bool:eq (%9, %10)
  looping thru 2 args of 11:bool:eq (%9, %10)
  looping thru 1 args of 9:bool:call TypeEquals_Valid_16:f(%8)
  looping thru 1 args of 8:int[][]:arrinit (%7)
  looping thru 1 args of 7:int[]:arrinit (%6)
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 10:bool:const true
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:bool:call TypeEquals_Valid_16:f(%16)
  looping thru 1 args of 16:int[][][]:arrinit (%15)
  looping thru 1 args of 15:int[][]:arrinit (%14)
  looping thru 1 args of 14:int[]:arrinit (%13)
  looping thru 0 args of 13:int:const 1
  looping thru 0 args of 18:bool:const true
checking: 24:bool:eq (%22, %23)
  looping thru 2 args of 24:bool:eq (%22, %23)
  looping thru 1 args of 22:bool:call TypeEquals_Valid_16:f(%21)
  looping thru 0 args of 21:int:const 1
  looping thru 0 args of 23:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_17.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_17:rlist:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_17:rlist:decl l
  looping thru 0 args of 3:type:const bool
checking: 7:int:const 0
  looping thru 0 args of 7:int:const 0
checking: 11:int:arrlen (%10)
  looping thru 1 args of 11:int:arrlen (%10)
  looping thru 1 args of 10:TypeEquals_Valid_17:rlist:read (%5)
  looping thru 1 args of 5:TypeEquals_Valid_17:rlist:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_17:rlist:decl l
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call TypeEquals_Valid_17:f(%0)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 2:int:const 0
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:call TypeEquals_Valid_17:f(%5)
  looping thru 0 args of 5:bool:const false
  looping thru 0 args of 7:int:const 0
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 1 args of 14:int:call TypeEquals_Valid_17:f(%13)
  looping thru 3 args of 13:int[]:arrinit (%10, %11, %12)
  looping thru 0 args of 10:int:const 1
  looping thru 0 args of 11:int:const 2
  looping thru 0 args of 12:int:const 3
  looping thru 0 args of 15:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_18.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_18:intr[]:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_18:intr[]:decl e
  looping thru 0 args of 3:type:const int[]
checking: 7:void[]:read (%4)
  looping thru 1 args of 7:void[]:read (%4)
  looping thru 1 args of 4:void[]:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_18:intr[]:decl e
checking: 13:int[]:arrinit (%10, %11, %12)
  looping thru 3 args of 13:int[]:arrinit (%10, %11, %12)
  looping thru 0 args of 10:int:const 1
  looping thru 0 args of 11:int:const 2
  looping thru 0 args of 12:int:const 3
checking: 17:bool:eq (%8, %16)
  looping thru 2 args of 17:bool:eq (%8, %16)
  looping thru 1 args of 8:int[]:call TypeEquals_Valid_18:f(%7)
  looping thru 7 args of 7:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 4:int:const 5
  looping thru 0 args of 5:int:const 6
  looping thru 0 args of 6:int:const 7
  looping thru 7 args of 16:int[]:arrinit (%9, %10, %11, %12, %13, %14, %15)
  looping thru 0 args of 9:int:const 1
  looping thru 0 args of 10:int:const 2
  looping thru 0 args of 11:int:const 3
  looping thru 0 args of 12:int:const 4
  looping thru 0 args of 13:int:const 5
  looping thru 0 args of 14:int:const 6
  looping thru 0 args of 15:int:const 7
checking: 26:bool:eq (%22, %25)
  looping thru 2 args of 26:bool:eq (%22, %25)
  looping thru 1 args of 22:int[]:call TypeEquals_Valid_18:f(%21)
  looping thru 2 args of 21:int[]:arrgen (%19, %20)
  looping thru 0 args of 19:int:const 0
  looping thru 0 args of 20:int:const 0
  looping thru 2 args of 25:int[]:arrgen (%23, %24)
  looping thru 0 args of 23:int:const 0
  looping thru 0 args of 24:int:const 0
checking: 37:bool:eq (%32, %36)
  looping thru 2 args of 37:bool:eq (%32, %36)
  looping thru 1 args of 32:int[]:call TypeEquals_Valid_18:f(%31)
  looping thru 3 args of 31:bool|int[]:arrinit (%28, %29, %30)
  looping thru 0 args of 28:int:const 1
  looping thru 0 args of 29:int:const 2
  looping thru 0 args of 30:bool:const true
  looping thru 3 args of 36:int[]:arrinit (%33, %34, %35)
  looping thru 0 args of 33:int:const 1
  looping thru 0 args of 34:int:const 2
  looping thru 0 args of 35:int:const 3
checking: 48:bool:eq (%43, %47)
  looping thru 2 args of 48:bool:eq (%43, %47)
  looping thru 1 args of 43:int[]:call TypeEquals_Valid_18:f(%42)
  looping thru 3 args of 42:bool|int[]:arrinit (%39, %40, %41)
  looping thru 0 args of 39:bool:const false
  looping thru 0 args of 40:int:const 2
  looping thru 0 args of 41:bool:const true
  looping thru 3 args of 47:int[]:arrinit (%44, %45, %46)
  looping thru 0 args of 44:int:const 1
  looping thru 0 args of 45:int:const 2
  looping thru 0 args of 46:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_19.whiley =====
checking: 11:bool:land (%6, %10)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_19:intr[][]:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_19:intr[][]:decl e
  looping thru 0 args of 3:type:const int[][]
  looping thru 2 args of 10:bool:gt (%8, %9)
  looping thru 1 args of 8:int:arrlen (%7)
  looping thru 1 args of 7:void[][]:read (%4)
  looping thru 1 args of 4:void[][]:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_19:intr[][]:decl e
  looping thru 0 args of 9:int:const 0
checking: 15:void[]:arridx (%13, %14)
conjecture: 0 <= 0 && 0 < arraylen(e)
  looping thru 2 args of 15:void[]:arridx (%13, %14)
  looping thru 1 args of 13:void[][]:read (%4)
  looping thru 1 args of 4:void[][]:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_19:intr[][]:decl e
  looping thru 0 args of 14:int:const 0
checking: 21:int[]:arrinit (%18, %19, %20)
  looping thru 3 args of 21:int[]:arrinit (%18, %19, %20)
  looping thru 0 args of 18:int:const 1
  looping thru 0 args of 19:int:const 2
  looping thru 0 args of 20:int:const 3
checking: 18:bool:eq (%9, %17)
  looping thru 2 args of 18:bool:eq (%9, %17)
  looping thru 1 args of 9:int[]:call TypeEquals_Valid_19:f(%8)
  looping thru 1 args of 8:int[][]:arrinit (%7)
  looping thru 7 args of 7:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 4:int:const 5
  looping thru 0 args of 5:int:const 6
  looping thru 0 args of 6:int:const 7
  looping thru 7 args of 17:int[]:arrinit (%10, %11, %12, %13, %14, %15, %16)
  looping thru 0 args of 10:int:const 1
  looping thru 0 args of 11:int:const 2
  looping thru 0 args of 12:int:const 3
  looping thru 0 args of 13:int:const 4
  looping thru 0 args of 14:int:const 5
  looping thru 0 args of 15:int:const 6
  looping thru 0 args of 16:int:const 7
checking: 28:bool:eq (%24, %27)
  looping thru 2 args of 28:bool:eq (%24, %27)
  looping thru 1 args of 24:int[]:call TypeEquals_Valid_19:f(%23)
  looping thru 1 args of 23:int[][]:arrinit (%22)
  looping thru 2 args of 22:int[]:arrgen (%20, %21)
  looping thru 0 args of 20:int:const 0
  looping thru 0 args of 21:int:const 0
  looping thru 2 args of 27:int[]:arrgen (%25, %26)
  looping thru 0 args of 25:int:const 0
  looping thru 0 args of 26:int:const 0
checking: 40:bool:eq (%35, %39)
  looping thru 2 args of 40:bool:eq (%35, %39)
  looping thru 1 args of 35:int[]:call TypeEquals_Valid_19:f(%34)
  looping thru 1 args of 34:bool|int[][]:arrinit (%33)
  looping thru 3 args of 33:bool|int[]:arrinit (%30, %31, %32)
  looping thru 0 args of 30:int:const 1
  looping thru 0 args of 31:int:const 2
  looping thru 0 args of 32:bool:const false
  looping thru 3 args of 39:int[]:arrinit (%36, %37, %38)
  looping thru 0 args of 36:int:const 1
  looping thru 0 args of 37:int:const 2
  looping thru 0 args of 38:int:const 3
checking: 52:bool:eq (%47, %51)
  looping thru 2 args of 52:bool:eq (%47, %51)
  looping thru 1 args of 47:int[]:call TypeEquals_Valid_19:f(%46)
  looping thru 1 args of 46:bool|int[][]:arrinit (%45)
  looping thru 3 args of 45:bool|int[]:arrinit (%42, %43, %44)
  looping thru 0 args of 42:bool:const true
  looping thru 0 args of 43:int:const 2
  looping thru 0 args of 44:bool:const true
  looping thru 3 args of 51:int[]:arrinit (%48, %49, %50)
  looping thru 0 args of 48:int:const 1
  looping thru 0 args of 49:int:const 2
  looping thru 0 args of 50:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_2.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_2:expr:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_2:expr:decl e
  looping thru 0 args of 3:type:const {int[] err}
checking: 9:int:arrlen (%8)
  looping thru 1 args of 9:int:arrlen (%8)
  looping thru 1 args of 8:int[]:recfield %7 err
  looping thru 1 args of 7:{int[] err}:read (%4)
  looping thru 1 args of 4:{int[] err}:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_2:expr:decl e
checking: 13:int:neg (%12)
  looping thru 1 args of 13:int:neg (%12)
  looping thru 0 args of 12:int:const 1
checking: 6:bool:eq (%4, %5)
  looping thru 2 args of 6:bool:eq (%4, %5)
  looping thru 1 args of 4:int:read (%3)
  looping thru 1 args of 3:int:decl x = 2
  looping thru 1 args of 2:int:call TypeEquals_Valid_2:f(%1)
  looping thru 1 args of 1:{int[] err}:recinit (%0)
  looping thru 0 args of 0:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 5:int:const 11
assign 1 := 1
checking: 8:int:read (%3)
  looping thru 1 args of 8:int:read (%3)
  looping thru 1 args of 3:int:decl x = 2
  looping thru 1 args of 2:int:call TypeEquals_Valid_2:f(%1)
  looping thru 1 args of 1:{int[] err}:recinit (%0)
  looping thru 0 args of 0:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
checking: 13:int:call TypeEquals_Valid_2:f(%12)
  looping thru 1 args of 13:int:call TypeEquals_Valid_2:f(%12)
  looping thru 2 args of 12:{{int[] err} lhs,int op}:recinit (%10, %11)
  looping thru 1 args of 10:{int[] err}:recinit (%9)
  looping thru 0 args of 9:int[]:const [71,111,116,99,104,97]
  looping thru 0 args of 11:int:const 1
checking: 18:bool:eq (%15, %17)
  looping thru 2 args of 18:bool:eq (%15, %17)
  looping thru 1 args of 15:int:read (%3)
  looping thru 1 args of 3:int:decl x = 2
  looping thru 1 args of 2:int:call TypeEquals_Valid_2:f(%1)
  looping thru 1 args of 1:{int[] err}:recinit (%0)
  looping thru 0 args of 0:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 1 args of 17:int:neg (%16)
  looping thru 0 args of 16:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_21.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_21:expr:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_21:expr:decl e
  looping thru 0 args of 3:type:const int[]
checking: 7:bool:const true
  looping thru 0 args of 7:bool:const true
checking: 10:bool:const false
  looping thru 0 args of 10:bool:const false
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:bool:call TypeEquals_Valid_21:f(%2)
  looping thru 1 args of 2:bool:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_21:expr:decl e = 0
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 4:bool:const false
assign 1 := 1
checking: 7:bool:read (%1)
  looping thru 1 args of 7:bool:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_21:expr:decl e = 0
  looping thru 0 args of 0:bool:const true
checking: 12:int[]:arrinit (%8, %9, %10, %11)
  looping thru 4 args of 12:int[]:arrinit (%8, %9, %10, %11)
  looping thru 0 args of 8:int:const 1
  looping thru 0 args of 9:int:const 2
  looping thru 0 args of 10:int:const 3
  looping thru 0 args of 11:int:const 4
checking: 17:bool:eq (%15, %16)
  looping thru 2 args of 17:bool:eq (%15, %16)
  looping thru 1 args of 15:bool:call TypeEquals_Valid_21:f(%14)
  looping thru 1 args of 14:int[]:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_21:expr:decl e = 0
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 16:bool:const true
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_23.whiley =====
Error compiling TypeEquals_Valid_23.whiley
./TypeEquals_Valid_23.whiley:3: unknown variable
type bop is {int y, int x} where x > 0
                                 ^

===== TypeEquals_Valid_24.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_24:T:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_24:T:decl x
  looping thru 0 args of 3:type:const int[]
checking: 8:int:arrlen (%7)
  looping thru 1 args of 8:int:arrlen (%7)
  looping thru 1 args of 7:int[]:read (%4)
  looping thru 1 args of 4:int[]:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_24:T:decl x
checking: 11:TypeEquals_Valid_24:T:read (%5)
  looping thru 1 args of 11:TypeEquals_Valid_24:T:read (%5)
  looping thru 1 args of 5:TypeEquals_Valid_24:T:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_24:T:decl x
checking: 7:bool:eq (%5, %6)
  looping thru 2 args of 7:bool:eq (%5, %6)
  looping thru 1 args of 5:int:call TypeEquals_Valid_24:f(%4)
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 6:int:const 4
checking: 12:bool:eq (%10, %11)
  looping thru 2 args of 12:bool:eq (%10, %11)
  looping thru 1 args of 10:int:call TypeEquals_Valid_24:f(%9)
  looping thru 0 args of 9:int:const 123
  looping thru 0 args of 11:int:const 123
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_25.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_25:Expr:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_25:Expr:decl e
  looping thru 0 args of 3:type:const int
checking: 7:int:read (%4)
  looping thru 1 args of 7:int:read (%4)
  looping thru 1 args of 4:int:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_25:Expr:decl e
checking: 14:bool:istype (%10, %11)
  looping thru 2 args of 14:bool:istype (%10, %11)
  looping thru 1 args of 10:TypeEquals_Valid_25:Expr:read (%5)
  looping thru 1 args of 5:TypeEquals_Valid_25:Expr:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_25:Expr:decl e
  looping thru 0 args of 11:type:const TypeEquals_Valid_25:BinOp
checking: 17:TypeEquals_Valid_25:Value:call TypeEquals_Valid_25:evaluate(%16)
  looping thru 1 args of 17:TypeEquals_Valid_25:Value:call TypeEquals_Valid_25:evaluate(%16)
  looping thru 1 args of 16:X<int|X[]|{X index,X src}|{X lhs,int op,X rhs}>:recfield %15 lhs
  looping thru 1 args of 15:X<{Y<X|int|Y[]|{Y index,Y src}> lhs,int op,Y<X|int|Y[]|{Y index,Y src}> rhs}>:read (%12)
  looping thru 1 args of 12:X<{Y<X|int|Y[]|{Y index,Y src}> lhs,int op,Y<X|int|Y[]|{Y index,Y src}> rhs}>:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_25:Expr:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_25:Expr:decl e
checking: 24:bool:istype (%20, %21)
  looping thru 2 args of 24:bool:istype (%20, %21)
  looping thru 1 args of 20:TypeEquals_Valid_25:Expr:read (%13)
  looping thru 1 args of 13:TypeEquals_Valid_25:Expr:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_25:Expr:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_25:Expr:decl e
  looping thru 0 args of 21:type:const TypeEquals_Valid_25:Expr[]
checking: 27:int[]:arrgen (%25, %26)
  looping thru 2 args of 27:int[]:arrgen (%25, %26)
  looping thru 0 args of 25:int:const 0
  looping thru 0 args of 26:int:const 0
checking: 34:bool:istype (%30, %31)
  looping thru 2 args of 34:bool:istype (%30, %31)
  looping thru 1 args of 30:TypeEquals_Valid_25:Expr:read (%23)
  looping thru 1 args of 23:TypeEquals_Valid_25:Expr:alias (%13)
  looping thru 1 args of 13:TypeEquals_Valid_25:Expr:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_25:Expr:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_25:Expr:decl e
  looping thru 0 args of 31:type:const TypeEquals_Valid_25:ListAccess
checking: 63:bool:land (%47, %61)
  looping thru 2 args of 47:bool:istype (%43, %44)
  looping thru 1 args of 43:TypeEquals_Valid_25:Value:read (%38)
  looping thru 1 args of 38:TypeEquals_Valid_25:Value:decl src = 37
  looping thru 1 args of 37:TypeEquals_Valid_25:Value:call TypeEquals_Valid_25:evaluate(%36)
  looping thru 1 args of 36:X<int|X[]|{X index,X src}|{X lhs,int op,X rhs}>:recfield %35 src
  looping thru 1 args of 35:X<{Y<X|int|Y[]|{Y lhs,int op,Y rhs}> index,Y<X|int|Y[]|{Y lhs,int op,Y rhs}> src}>:read (%32)
  looping thru 1 args of 32:X<{Y<X|int|Y[]|{Y lhs,int op,Y rhs}> index,Y<X|int|Y[]|{Y lhs,int op,Y rhs}> src}>:alias (%23)
  looping thru 1 args of 23:TypeEquals_Valid_25:Expr:alias (%13)
  looping thru 1 args of 13:TypeEquals_Valid_25:Expr:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_25:Expr:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_25:Expr:decl e
  looping thru 0 args of 44:type:const TypeEquals_Valid_25:Value[]
  looping thru 2 args of 52:bool:istype (%48, %49)
  looping thru 1 args of 48:TypeEquals_Valid_25:Value:read (%42)
  looping thru 1 args of 42:TypeEquals_Valid_25:Value:decl index = 41
  looping thru 1 args of 41:TypeEquals_Valid_25:Value:call TypeEquals_Valid_25:evaluate(%40)
  looping thru 1 args of 40:X<int|X[]|{X index,X src}|{X lhs,int op,X rhs}>:recfield %39 index
  looping thru 1 args of 39:X<{Y<X|int|Y[]|{Y lhs,int op,Y rhs}> index,Y<X|int|Y[]|{Y lhs,int op,Y rhs}> src}>:read (%32)
  looping thru 1 args of 32:X<{Y<X|int|Y[]|{Y lhs,int op,Y rhs}> index,Y<X|int|Y[]|{Y lhs,int op,Y rhs}> src}>:alias (%23)
  looping thru 1 args of 23:TypeEquals_Valid_25:Expr:alias (%13)
  looping thru 1 args of 13:TypeEquals_Valid_25:Expr:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_25:Expr:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_25:Expr:decl e
  looping thru 0 args of 49:type:const int
  looping thru 2 args of 55:bool:gteq (%53, %54)
  looping thru 1 args of 53:int:read (%50)
  looping thru 1 args of 50:int:alias (%42)
  looping thru 1 args of 42:TypeEquals_Valid_25:Value:decl index = 41
  looping thru 1 args of 41:TypeEquals_Valid_25:Value:call TypeEquals_Valid_25:evaluate(%40)
  looping thru 1 args of 40:X<int|X[]|{X index,X src}|{X lhs,int op,X rhs}>:recfield %39 index
  looping thru 1 args of 39:X<{Y<X|int|Y[]|{Y lhs,int op,Y rhs}> index,Y<X|int|Y[]|{Y lhs,int op,Y rhs}> src}>:read (%32)
  looping thru 1 args of 32:X<{Y<X|int|Y[]|{Y lhs,int op,Y rhs}> index,Y<X|int|Y[]|{Y lhs,int op,Y rhs}> src}>:alias (%23)
  looping thru 1 args of 23:TypeEquals_Valid_25:Expr:alias (%13)
  looping thru 1 args of 13:TypeEquals_Valid_25:Expr:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_25:Expr:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_25:Expr:decl e
  looping thru 0 args of 54:int:const 0
  looping thru 2 args of 59:bool:lt (%56, %58)
  looping thru 1 args of 56:int:read (%50)
  looping thru 1 args of 50:int:alias (%42)
  looping thru 1 args of 42:TypeEquals_Valid_25:Value:decl index = 41
  looping thru 1 args of 41:TypeEquals_Valid_25:Value:call TypeEquals_Valid_25:evaluate(%40)
  looping thru 1 args of 40:X<int|X[]|{X index,X src}|{X lhs,int op,X rhs}>:recfield %39 index
  looping thru 1 args of 39:X<{Y<X|int|Y[]|{Y lhs,int op,Y rhs}> index,Y<X|int|Y[]|{Y lhs,int op,Y rhs}> src}>:read (%32)
  looping thru 1 args of 32:X<{Y<X|int|Y[]|{Y lhs,int op,Y rhs}> index,Y<X|int|Y[]|{Y lhs,int op,Y rhs}> src}>:alias (%23)
  looping thru 1 args of 23:TypeEquals_Valid_25:Expr:alias (%13)
  looping thru 1 args of 13:TypeEquals_Valid_25:Expr:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_25:Expr:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_25:Expr:decl e
  looping thru 1 args of 58:int:arrlen (%57)
  looping thru 1 args of 57:X<X|int[]>:read (%45)
  looping thru 1 args of 45:X<X|int[]>:alias (%38)
  looping thru 1 args of 38:TypeEquals_Valid_25:Value:decl src = 37
  looping thru 1 args of 37:TypeEquals_Valid_25:Value:call TypeEquals_Valid_25:evaluate(%36)
  looping thru 1 args of 36:X<int|X[]|{X index,X src}|{X lhs,int op,X rhs}>:recfield %35 src
  looping thru 1 args of 35:X<{Y<X|int|Y[]|{Y lhs,int op,Y rhs}> index,Y<X|int|Y[]|{Y lhs,int op,Y rhs}> src}>:read (%32)
  looping thru 1 args of 32:X<{Y<X|int|Y[]|{Y lhs,int op,Y rhs}> index,Y<X|int|Y[]|{Y lhs,int op,Y rhs}> src}>:alias (%23)
  looping thru 1 args of 23:TypeEquals_Valid_25:Expr:alias (%13)
  looping thru 1 args of 13:TypeEquals_Valid_25:Expr:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_25:Expr:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_25:Expr:decl e
checking: 68:X<int|X[]>:arridx (%66, %67)
conjecture: 0 <= toInt(index) && toInt(index) < arraylen(src)
  looping thru 2 args of 68:X<int|X[]>:arridx (%66, %67)
  looping thru 1 args of 66:X<X|int[]>:read (%45)
  looping thru 1 args of 45:X<X|int[]>:alias (%38)
  looping thru 1 args of 38:TypeEquals_Valid_25:Value:decl src = 37
  looping thru 1 args of 37:TypeEquals_Valid_25:Value:call TypeEquals_Valid_25:evaluate(%36)
  looping thru 1 args of 36:X<int|X[]|{X index,X src}|{X lhs,int op,X rhs}>:recfield %35 src
  looping thru 1 args of 35:X<{Y<X|int|Y[]|{Y lhs,int op,Y rhs}> index,Y<X|int|Y[]|{Y lhs,int op,Y rhs}> src}>:read (%32)
  looping thru 1 args of 32:X<{Y<X|int|Y[]|{Y lhs,int op,Y rhs}> index,Y<X|int|Y[]|{Y lhs,int op,Y rhs}> src}>:alias (%23)
  looping thru 1 args of 23:TypeEquals_Valid_25:Expr:alias (%13)
  looping thru 1 args of 13:TypeEquals_Valid_25:Expr:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_25:Expr:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_25:Expr:decl e
  looping thru 1 args of 67:int:read (%50)
  looping thru 1 args of 50:int:alias (%42)
  looping thru 1 args of 42:TypeEquals_Valid_25:Value:decl index = 41
  looping thru 1 args of 41:TypeEquals_Valid_25:Value:call TypeEquals_Valid_25:evaluate(%40)
  looping thru 1 args of 40:X<int|X[]|{X index,X src}|{X lhs,int op,X rhs}>:recfield %39 index
  looping thru 1 args of 39:X<{Y<X|int|Y[]|{Y lhs,int op,Y rhs}> index,Y<X|int|Y[]|{Y lhs,int op,Y rhs}> src}>:read (%32)
  looping thru 1 args of 32:X<{Y<X|int|Y[]|{Y lhs,int op,Y rhs}> index,Y<X|int|Y[]|{Y lhs,int op,Y rhs}> src}>:alias (%23)
  looping thru 1 args of 23:TypeEquals_Valid_25:Expr:alias (%13)
  looping thru 1 args of 13:TypeEquals_Valid_25:Expr:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_25:Expr:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_25:Expr:decl e
checking: 71:int:const 0
  looping thru 0 args of 71:int:const 0
checking: 76:int:const 0
  looping thru 0 args of 76:int:const 0
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 1 args of 8:TypeEquals_Valid_25:Value:read (%7)
  looping thru 1 args of 7:TypeEquals_Valid_25:Value:decl v = 6
  looping thru 1 args of 6:TypeEquals_Valid_25:Value:call TypeEquals_Valid_25:evaluate(%5)
  looping thru 1 args of 5:{int lhs,int op,int rhs}:read (%4)
  looping thru 1 args of 4:TypeEquals_Valid_25:Expr:decl e = 3
  looping thru 3 args of 3:{int lhs,int op,int rhs}:recinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 123
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 9:int:const 123
assign 1 := 1
checking: 12:{int lhs,int op,int rhs}:read (%4)
  looping thru 1 args of 12:{int lhs,int op,int rhs}:read (%4)
  looping thru 1 args of 4:TypeEquals_Valid_25:Expr:decl e = 3
  looping thru 3 args of 3:{int lhs,int op,int rhs}:recinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 123
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 2:int:const 1
checking: 14:int[]:arrinit (%13)
  looping thru 1 args of 14:int[]:arrinit (%13)
  looping thru 0 args of 13:int:const 1
checking: 21:bool:eq (%17, %20)
  looping thru 2 args of 21:bool:eq (%17, %20)
  looping thru 1 args of 17:TypeEquals_Valid_25:Value:call TypeEquals_Valid_25:evaluate(%16)
  looping thru 1 args of 16:int[]:read (%4)
  looping thru 1 args of 4:TypeEquals_Valid_25:Expr:decl e = 3
  looping thru 3 args of 3:{int lhs,int op,int rhs}:recinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 123
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 2:int:const 1
  looping thru 2 args of 20:int[]:arrgen (%18, %19)
  looping thru 0 args of 18:int:const 0
  looping thru 0 args of 19:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_27.whiley =====
mangle test : method()->() to test$2
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_27:Points:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_27:Points:decl t
  looping thru 0 args of 3:type:const TypeEquals_Valid_27:Point
checking: 7:bool:const true
  looping thru 0 args of 7:bool:const true
checking: 10:bool:const false
  looping thru 0 args of 10:bool:const false
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:bool:call TypeEquals_Valid_27:test(%5)
  looping thru 1 args of 5:{int x,int y,int z}:read (%4)
  looping thru 1 args of 4:TypeEquals_Valid_27:Point3D:decl p3d = 3
  looping thru 3 args of 3:{int x,int y,int z}:recinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 7:bool:const false
wyboogie.NotImplementedYet: call to method (test) from inside an expression in 6:bool:call TypeEquals_Valid_27:test(%5)
	at wyboogie.Wyil2Boogie.writeInvoke(Wyil2Boogie.java:1151)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:972)
	at wyboogie.Wyil2Boogie.writeEquality(Wyil2Boogie.java:1237)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1032)
	at wyboogie.Wyil2Boogie.boolExpr(Wyil2Boogie.java:934)
	at wyboogie.Wyil2Boogie.writeAssume(Wyil2Boogie.java:703)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:598)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== TypeEquals_Valid_28.whiley =====
mangle test : method()->() to test$2
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_28:Points:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_28:Points:decl t
  looping thru 0 args of 3:type:const TypeEquals_Valid_28:Point3D
checking: 7:bool:const true
  looping thru 0 args of 7:bool:const true
checking: 10:bool:const false
  looping thru 0 args of 10:bool:const false
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:bool:call TypeEquals_Valid_28:test(%5)
  looping thru 1 args of 5:{int x,int y,int z}:read (%4)
  looping thru 1 args of 4:TypeEquals_Valid_28:Point3D:decl p3d = 3
  looping thru 3 args of 3:{int x,int y,int z}:recinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 7:bool:const true
wyboogie.NotImplementedYet: call to method (test) from inside an expression in 6:bool:call TypeEquals_Valid_28:test(%5)
	at wyboogie.Wyil2Boogie.writeInvoke(Wyil2Boogie.java:1151)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:972)
	at wyboogie.Wyil2Boogie.writeEquality(Wyil2Boogie.java:1237)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1032)
	at wyboogie.Wyil2Boogie.boolExpr(Wyil2Boogie.java:934)
	at wyboogie.Wyil2Boogie.writeAssume(Wyil2Boogie.java:703)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:598)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== TypeEquals_Valid_29.whiley =====
checking: 10:int[]:arrinit (%5, %9)
  looping thru 2 args of 10:int[]:arrinit (%5, %9)
  looping thru 2 args of 5:int:add (%2, %4)
  looping thru 0 args of 2:int:const 97
  looping thru 1 args of 4:TypeEquals_Valid_29:RowCol:recfield %3 col
  looping thru 1 args of 3:TypeEquals_Valid_29:Pos:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_29:Pos:decl p
  looping thru 2 args of 9:int:add (%6, %8)
  looping thru 0 args of 6:int:const 49
  looping thru 1 args of 8:TypeEquals_Valid_29:RowCol:recfield %7 row
  looping thru 1 args of 7:TypeEquals_Valid_29:Pos:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_29:Pos:decl p
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_29:ShortPos:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_29:ShortPos:decl p
  looping thru 0 args of 3:type:const null
checking: 7:void[]:const []
  looping thru 0 args of 7:void[]:const []
checking: 14:bool:istype (%10, %11)
  looping thru 2 args of 14:bool:istype (%10, %11)
  looping thru 1 args of 10:TypeEquals_Valid_29:ShortPos:read (%5)
  looping thru 1 args of 5:TypeEquals_Valid_29:ShortPos:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_29:ShortPos:decl p
  looping thru 0 args of 11:type:const TypeEquals_Valid_29:RankPos
checking: 19:int[]:arrinit (%18)
  looping thru 1 args of 19:int[]:arrinit (%18)
  looping thru 2 args of 18:int:add (%15, %17)
  looping thru 0 args of 15:int:const 49
  looping thru 1 args of 17:int:recfield %16 row
  looping thru 1 args of 16:{int row}:read (%12)
  looping thru 1 args of 12:{int row}:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_29:ShortPos:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_29:ShortPos:decl p
checking: 26:bool:istype (%22, %23)
  looping thru 2 args of 26:bool:istype (%22, %23)
  looping thru 1 args of 22:TypeEquals_Valid_29:ShortPos:read (%13)
  looping thru 1 args of 13:TypeEquals_Valid_29:ShortPos:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_29:ShortPos:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_29:ShortPos:decl p
  looping thru 0 args of 23:type:const TypeEquals_Valid_29:FilePos
checking: 31:int[]:arrinit (%30)
  looping thru 1 args of 31:int[]:arrinit (%30)
  looping thru 2 args of 30:int:add (%27, %29)
  looping thru 0 args of 27:int:const 97
  looping thru 1 args of 29:int:recfield %28 col
  looping thru 1 args of 28:{int col}:read (%24)
  looping thru 1 args of 24:{int col}:alias (%13)
  looping thru 1 args of 13:TypeEquals_Valid_29:ShortPos:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_29:ShortPos:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_29:ShortPos:decl p
checking: 35:int[]:call TypeEquals_Valid_29:pos2str(%34)
  looping thru 1 args of 35:int[]:call TypeEquals_Valid_29:pos2str(%34)
  looping thru 1 args of 34:TypeEquals_Valid_29:ShortPos:read (%25)
  looping thru 1 args of 25:TypeEquals_Valid_29:ShortPos:alias (%13)
  looping thru 1 args of 13:TypeEquals_Valid_29:ShortPos:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_29:ShortPos:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_29:ShortPos:decl p
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int[]:call TypeEquals_Valid_29:shortPos2str(%0)
  looping thru 0 args of 0:null:const null
  looping thru 0 args of 2:void[]:const []
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:int[]:call TypeEquals_Valid_29:shortPos2str(%6)
  looping thru 1 args of 6:{int row}:recinit (%5)
  looping thru 0 args of 5:int:const 1
  looping thru 0 args of 8:int[]:const [50]
checking: 15:bool:eq (%13, %14)
  looping thru 2 args of 15:bool:eq (%13, %14)
  looping thru 1 args of 13:int[]:call TypeEquals_Valid_29:shortPos2str(%12)
  looping thru 1 args of 12:{int col}:recinit (%11)
  looping thru 0 args of 11:int:const 1
  looping thru 0 args of 14:int[]:const [98]
checking: 22:bool:eq (%20, %21)
  looping thru 2 args of 22:bool:eq (%20, %21)
  looping thru 1 args of 20:int[]:call TypeEquals_Valid_29:shortPos2str(%19)
  looping thru 2 args of 19:{int col,int row}:recinit (%17, %18)
  looping thru 0 args of 17:int:const 2
  looping thru 0 args of 18:int:const 1
  looping thru 0 args of 21:int[]:const [99,50]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== TypeEquals_Valid_3.whiley =====
checking: 16:bool:lt (%14, %15)
  looping thru 2 args of 16:bool:lt (%14, %15)
  looping thru 1 args of 14:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
  looping thru 1 args of 15:TypeEquals_Valid_3:nat:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_3:nat:decl size
assign 1 := 1
checking: 19:int|TypeEquals_Valid_3:nat:arridx (%17, %18)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(r)
  looping thru 2 args of 19:int|TypeEquals_Valid_3:nat:arridx (%17, %18)
  looping thru 1 args of 17:int|TypeEquals_Valid_3:nat[]:read (%6)
  looping thru 1 args of 6:int[]:decl r = 5
  looping thru 2 args of 5:int[]:arrgen (%3, %4)
  looping thru 0 args of 3:int:const 0
  looping thru 1 args of 4:TypeEquals_Valid_3:nat:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_3:nat:decl size
  looping thru 1 args of 18:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
checking: 20:TypeEquals_Valid_3:nat:read (%1)
  looping thru 1 args of 20:TypeEquals_Valid_3:nat:read (%1)
  looping thru 0 args of 1:TypeEquals_Valid_3:nat:decl value
assign 1 := 1
checking: 22:int:read (%8)
  looping thru 1 args of 22:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
checking: 25:int:add (%23, %24)
  looping thru 2 args of 25:int:add (%23, %24)
  looping thru 1 args of 23:int:read (%8)
  looping thru 1 args of 8:int:decl i = 7
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 24:int:const 1
checking: 29:TypeEquals_Valid_3:nat[]:read (%6)
  looping thru 1 args of 29:TypeEquals_Valid_3:nat[]:read (%6)
  looping thru 1 args of 6:int[]:decl r = 5
  looping thru 2 args of 5:int[]:arrgen (%3, %4)
  looping thru 0 args of 3:int:const 0
  looping thru 1 args of 4:TypeEquals_Valid_3:nat:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_3:nat:decl size
checking: 14:bool:eq (%2, %13)
  looping thru 2 args of 14:bool:eq (%2, %13)
  looping thru 2 args of 2:TypeEquals_Valid_3:nat[]:call TypeEquals_Valid_3:create(%0, %1)
  looping thru 0 args of 0:int:const 10
  looping thru 0 args of 1:int:const 10
  looping thru 10 args of 13:int[]:arrinit (%3, %4, %5, %6, %7, %8, %9, %10, %11, %12)
  looping thru 0 args of 3:int:const 10
  looping thru 0 args of 4:int:const 10
  looping thru 0 args of 5:int:const 10
  looping thru 0 args of 6:int:const 10
  looping thru 0 args of 7:int:const 10
  looping thru 0 args of 8:int:const 10
  looping thru 0 args of 9:int:const 10
  looping thru 0 args of 10:int:const 10
  looping thru 0 args of 11:int:const 10
  looping thru 0 args of 12:int:const 10
checking: 25:bool:eq (%18, %24)
  looping thru 2 args of 25:bool:eq (%18, %24)
  looping thru 2 args of 18:TypeEquals_Valid_3:nat[]:call TypeEquals_Valid_3:create(%16, %17)
  looping thru 0 args of 16:int:const 5
  looping thru 0 args of 17:int:const 0
  looping thru 5 args of 24:int[]:arrinit (%19, %20, %21, %22, %23)
  looping thru 0 args of 19:int:const 0
  looping thru 0 args of 20:int:const 0
  looping thru 0 args of 21:int:const 0
  looping thru 0 args of 22:int:const 0
  looping thru 0 args of 23:int:const 0
checking: 33:bool:eq (%29, %32)
  looping thru 2 args of 33:bool:eq (%29, %32)
  looping thru 2 args of 29:TypeEquals_Valid_3:nat[]:call TypeEquals_Valid_3:create(%27, %28)
  looping thru 0 args of 27:int:const 0
  looping thru 0 args of 28:int:const 0
  looping thru 2 args of 32:int[]:arrgen (%30, %31)
  looping thru 0 args of 30:int:const 0
  looping thru 0 args of 31:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
TypeEquals_Valid_3.bpl(30,9): Error BP5001: This assertion might not hold.
Execution trace:
    TypeEquals_Valid_3.bpl(25,7): anon0
    TypeEquals_Valid_3.bpl(27,5): anon3_LoopHead
    TypeEquals_Valid_3.bpl(30,9): anon3_LoopBody

Boogie program verifier finished with 1 verified, 1 error
===== TypeEquals_Valid_30.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_30:Expr:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_30:Expr:decl e
  looping thru 0 args of 3:type:const int
checking: 7:int:read (%4)
  looping thru 1 args of 7:int:read (%4)
  looping thru 1 args of 4:int:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_30:Expr:decl e
checking: 14:bool:istype (%10, %11)
  looping thru 2 args of 14:bool:istype (%10, %11)
  looping thru 1 args of 10:TypeEquals_Valid_30:Expr:read (%5)
  looping thru 1 args of 5:TypeEquals_Valid_30:Expr:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_30:Expr:decl e
  looping thru 0 args of 11:type:const TypeEquals_Valid_30:BinOp
checking: 15:int:const 2
  looping thru 0 args of 15:int:const 2
checking: 22:bool:istype (%18, %19)
  looping thru 2 args of 22:bool:istype (%18, %19)
  looping thru 1 args of 18:TypeEquals_Valid_30:Expr:read (%13)
  looping thru 1 args of 13:TypeEquals_Valid_30:Expr:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_30:Expr:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_30:Expr:decl e
  looping thru 0 args of 19:type:const TypeEquals_Valid_30:Expr[]
checking: 23:int:const 3
  looping thru 0 args of 23:int:const 3
checking: 30:bool:istype (%26, %27)
  looping thru 2 args of 30:bool:istype (%26, %27)
  looping thru 1 args of 26:TypeEquals_Valid_30:Expr:read (%21)
  looping thru 1 args of 21:TypeEquals_Valid_30:Expr:alias (%13)
  looping thru 1 args of 13:TypeEquals_Valid_30:Expr:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_30:Expr:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_30:Expr:decl e
  looping thru 0 args of 27:type:const TypeEquals_Valid_30:ListAccess
checking: 41:int:add (%39, %40)
  looping thru 2 args of 41:int:add (%39, %40)
  looping thru 1 args of 39:int:read (%34)
  looping thru 1 args of 34:int:decl src = 33
  looping thru 1 args of 33:int:call TypeEquals_Valid_30:evaluate(%32)
  looping thru 1 args of 32:X<int|X[]|{X index,X src}|{X lhs,int op,X rhs}>:recfield %31 src
  looping thru 1 args of 31:X<{Y<X|int|Y[]|{Y lhs,int op,Y rhs}> index,Y<X|int|Y[]|{Y lhs,int op,Y rhs}> src}>:read (%28)
  looping thru 1 args of 28:X<{Y<X|int|Y[]|{Y lhs,int op,Y rhs}> index,Y<X|int|Y[]|{Y lhs,int op,Y rhs}> src}>:alias (%21)
  looping thru 1 args of 21:TypeEquals_Valid_30:Expr:alias (%13)
  looping thru 1 args of 13:TypeEquals_Valid_30:Expr:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_30:Expr:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_30:Expr:decl e
  looping thru 1 args of 40:int:read (%38)
  looping thru 1 args of 38:int:decl index = 37
  looping thru 1 args of 37:int:call TypeEquals_Valid_30:evaluate(%36)
  looping thru 1 args of 36:X<int|X[]|{X index,X src}|{X lhs,int op,X rhs}>:recfield %35 index
  looping thru 1 args of 35:X<{Y<X|int|Y[]|{Y lhs,int op,Y rhs}> index,Y<X|int|Y[]|{Y lhs,int op,Y rhs}> src}>:read (%28)
  looping thru 1 args of 28:X<{Y<X|int|Y[]|{Y lhs,int op,Y rhs}> index,Y<X|int|Y[]|{Y lhs,int op,Y rhs}> src}>:alias (%21)
  looping thru 1 args of 21:TypeEquals_Valid_30:Expr:alias (%13)
  looping thru 1 args of 13:TypeEquals_Valid_30:Expr:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_30:Expr:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_30:Expr:decl e
checking: 45:int:neg (%44)
  looping thru 1 args of 45:int:neg (%44)
  looping thru 0 args of 44:int:const 1
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:call TypeEquals_Valid_30:evaluate(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_30:Expr:decl e = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 4:int:const 1
assign 1 := 1
checking: 7:int:read (%1)
  looping thru 1 args of 7:int:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_30:Expr:decl e = 0
  looping thru 0 args of 0:int:const 1
checking: 11:{int lhs,int op,int rhs}:recinit (%8, %9, %10)
  looping thru 3 args of 11:{int lhs,int op,int rhs}:recinit (%8, %9, %10)
  looping thru 1 args of 8:int:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_30:Expr:decl e = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 9:int:const 0
  looping thru 1 args of 10:int:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_30:Expr:decl e = 0
  looping thru 0 args of 0:int:const 1
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 1 args of 14:int:call TypeEquals_Valid_30:evaluate(%13)
  looping thru 1 args of 13:{int lhs,int op,int rhs}:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_30:Expr:decl e = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 15:int:const 2
assign 1 := 1
checking: 18:{int lhs,int op,int rhs}:read (%1)
  looping thru 1 args of 18:{int lhs,int op,int rhs}:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_30:Expr:decl e = 0
  looping thru 0 args of 0:int:const 1
checking: 20:{int lhs,int op,int rhs}[]:arrinit (%19)
  looping thru 1 args of 20:{int lhs,int op,int rhs}[]:arrinit (%19)
  looping thru 1 args of 19:{int lhs,int op,int rhs}:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_30:Expr:decl e = 0
  looping thru 0 args of 0:int:const 1
checking: 25:bool:eq (%23, %24)
  looping thru 2 args of 25:bool:eq (%23, %24)
  looping thru 1 args of 23:int:call TypeEquals_Valid_30:evaluate(%22)
  looping thru 1 args of 22:{int lhs,int op,int rhs}[]:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_30:Expr:decl e = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 24:int:const 3
assign 1 := 1
checking: 27:{int lhs,int op,int rhs}[]:read (%1)
  looping thru 1 args of 27:{int lhs,int op,int rhs}[]:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_30:Expr:decl e = 0
  looping thru 0 args of 0:int:const 1
checking: 30:{int index,{int lhs,int op,int rhs}[] src}:recinit (%28, %29)
  looping thru 2 args of 30:{int index,{int lhs,int op,int rhs}[] src}:recinit (%28, %29)
  looping thru 0 args of 28:int:const 1
  looping thru 1 args of 29:{int lhs,int op,int rhs}[]:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_30:Expr:decl e = 0
  looping thru 0 args of 0:int:const 1
checking: 35:bool:eq (%33, %34)
  looping thru 2 args of 35:bool:eq (%33, %34)
  looping thru 1 args of 33:int:call TypeEquals_Valid_30:evaluate(%32)
  looping thru 1 args of 32:{int index,{int lhs,int op,int rhs}[] src}:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_30:Expr:decl e = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 34:int:const 4
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_31.whiley =====
checking: 2:int:const 1
  looping thru 0 args of 2:int:const 1
checking: 11:bool:eq (%9, %10)
  looping thru 2 args of 11:bool:eq (%9, %10)
  looping thru 1 args of 9:int:call TypeEquals_Valid_31:f(%8)
  looping thru 1 args of 8:{int[] f1,int f2}:read (%3)
  looping thru 1 args of 3:TypeEquals_Valid_31:rec1:decl r1 = 2
  looping thru 2 args of 2:{int[] f1,int f2}:recinit (%0, %1)
  looping thru 0 args of 0:int[]:const [104,101,108,108,111]
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 10:int:const 1
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 1 args of 14:int:call TypeEquals_Valid_31:f(%13)
  looping thru 1 args of 13:{int f1,int f2}:read (%7)
  looping thru 1 args of 7:TypeEquals_Valid_31:rec2:decl r2 = 6
  looping thru 2 args of 6:{int f1,int f2}:recinit (%4, %5)
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 0
  looping thru 0 args of 15:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_32.whiley =====
checking: 27:bool:lt (%24, %26)
  looping thru 2 args of 27:bool:lt (%24, %26)
  looping thru 1 args of 24:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
  looping thru 1 args of 26:int:arrlen (%25)
  looping thru 1 args of 25:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl input
assign 1 := 1
checking: 32:int:arridx (%28, %31)
conjecture: 0 <= toInt(i) + 1 && toInt(i) + 1 < arraylen(result)
  looping thru 2 args of 32:int:arridx (%28, %31)
  looping thru 1 args of 28:int[]:read (%9)
  looping thru 1 args of 9:int[]:decl result = 8
  looping thru 2 args of 8:int[]:arrgen (%3, %7)
  looping thru 0 args of 3:int:const 0
  looping thru 2 args of 7:int:add (%5, %6)
  looping thru 1 args of 5:int:arrlen (%4)
  looping thru 1 args of 4:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl input
  looping thru 0 args of 6:int:const 1
  looping thru 2 args of 31:int:add (%29, %30)
  looping thru 1 args of 29:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
  looping thru 0 args of 30:int:const 1
checking: 35:int:arridx (%33, %34)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(input)
  looping thru 2 args of 35:int:arridx (%33, %34)
  looping thru 1 args of 33:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl input
  looping thru 1 args of 34:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
assign 1 := 1
checking: 37:int:read (%11)
  looping thru 1 args of 37:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
checking: 40:int:add (%38, %39)
  looping thru 2 args of 40:int:add (%38, %39)
  looping thru 1 args of 38:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
  looping thru 0 args of 39:int:const 1
assign 1 := 1
checking: 46:int:arridx (%44, %45)
conjecture: 0 <= 0 && 0 < arraylen(result)
  looping thru 2 args of 46:int:arridx (%44, %45)
  looping thru 1 args of 44:int[]:read (%9)
  looping thru 1 args of 9:int[]:decl result = 8
  looping thru 2 args of 8:int[]:arrgen (%3, %7)
  looping thru 0 args of 3:int:const 0
  looping thru 2 args of 7:int:add (%5, %6)
  looping thru 1 args of 5:int:arrlen (%4)
  looping thru 1 args of 4:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl input
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 45:int:const 0
checking: 47:int:read (%0)
  looping thru 1 args of 47:int:read (%0)
  looping thru 0 args of 0:int:decl item
checking: 49:int[]:read (%9)
  looping thru 1 args of 49:int[]:read (%9)
  looping thru 1 args of 9:int[]:decl result = 8
  looping thru 2 args of 8:int[]:arrgen (%3, %7)
  looping thru 0 args of 3:int:const 0
  looping thru 2 args of 7:int:add (%5, %6)
  looping thru 1 args of 5:int:arrlen (%4)
  looping thru 1 args of 4:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl input
  looping thru 0 args of 6:int:const 1
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_32:expr:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_32:expr:decl e
  looping thru 0 args of 3:type:const int[]
checking: 11:int[]:read (%10)
  looping thru 1 args of 11:int[]:read (%10)
  looping thru 1 args of 10:int[]:decl t = 9
  looping thru 2 args of 9:int[]:call TypeEquals_Valid_32:cons(%7, %8)
  looping thru 0 args of 7:int:const 0
  looping thru 1 args of 8:int[]:read (%4)
  looping thru 1 args of 4:int[]:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_32:expr:decl e
checking: 16:int[]:arrgen (%14, %15)
  looping thru 2 args of 16:int[]:arrgen (%14, %15)
  looping thru 0 args of 14:int:const 0
  looping thru 0 args of 15:int:const 0
checking: 14:bool:eq (%7, %13)
  looping thru 2 args of 14:bool:eq (%7, %13)
  looping thru 1 args of 7:int[]:call TypeEquals_Valid_32:f(%6)
  looping thru 1 args of 6:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl e = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 5 args of 13:int[]:arrinit (%8, %9, %10, %11, %12)
  looping thru 0 args of 8:int:const 0
  looping thru 0 args of 9:int:const 1
  looping thru 0 args of 10:int:const 2
  looping thru 0 args of 11:int:const 3
  looping thru 0 args of 12:int:const 4
checking: 21:bool:eq (%17, %20)
  looping thru 2 args of 21:bool:eq (%17, %20)
  looping thru 1 args of 17:int[]:call TypeEquals_Valid_32:f(%16)
  looping thru 0 args of 16:bool:const false
  looping thru 2 args of 20:int[]:arrgen (%18, %19)
  looping thru 0 args of 18:int:const 0
  looping thru 0 args of 19:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== TypeEquals_Valid_33.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_33:expr:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_33:expr:decl e
  looping thru 0 args of 3:type:const TypeEquals_Valid_33:pos
checking: 7:bool:const true
  looping thru 0 args of 7:bool:const true
checking: 10:bool:const false
  looping thru 0 args of 10:bool:const false
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:bool:call TypeEquals_Valid_33:f(%1)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 3:bool:const false
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:bool:call TypeEquals_Valid_33:f(%6)
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 8:bool:const true
checking: 14:bool:eq (%12, %13)
  looping thru 2 args of 14:bool:eq (%12, %13)
  looping thru 1 args of 12:bool:call TypeEquals_Valid_33:f(%11)
  looping thru 0 args of 11:int:const 1234
  looping thru 0 args of 13:bool:const true
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_34.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_34:expr:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_34:expr:decl e
  looping thru 0 args of 3:type:const TypeEquals_Valid_34:bop
checking: 11:int:add (%8, %10)
  looping thru 2 args of 11:int:add (%8, %10)
  looping thru 1 args of 8:int:recfield %7 x
  looping thru 1 args of 7:{int x,int y}:read (%4)
  looping thru 1 args of 4:{int x,int y}:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_34:expr:decl e
  looping thru 1 args of 10:int:recfield %9 y
  looping thru 1 args of 9:{int x,int y}:read (%4)
  looping thru 1 args of 4:{int x,int y}:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_34:expr:decl e
checking: 16:int:add (%14, %15)
  looping thru 2 args of 16:int:add (%14, %15)
  looping thru 1 args of 14:TypeEquals_Valid_34:expr:read (%5)
  looping thru 1 args of 5:TypeEquals_Valid_34:expr:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_34:expr:decl e
  looping thru 0 args of 15:int:const 1
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:read (%2)
  looping thru 1 args of 2:int:decl x = 1
  looping thru 1 args of 1:int:call TypeEquals_Valid_34:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 4:int:const 2
assign 1 := 1
checking: 7:int:read (%2)
  looping thru 1 args of 7:int:read (%2)
  looping thru 1 args of 2:int:decl x = 1
  looping thru 1 args of 1:int:call TypeEquals_Valid_34:f(%0)
  looping thru 0 args of 0:int:const 1
checking: 11:int:call TypeEquals_Valid_34:f(%10)
  looping thru 1 args of 11:int:call TypeEquals_Valid_34:f(%10)
  looping thru 2 args of 10:{int x,int y}:recinit (%8, %9)
  looping thru 0 args of 8:int:const 4
  looping thru 0 args of 9:int:const 10
checking: 15:bool:eq (%13, %14)
  looping thru 2 args of 15:bool:eq (%13, %14)
  looping thru 1 args of 13:int:read (%2)
  looping thru 1 args of 2:int:decl x = 1
  looping thru 1 args of 1:int:call TypeEquals_Valid_34:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 14:int:const 14
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_35.whiley =====
checking: 10:bool:land (%6, %9)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_35:expr:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_35:expr:decl e
  looping thru 0 args of 3:type:const TypeEquals_Valid_35:pos
  looping thru 2 args of 9:bool:gt (%7, %8)
  looping thru 1 args of 7:int:read (%4)
  looping thru 1 args of 4:int:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_35:expr:decl e
  looping thru 0 args of 8:int:const 0
assign 1 := 1
checking: 12:int:read (%4)
  looping thru 1 args of 12:int:read (%4)
  looping thru 1 args of 4:int:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_35:expr:decl e
checking: 15:int:add (%13, %14)
  looping thru 2 args of 15:int:add (%13, %14)
  looping thru 1 args of 13:int:read (%4)
  looping thru 1 args of 4:int:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_35:expr:decl e
  looping thru 0 args of 14:int:const 1
checking: 17:int:read (%4)
  looping thru 1 args of 17:int:read (%4)
  looping thru 1 args of 4:int:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_35:expr:decl e
checking: 20:int:const 0
  looping thru 0 args of 20:int:const 0
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:call TypeEquals_Valid_35:f(%1)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 3:int:const 0
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:int:call TypeEquals_Valid_35:f(%6)
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 8:int:const 2
checking: 14:bool:eq (%12, %13)
  looping thru 2 args of 14:bool:eq (%12, %13)
  looping thru 1 args of 12:int:call TypeEquals_Valid_35:f(%11)
  looping thru 0 args of 11:int:const 1234
  looping thru 0 args of 13:int:const 1235
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
TypeEquals_Valid_35.bpl(28,10): Error: command assigns to an immutable variable: e
1 type checking errors detected in TypeEquals_Valid_35.bpl
===== TypeEquals_Valid_36.whiley =====
Error compiling TypeEquals_Valid_36.whiley
./TypeEquals_Valid_36.whiley:10: invalid array expression
    if (t.lhs is plist) && ((|t.lhs| > 0) && (t.lhs[0] == 0)):
                              ^^^^^

===== TypeEquals_Valid_37.whiley =====
Error compiling TypeEquals_Valid_37.whiley
./TypeEquals_Valid_37.whiley:10: invalid array expression
    if (t.lhs is plist) && ((|t.lhs| > 0) && (t.lhs[0] == 0)):
                              ^^^^^

===== TypeEquals_Valid_38.whiley =====
Error compiling TypeEquals_Valid_38.whiley
./TypeEquals_Valid_38.whiley:8: invalid array expression
    if (t.lhs is int[]) && ((|t.lhs| > 0) && (t.lhs[0] == 0)):
                              ^^^^^

===== TypeEquals_Valid_39.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_39:expr:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_39:expr:decl e
  looping thru 0 args of 3:type:const TypeEquals_Valid_39:pos
checking: 7:bool:const true
  looping thru 0 args of 7:bool:const true
checking: 10:bool:const false
  looping thru 0 args of 10:bool:const false
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:bool:call TypeEquals_Valid_39:f(%1)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 3:bool:const false
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:bool:call TypeEquals_Valid_39:f(%6)
  looping thru 0 args of 6:bool:const false
  looping thru 0 args of 8:bool:const true
checking: 14:bool:eq (%12, %13)
  looping thru 2 args of 14:bool:eq (%12, %13)
  looping thru 1 args of 12:bool:call TypeEquals_Valid_39:f(%11)
  looping thru 0 args of 11:bool:const true
  looping thru 0 args of 13:bool:const true
checking: 20:bool:eq (%18, %19)
  looping thru 2 args of 20:bool:eq (%18, %19)
  looping thru 1 args of 18:bool:call TypeEquals_Valid_39:f(%17)
  looping thru 1 args of 17:bool:not (%16)
  looping thru 0 args of 16:bool:const true
  looping thru 0 args of 19:bool:const true
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_40.whiley =====
checking: 10:bool:land (%6, %9)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_40:expr:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_40:expr:decl e
  looping thru 0 args of 3:type:const TypeEquals_Valid_40:pos
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:bool:read (%4)
  looping thru 1 args of 4:bool:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_40:expr:decl e
  looping thru 0 args of 8:bool:const true
checking: 12:int:const 0
  looping thru 0 args of 12:int:const 0
checking: 19:bool:istype (%15, %16)
  looping thru 2 args of 19:bool:istype (%15, %16)
  looping thru 1 args of 15:TypeEquals_Valid_40:expr:read (%11)
  looping thru 1 args of 11:bool|TypeEquals_Valid_40:expr:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_40:expr:decl e
  looping thru 0 args of 16:type:const TypeEquals_Valid_40:neg
checking: 20:int:const 1
  looping thru 0 args of 20:int:const 1
checking: 23:int:const 2
  looping thru 0 args of 23:int:const 2
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:call TypeEquals_Valid_40:f(%1)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 3:int:const 1
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:int:call TypeEquals_Valid_40:f(%6)
  looping thru 0 args of 6:bool:const false
  looping thru 0 args of 8:int:const 2
checking: 14:bool:eq (%12, %13)
  looping thru 2 args of 14:bool:eq (%12, %13)
  looping thru 1 args of 12:int:call TypeEquals_Valid_40:f(%11)
  looping thru 0 args of 11:bool:const true
  looping thru 0 args of 13:int:const 0
checking: 22:bool:eq (%20, %21)
  looping thru 2 args of 22:bool:eq (%20, %21)
  looping thru 1 args of 20:int:call TypeEquals_Valid_40:f(%19)
  looping thru 3 args of 19:int[]:arrinit (%16, %17, %18)
  looping thru 0 args of 16:int:const 1
  looping thru 0 args of 17:int:const 2
  looping thru 0 args of 18:int:const 3
  looping thru 0 args of 21:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_41.whiley =====
Error compiling TypeEquals_Valid_41.whiley
./TypeEquals_Valid_41.whiley:3: unknown variable
type bop is {int y, int x} where x > 0
                                 ^

===== TypeEquals_Valid_42.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_42:expr:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_42:expr:decl e
  looping thru 0 args of 3:type:const TypeEquals_Valid_42:bop
checking: 11:int:add (%8, %10)
  looping thru 2 args of 11:int:add (%8, %10)
  looping thru 1 args of 8:int:recfield %7 x
  looping thru 1 args of 7:{int x,int y}:read (%4)
  looping thru 1 args of 4:{int x,int y}:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_42:expr:decl e
  looping thru 1 args of 10:int:recfield %9 y
  looping thru 1 args of 9:{int x,int y}:read (%4)
  looping thru 1 args of 4:{int x,int y}:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_42:expr:decl e
checking: 14:TypeEquals_Valid_42:expr:read (%5)
  looping thru 1 args of 14:TypeEquals_Valid_42:expr:read (%5)
  looping thru 1 args of 5:TypeEquals_Valid_42:expr:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_42:expr:decl e
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:read (%2)
  looping thru 1 args of 2:int:decl x = 1
  looping thru 1 args of 1:int:call TypeEquals_Valid_42:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 4:int:const 1
assign 1 := 1
checking: 7:int:read (%2)
  looping thru 1 args of 7:int:read (%2)
  looping thru 1 args of 2:int:decl x = 1
  looping thru 1 args of 1:int:call TypeEquals_Valid_42:f(%0)
  looping thru 0 args of 0:int:const 1
checking: 11:int:call TypeEquals_Valid_42:f(%10)
  looping thru 1 args of 11:int:call TypeEquals_Valid_42:f(%10)
  looping thru 2 args of 10:{int x,int y}:recinit (%8, %9)
  looping thru 0 args of 8:int:const 4
  looping thru 0 args of 9:int:const 10
checking: 15:bool:eq (%13, %14)
  looping thru 2 args of 15:bool:eq (%13, %14)
  looping thru 1 args of 13:int:read (%2)
  looping thru 1 args of 2:int:decl x = 1
  looping thru 1 args of 1:int:call TypeEquals_Valid_42:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 14:int:const 14
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_43.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_43:imsg:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_43:imsg:decl m
  looping thru 0 args of 3:type:const {int[] msg}
checking: 8:int[]:recfield %7 msg
  looping thru 1 args of 8:int[]:recfield %7 msg
  looping thru 1 args of 7:{int[] msg}:read (%4)
  looping thru 1 args of 4:{int[] msg}:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_43:imsg:decl m
checking: 11:TypeEquals_Valid_43:imsg:read (%5)
  looping thru 1 args of 11:TypeEquals_Valid_43:imsg:read (%5)
  looping thru 1 args of 5:TypeEquals_Valid_43:imsg:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_43:imsg:decl m
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:any:call TypeEquals_Valid_43:getMessage(%1)
  looping thru 1 args of 1:{int[] msg}:recinit (%0)
  looping thru 0 args of 0:int[]:const [72,69,76,76,79,32,87,79,82,76,68]
  looping thru 0 args of 3:int[]:const [72,69,76,76,79,32,87,79,82,76,68]
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:any:call TypeEquals_Valid_43:getMessage(%6)
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 8:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_44.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_44:imsg:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_44:imsg:decl m
  looping thru 0 args of 3:type:const {int[] msg}
checking: 8:int[]:recfield %7 msg
  looping thru 1 args of 8:int[]:recfield %7 msg
  looping thru 1 args of 7:{int[] msg}:read (%4)
  looping thru 1 args of 4:{int[] msg}:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_44:imsg:decl m
checking: 15:bool:istype (%11, %12)
  looping thru 2 args of 15:bool:istype (%11, %12)
  looping thru 1 args of 11:TypeEquals_Valid_44:imsg:read (%5)
  looping thru 1 args of 5:TypeEquals_Valid_44:imsg:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_44:imsg:decl m
  looping thru 0 args of 12:type:const {int op}
checking: 17:int:recfield %16 op
  looping thru 1 args of 17:int:recfield %16 op
  looping thru 1 args of 16:{int op}:read (%13)
  looping thru 1 args of 13:{int op}:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_44:imsg:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_44:imsg:decl m
checking: 20:TypeEquals_Valid_44:imsg:read (%14)
  looping thru 1 args of 20:TypeEquals_Valid_44:imsg:read (%14)
  looping thru 1 args of 14:TypeEquals_Valid_44:imsg:alias (%5)
  looping thru 1 args of 5:TypeEquals_Valid_44:imsg:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_44:imsg:decl m
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:any:call TypeEquals_Valid_44:getMessage(%1)
  looping thru 1 args of 1:{int[] msg}:recinit (%0)
  looping thru 0 args of 0:int[]:const [72,69,76,76,79,32,87,79,82,76,68]
  looping thru 0 args of 3:int[]:const [72,69,76,76,79,32,87,79,82,76,68]
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:any:call TypeEquals_Valid_44:getMessage(%6)
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 8:int:const 1
checking: 15:bool:eq (%13, %14)
  looping thru 2 args of 15:bool:eq (%13, %14)
  looping thru 1 args of 13:any:call TypeEquals_Valid_44:getMessage(%12)
  looping thru 1 args of 12:{int op}:recinit (%11)
  looping thru 0 args of 11:int:const 123
  looping thru 0 args of 14:int:const 123
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_45.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_45:intlist:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_45:intlist:decl x
  looping thru 0 args of 3:type:const int
checking: 7:int:read (%4)
  looping thru 1 args of 7:int:read (%4)
  looping thru 1 args of 4:int:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_45:intlist:decl x
checking: 11:int:const 1
  looping thru 0 args of 11:int:const 1
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:read (%5)
  looping thru 1 args of 5:int:decl x = 4
  looping thru 1 args of 4:int:call TypeEquals_Valid_45:f(%3)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 7:int:const 1
assign 1 := 1
checking: 10:int:read (%5)
  looping thru 1 args of 10:int:read (%5)
  looping thru 1 args of 5:int:decl x = 4
  looping thru 1 args of 4:int:call TypeEquals_Valid_45:f(%3)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
checking: 12:int:call TypeEquals_Valid_45:f(%11)
  looping thru 1 args of 12:int:call TypeEquals_Valid_45:f(%11)
  looping thru 0 args of 11:int:const 123
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 1 args of 14:int:read (%5)
  looping thru 1 args of 5:int:decl x = 4
  looping thru 1 args of 4:int:call TypeEquals_Valid_45:f(%3)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 15:int:const 123
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_46.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_46:intlist:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_46:intlist:decl x
  looping thru 0 args of 3:type:const int
checking: 7:int:read (%4)
  looping thru 1 args of 7:int:read (%4)
  looping thru 1 args of 4:int:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_46:intlist:decl x
checking: 11:int:const 1
  looping thru 0 args of 11:int:const 1
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:read (%5)
  looping thru 1 args of 5:int:decl x = 4
  looping thru 1 args of 4:int:call TypeEquals_Valid_46:f(%3)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 7:int:const 1
assign 1 := 1
checking: 10:int:read (%5)
  looping thru 1 args of 10:int:read (%5)
  looping thru 1 args of 5:int:decl x = 4
  looping thru 1 args of 4:int:call TypeEquals_Valid_46:f(%3)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
checking: 12:int:call TypeEquals_Valid_46:f(%11)
  looping thru 1 args of 12:int:call TypeEquals_Valid_46:f(%11)
  looping thru 0 args of 11:int:const 123
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 1 args of 14:int:read (%5)
  looping thru 1 args of 5:int:decl x = 4
  looping thru 1 args of 4:int:call TypeEquals_Valid_46:f(%3)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 15:int:const 123
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_47.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_47:T:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_47:T:decl x
  looping thru 0 args of 3:type:const int[]|TypeEquals_Valid_47:nat
checking: 7:int:const 0
  looping thru 0 args of 7:int:const 0
checking: 10:TypeEquals_Valid_47:T:read (%5)
  looping thru 1 args of 10:TypeEquals_Valid_47:T:read (%5)
  looping thru 1 args of 5:TypeEquals_Valid_47:T:alias (%0)
  looping thru 0 args of 0:TypeEquals_Valid_47:T:decl x
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call TypeEquals_Valid_47:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 0
checking: 10:bool:eq (%7, %9)
  looping thru 2 args of 10:bool:eq (%7, %9)
  looping thru 1 args of 7:int:call TypeEquals_Valid_47:f(%6)
  looping thru 1 args of 6:int:neg (%5)
  looping thru 0 args of 5:int:const 1
  looping thru 1 args of 9:int:neg (%8)
  looping thru 0 args of 8:int:const 1
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 1 args of 16:int:call TypeEquals_Valid_47:f(%15)
  looping thru 3 args of 15:int[]:arrinit (%12, %13, %14)
  looping thru 0 args of 12:int:const 1
  looping thru 0 args of 13:int:const 2
  looping thru 0 args of 14:int:const 3
  looping thru 0 args of 17:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_48.whiley =====
checking: 11:bool:not (%10)
  looping thru 1 args of 11:bool:not (%10)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:null|int:read (%0)
  looping thru 0 args of 0:null|int:decl x
  looping thru 0 args of 3:type:const int
  looping thru 2 args of 9:bool:gteq (%7, %8)
  looping thru 1 args of 7:int:read (%4)
  looping thru 1 args of 4:int:alias (%0)
  looping thru 0 args of 0:null|int:decl x
  looping thru 0 args of 8:int:const 0
checking: 12:int:const 0
  looping thru 0 args of 12:int:const 0
checking: 15:int:read (%4)
  looping thru 1 args of 15:int:read (%4)
  looping thru 1 args of 4:int:alias (%0)
  looping thru 0 args of 0:null|int:decl x
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:call TypeEquals_Valid_48:f(%1)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 3:int:const 0
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:int:call TypeEquals_Valid_48:f(%6)
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 8:int:const 0
checking: 14:bool:eq (%12, %13)
  looping thru 2 args of 14:bool:eq (%12, %13)
  looping thru 1 args of 12:int:call TypeEquals_Valid_48:f(%11)
  looping thru 0 args of 11:int:const 1
  looping thru 0 args of 13:int:const 1
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:int:call TypeEquals_Valid_48:f(%16)
  looping thru 0 args of 16:int:const 2
  looping thru 0 args of 18:int:const 2
checking: 24:bool:eq (%22, %23)
  looping thru 2 args of 24:bool:eq (%22, %23)
  looping thru 1 args of 22:int:call TypeEquals_Valid_48:f(%21)
  looping thru 0 args of 21:null:const null
  looping thru 0 args of 23:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_49.whiley =====
checking: 10:bool:lor (%6, %9)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:null|int:read (%0)
  looping thru 0 args of 0:null|int:decl x
  looping thru 0 args of 3:type:const null
  looping thru 2 args of 9:bool:lt (%7, %8)
  looping thru 1 args of 7:int:read (%5)
  looping thru 1 args of 5:int:alias (%0)
  looping thru 0 args of 0:null|int:decl x
  looping thru 0 args of 8:int:const 0
checking: 11:int:const 0
  looping thru 0 args of 11:int:const 0
checking: 14:int:read (%5)
  looping thru 1 args of 14:int:read (%5)
  looping thru 1 args of 5:int:alias (%0)
  looping thru 0 args of 0:null|int:decl x
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:call TypeEquals_Valid_49:f(%1)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 3:int:const 0
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:int:call TypeEquals_Valid_49:f(%6)
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 8:int:const 0
checking: 14:bool:eq (%12, %13)
  looping thru 2 args of 14:bool:eq (%12, %13)
  looping thru 1 args of 12:int:call TypeEquals_Valid_49:f(%11)
  looping thru 0 args of 11:int:const 1
  looping thru 0 args of 13:int:const 1
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:int:call TypeEquals_Valid_49:f(%16)
  looping thru 0 args of 16:int:const 2
  looping thru 0 args of 18:int:const 2
checking: 24:bool:eq (%22, %23)
  looping thru 2 args of 24:bool:eq (%22, %23)
  looping thru 1 args of 22:int:call TypeEquals_Valid_49:f(%21)
  looping thru 0 args of 21:null:const null
  looping thru 0 args of 23:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_5.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:null|int:read (%0)
  looping thru 0 args of 0:null|int:decl x
  looping thru 0 args of 3:type:const null
checking: 7:bool:const true
  looping thru 0 args of 7:bool:const true
checking: 10:bool:const false
  looping thru 0 args of 10:bool:const false
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:bool:call TypeEquals_Valid_5:f(%2)
  looping thru 1 args of 2:null:read (%1)
  looping thru 1 args of 1:null|int:decl x = 0
  looping thru 0 args of 0:null:const null
  looping thru 0 args of 4:bool:const true
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 1 args of 8:bool:call TypeEquals_Valid_5:f(%7)
  looping thru 0 args of 7:int:const 1
  looping thru 0 args of 9:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_50.whiley =====
checking: 12:bool:lor (%6, %11)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:null|bool|int:read (%0)
  looping thru 0 args of 0:null|bool|int:decl x
  looping thru 0 args of 3:type:const null
  looping thru 2 args of 11:bool:istype (%7, %8)
  looping thru 1 args of 7:bool|int:read (%5)
  looping thru 1 args of 5:bool|int:alias (%0)
  looping thru 0 args of 0:null|bool|int:decl x
  looping thru 0 args of 8:type:const bool
checking: 14:int:const 0
  looping thru 0 args of 14:int:const 0
checking: 17:int:read (%10)
  looping thru 1 args of 17:int:read (%10)
  looping thru 1 args of 10:int:alias (%5)
  looping thru 1 args of 5:bool|int:alias (%0)
  looping thru 0 args of 0:null|bool|int:decl x
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call TypeEquals_Valid_50:f(%0)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 2:int:const 0
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:call TypeEquals_Valid_50:f(%5)
  looping thru 0 args of 5:int:const 1
  looping thru 0 args of 7:int:const 1
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:int:call TypeEquals_Valid_50:f(%10)
  looping thru 0 args of 10:int:const 2
  looping thru 0 args of 12:int:const 2
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 1 args of 16:int:call TypeEquals_Valid_50:f(%15)
  looping thru 0 args of 15:bool:const false
  looping thru 0 args of 17:int:const 0
checking: 23:bool:eq (%21, %22)
  looping thru 2 args of 23:bool:eq (%21, %22)
  looping thru 1 args of 21:int:call TypeEquals_Valid_50:f(%20)
  looping thru 0 args of 20:bool:const true
  looping thru 0 args of 22:int:const 0
checking: 28:bool:eq (%26, %27)
  looping thru 2 args of 28:bool:eq (%26, %27)
  looping thru 1 args of 26:int:call TypeEquals_Valid_50:f(%25)
  looping thru 0 args of 25:null:const null
  looping thru 0 args of 27:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_51.whiley =====
checking: 12:bool:lor (%6, %11)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:null|bool|int:read (%0)
  looping thru 0 args of 0:null|bool|int:decl x
  looping thru 0 args of 3:type:const int
  looping thru 2 args of 11:bool:istype (%7, %8)
  looping thru 1 args of 7:null|bool:read (%5)
  looping thru 1 args of 5:null|bool:alias (%0)
  looping thru 0 args of 0:null|bool|int:decl x
  looping thru 0 args of 8:type:const bool
checking: 14:bool|int:read (%13)
  looping thru 1 args of 14:bool|int:read (%13)
  looping thru 1 args of 13:bool|int:alias (%0)
  looping thru 0 args of 0:null|bool|int:decl x
checking: 17:int:const 0
  looping thru 0 args of 17:int:const 0
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:bool|int:call TypeEquals_Valid_51:f(%0)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 2:int:const 0
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:bool|int:call TypeEquals_Valid_51:f(%5)
  looping thru 0 args of 5:int:const 1
  looping thru 0 args of 7:int:const 1
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:bool|int:call TypeEquals_Valid_51:f(%10)
  looping thru 0 args of 10:int:const 2
  looping thru 0 args of 12:int:const 2
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 1 args of 16:bool|int:call TypeEquals_Valid_51:f(%15)
  looping thru 0 args of 15:bool:const false
  looping thru 0 args of 17:bool:const false
checking: 23:bool:eq (%21, %22)
  looping thru 2 args of 23:bool:eq (%21, %22)
  looping thru 1 args of 21:bool|int:call TypeEquals_Valid_51:f(%20)
  looping thru 0 args of 20:bool:const true
  looping thru 0 args of 22:bool:const true
checking: 28:bool:eq (%26, %27)
  looping thru 2 args of 28:bool:eq (%26, %27)
  looping thru 1 args of 26:bool|int:call TypeEquals_Valid_51:f(%25)
  looping thru 0 args of 25:null:const null
  looping thru 0 args of 27:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_52.whiley =====
checking: 14:bool:istype (%10, %11)
  looping thru 2 args of 14:bool:istype (%10, %11)
  looping thru 1 args of 10:null|int:read (%0)
  looping thru 0 args of 0:null|int:decl x
  looping thru 0 args of 11:type:const null
checking: 15:bool:const false
  looping thru 0 args of 15:bool:const false
checking: 18:bool:read (%9)
  looping thru 1 args of 18:bool:read (%9)
  looping thru 1 args of 9:bool:decl r = 8
  looping thru 2 args of 4:bool:istype (%2, %3)
  looping thru 1 args of 2:null|int:read (%0)
  looping thru 0 args of 0:null|int:decl x
  looping thru 0 args of 3:type:const int
  looping thru 2 args of 7:bool:gteq (%5, %6)
  looping thru 1 args of 5:int:read (%0)
  looping thru 0 args of 0:null|int:decl x
  looping thru 0 args of 6:int:const 0
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:bool:call TypeEquals_Valid_52:f(%1)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 3:bool:const false
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:bool:call TypeEquals_Valid_52:f(%6)
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 8:bool:const true
checking: 14:bool:eq (%12, %13)
  looping thru 2 args of 14:bool:eq (%12, %13)
  looping thru 1 args of 12:bool:call TypeEquals_Valid_52:f(%11)
  looping thru 0 args of 11:int:const 1
  looping thru 0 args of 13:bool:const true
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:bool:call TypeEquals_Valid_52:f(%16)
  looping thru 0 args of 16:null:const null
  looping thru 0 args of 18:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_53.whiley =====
checking: 17:bool:land (%13, %16)
  looping thru 2 args of 13:bool:istype (%9, %10)
  looping thru 1 args of 9:null|int:read (%0)
  looping thru 0 args of 0:null|int:decl x
  looping thru 0 args of 10:type:const int
  looping thru 2 args of 16:bool:gteq (%14, %15)
  looping thru 1 args of 14:int:read (%11)
  looping thru 1 args of 11:int:alias (%0)
  looping thru 0 args of 0:null|int:decl x
  looping thru 0 args of 15:int:const 0
checking: 18:int:read (%11)
  looping thru 1 args of 18:int:read (%11)
  looping thru 1 args of 11:int:alias (%0)
  looping thru 0 args of 0:null|int:decl x
checking: 21:int:const 0
  looping thru 0 args of 21:int:const 0
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:call TypeEquals_Valid_53:f(%1)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 3:int:const 0
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:int:call TypeEquals_Valid_53:f(%6)
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 8:int:const 0
checking: 14:bool:eq (%12, %13)
  looping thru 2 args of 14:bool:eq (%12, %13)
  looping thru 1 args of 12:int:call TypeEquals_Valid_53:f(%11)
  looping thru 0 args of 11:int:const 1
  looping thru 0 args of 13:int:const 1
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:int:call TypeEquals_Valid_53:f(%16)
  looping thru 0 args of 16:int:const 2
  looping thru 0 args of 18:int:const 2
checking: 24:bool:eq (%22, %23)
  looping thru 2 args of 24:bool:eq (%22, %23)
  looping thru 1 args of 22:int:call TypeEquals_Valid_53:f(%21)
  looping thru 0 args of 21:null:const null
  looping thru 0 args of 23:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_54.whiley =====
MUTATED INPUT x : null|int
assign 1 := 1
checking: 10:null|int:read (%0)
  looping thru 1 args of 10:null|int:read (%0)
  looping thru 0 args of 0:null|int:decl x
checking: 11:null|int:read (%1)
  looping thru 1 args of 11:null|int:read (%1)
  looping thru 0 args of 1:null|int:decl y
checking: 21:bool:land (%17, %20)
  looping thru 2 args of 17:bool:istype (%13, %14)
  looping thru 1 args of 13:null|int:read (%0)
  looping thru 0 args of 0:null|int:decl x
  looping thru 0 args of 14:type:const int
  looping thru 2 args of 20:bool:gteq (%18, %19)
  looping thru 1 args of 18:int:read (%15)
  looping thru 1 args of 15:int:alias (%0)
  looping thru 0 args of 0:null|int:decl x
  looping thru 0 args of 19:int:const 0
checking: 22:int:read (%15)
  looping thru 1 args of 22:int:read (%15)
  looping thru 1 args of 15:int:alias (%0)
  looping thru 0 args of 0:null|int:decl x
checking: 25:int:const 0
  looping thru 0 args of 25:int:const 0
checking: 6:bool:eq (%4, %5)
  looping thru 2 args of 6:bool:eq (%4, %5)
  looping thru 2 args of 4:int:call TypeEquals_Valid_54:f(%1, %3)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 3:int:neg (%2)
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 5:int:const 0
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 2 args of 11:int:call TypeEquals_Valid_54:f(%8, %10)
  looping thru 0 args of 8:int:const 0
  looping thru 1 args of 10:int:neg (%9)
  looping thru 0 args of 9:int:const 1
  looping thru 0 args of 12:int:const 0
checking: 20:bool:eq (%18, %19)
  looping thru 2 args of 20:bool:eq (%18, %19)
  looping thru 2 args of 18:int:call TypeEquals_Valid_54:f(%15, %17)
  looping thru 0 args of 15:int:const 1
  looping thru 1 args of 17:int:neg (%16)
  looping thru 0 args of 16:int:const 1
  looping thru 0 args of 19:int:const 0
checking: 27:bool:eq (%25, %26)
  looping thru 2 args of 27:bool:eq (%25, %26)
  looping thru 2 args of 25:int:call TypeEquals_Valid_54:f(%22, %24)
  looping thru 0 args of 22:int:const 2
  looping thru 1 args of 24:int:neg (%23)
  looping thru 0 args of 23:int:const 1
  looping thru 0 args of 26:int:const 0
checking: 34:bool:eq (%32, %33)
  looping thru 2 args of 34:bool:eq (%32, %33)
  looping thru 2 args of 32:int:call TypeEquals_Valid_54:f(%29, %31)
  looping thru 0 args of 29:null:const null
  looping thru 1 args of 31:int:neg (%30)
  looping thru 0 args of 30:int:const 1
  looping thru 0 args of 33:int:const 0
checking: 41:bool:eq (%39, %40)
  looping thru 2 args of 41:bool:eq (%39, %40)
  looping thru 2 args of 39:int:call TypeEquals_Valid_54:f(%37, %38)
  looping thru 1 args of 37:int:neg (%36)
  looping thru 0 args of 36:int:const 1
  looping thru 0 args of 38:int:const 0
  looping thru 0 args of 40:int:const 0
checking: 47:bool:eq (%45, %46)
  looping thru 2 args of 47:bool:eq (%45, %46)
  looping thru 2 args of 45:int:call TypeEquals_Valid_54:f(%43, %44)
  looping thru 0 args of 43:int:const 0
  looping thru 0 args of 44:int:const 0
  looping thru 0 args of 46:int:const 0
checking: 53:bool:eq (%51, %52)
  looping thru 2 args of 53:bool:eq (%51, %52)
  looping thru 2 args of 51:int:call TypeEquals_Valid_54:f(%49, %50)
  looping thru 0 args of 49:int:const 1
  looping thru 0 args of 50:int:const 0
  looping thru 0 args of 52:int:const 0
checking: 59:bool:eq (%57, %58)
  looping thru 2 args of 59:bool:eq (%57, %58)
  looping thru 2 args of 57:int:call TypeEquals_Valid_54:f(%55, %56)
  looping thru 0 args of 55:int:const 2
  looping thru 0 args of 56:int:const 0
  looping thru 0 args of 58:int:const 0
checking: 65:bool:eq (%63, %64)
  looping thru 2 args of 65:bool:eq (%63, %64)
  looping thru 2 args of 63:int:call TypeEquals_Valid_54:f(%61, %62)
  looping thru 0 args of 61:null:const null
  looping thru 0 args of 62:int:const 0
  looping thru 0 args of 64:int:const 0
checking: 72:bool:eq (%70, %71)
  looping thru 2 args of 72:bool:eq (%70, %71)
  looping thru 2 args of 70:int:call TypeEquals_Valid_54:f(%68, %69)
  looping thru 1 args of 68:int:neg (%67)
  looping thru 0 args of 67:int:const 1
  looping thru 0 args of 69:int:const 1
  looping thru 0 args of 71:int:const 1
checking: 78:bool:eq (%76, %77)
  looping thru 2 args of 78:bool:eq (%76, %77)
  looping thru 2 args of 76:int:call TypeEquals_Valid_54:f(%74, %75)
  looping thru 0 args of 74:int:const 0
  looping thru 0 args of 75:int:const 1
  looping thru 0 args of 77:int:const 1
checking: 84:bool:eq (%82, %83)
  looping thru 2 args of 84:bool:eq (%82, %83)
  looping thru 2 args of 82:int:call TypeEquals_Valid_54:f(%80, %81)
  looping thru 0 args of 80:int:const 1
  looping thru 0 args of 81:int:const 1
  looping thru 0 args of 83:int:const 1
checking: 90:bool:eq (%88, %89)
  looping thru 2 args of 90:bool:eq (%88, %89)
  looping thru 2 args of 88:int:call TypeEquals_Valid_54:f(%86, %87)
  looping thru 0 args of 86:int:const 2
  looping thru 0 args of 87:int:const 1
  looping thru 0 args of 89:int:const 1
checking: 96:bool:eq (%94, %95)
  looping thru 2 args of 96:bool:eq (%94, %95)
  looping thru 2 args of 94:int:call TypeEquals_Valid_54:f(%92, %93)
  looping thru 0 args of 92:null:const null
  looping thru 0 args of 93:int:const 1
  looping thru 0 args of 95:int:const 1
checking: 103:bool:eq (%101, %102)
  looping thru 2 args of 103:bool:eq (%101, %102)
  looping thru 2 args of 101:int:call TypeEquals_Valid_54:f(%99, %100)
  looping thru 1 args of 99:int:neg (%98)
  looping thru 0 args of 98:int:const 1
  looping thru 0 args of 100:int:const 2
  looping thru 0 args of 102:int:const 2
checking: 109:bool:eq (%107, %108)
  looping thru 2 args of 109:bool:eq (%107, %108)
  looping thru 2 args of 107:int:call TypeEquals_Valid_54:f(%105, %106)
  looping thru 0 args of 105:int:const 0
  looping thru 0 args of 106:int:const 2
  looping thru 0 args of 108:int:const 2
checking: 115:bool:eq (%113, %114)
  looping thru 2 args of 115:bool:eq (%113, %114)
  looping thru 2 args of 113:int:call TypeEquals_Valid_54:f(%111, %112)
  looping thru 0 args of 111:int:const 1
  looping thru 0 args of 112:int:const 2
  looping thru 0 args of 114:int:const 2
checking: 121:bool:eq (%119, %120)
  looping thru 2 args of 121:bool:eq (%119, %120)
  looping thru 2 args of 119:int:call TypeEquals_Valid_54:f(%117, %118)
  looping thru 0 args of 117:int:const 2
  looping thru 0 args of 118:int:const 2
  looping thru 0 args of 120:int:const 2
checking: 127:bool:eq (%125, %126)
  looping thru 2 args of 127:bool:eq (%125, %126)
  looping thru 2 args of 125:int:call TypeEquals_Valid_54:f(%123, %124)
  looping thru 0 args of 123:null:const null
  looping thru 0 args of 124:int:const 2
  looping thru 0 args of 126:int:const 2
checking: 134:bool:eq (%132, %133)
  looping thru 2 args of 134:bool:eq (%132, %133)
  looping thru 2 args of 132:int:call TypeEquals_Valid_54:f(%130, %131)
  looping thru 1 args of 130:int:neg (%129)
  looping thru 0 args of 129:int:const 1
  looping thru 0 args of 131:null:const null
  looping thru 0 args of 133:int:const 0
checking: 140:bool:eq (%138, %139)
  looping thru 2 args of 140:bool:eq (%138, %139)
  looping thru 2 args of 138:int:call TypeEquals_Valid_54:f(%136, %137)
  looping thru 0 args of 136:int:const 0
  looping thru 0 args of 137:null:const null
  looping thru 0 args of 139:int:const 0
checking: 146:bool:eq (%144, %145)
  looping thru 2 args of 146:bool:eq (%144, %145)
  looping thru 2 args of 144:int:call TypeEquals_Valid_54:f(%142, %143)
  looping thru 0 args of 142:int:const 1
  looping thru 0 args of 143:null:const null
  looping thru 0 args of 145:int:const 0
checking: 152:bool:eq (%150, %151)
  looping thru 2 args of 152:bool:eq (%150, %151)
  looping thru 2 args of 150:int:call TypeEquals_Valid_54:f(%148, %149)
  looping thru 0 args of 148:int:const 2
  looping thru 0 args of 149:null:const null
  looping thru 0 args of 151:int:const 0
checking: 158:bool:eq (%156, %157)
  looping thru 2 args of 158:bool:eq (%156, %157)
  looping thru 2 args of 156:int:call TypeEquals_Valid_54:f(%154, %155)
  looping thru 0 args of 154:null:const null
  looping thru 0 args of 155:null:const null
  looping thru 0 args of 157:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_55.whiley =====
checking: 15:bool:istype (%11, %12)
  looping thru 2 args of 15:bool:istype (%11, %12)
  looping thru 1 args of 11:null|int:read (%0)
  looping thru 0 args of 0:null|int:decl x
  looping thru 0 args of 12:type:const int
checking: 16:int:read (%13)
  looping thru 1 args of 16:int:read (%13)
  looping thru 1 args of 13:int:alias (%0)
  looping thru 0 args of 0:null|int:decl x
checking: 19:int:const 0
  looping thru 0 args of 19:int:const 0
checking: 5:bool:eq (%2, %4)
  looping thru 2 args of 5:bool:eq (%2, %4)
  looping thru 1 args of 2:int:call TypeEquals_Valid_55:f(%1)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 4:int:neg (%3)
  looping thru 0 args of 3:int:const 1
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 1 args of 8:int:call TypeEquals_Valid_55:f(%7)
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 9:int:const 0
checking: 15:bool:eq (%13, %14)
  looping thru 2 args of 15:bool:eq (%13, %14)
  looping thru 1 args of 13:int:call TypeEquals_Valid_55:f(%12)
  looping thru 0 args of 12:int:const 1
  looping thru 0 args of 14:int:const 1
checking: 20:bool:eq (%18, %19)
  looping thru 2 args of 20:bool:eq (%18, %19)
  looping thru 1 args of 18:int:call TypeEquals_Valid_55:f(%17)
  looping thru 0 args of 17:int:const 2
  looping thru 0 args of 19:int:const 2
checking: 25:bool:eq (%23, %24)
  looping thru 2 args of 25:bool:eq (%23, %24)
  looping thru 1 args of 23:int:call TypeEquals_Valid_55:f(%22)
  looping thru 0 args of 22:null:const null
  looping thru 0 args of 24:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_6.whiley =====
checking: 5:bool:gt (%3, %4)
  looping thru 2 args of 5:bool:gt (%3, %4)
  looping thru 1 args of 3:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 4:int:const 0
assign 1 := 1
checking: 6:{int[] input}|TypeEquals_Valid_6:SyntaxError:read (%2)
  looping thru 1 args of 6:{int[] input}|TypeEquals_Valid_6:SyntaxError:read (%2)
  looping thru 0 args of 2:{int[] input}|TypeEquals_Valid_6:SyntaxError:decl nst
checking: 8:{int[] input}:recinit (%7)
  looping thru 1 args of 8:{int[] input}:recinit (%7)
  looping thru 0 args of 7:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
assign 1 := 1
checking: 11:{int[] input}|TypeEquals_Valid_6:SyntaxError:read (%2)
  looping thru 1 args of 11:{int[] input}|TypeEquals_Valid_6:SyntaxError:read (%2)
  looping thru 0 args of 2:{int[] input}|TypeEquals_Valid_6:SyntaxError:decl nst
checking: 13:TypeEquals_Valid_6:SyntaxError:call TypeEquals_Valid_6:syntaxError(%12)
  looping thru 1 args of 13:TypeEquals_Valid_6:SyntaxError:call TypeEquals_Valid_6:syntaxError(%12)
  looping thru 0 args of 12:int[]:const [112,114,111,98,108,101,109]
checking: 21:bool:istype (%17, %18)
  looping thru 2 args of 21:bool:istype (%17, %18)
  looping thru 1 args of 17:{int[] input}|TypeEquals_Valid_6:SyntaxError:read (%2)
  looping thru 0 args of 2:{int[] input}|TypeEquals_Valid_6:SyntaxError:decl nst
  looping thru 0 args of 18:type:const {int[] msg}
checking: 22:bool:const true
  looping thru 0 args of 22:bool:const true
checking: 25:bool:const false
  looping thru 0 args of 25:bool:const false
checking: 3:{int[] msg}:recinit (%2)
  looping thru 1 args of 3:{int[] msg}:recinit (%2)
  looping thru 1 args of 2:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl errorMessage
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:bool:call TypeEquals_Valid_6:f(%0)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 2:bool:const true
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:bool:call TypeEquals_Valid_6:f(%5)
  looping thru 0 args of 5:int:const 1
  looping thru 0 args of 7:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== TypeEquals_Valid_7.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_7:intbool:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_7:intbool:decl e
  looping thru 0 args of 3:type:const int
checking: 7:bool:const true
  looping thru 0 args of 7:bool:const true
checking: 10:bool:const false
  looping thru 0 args of 10:bool:const false
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:bool:call TypeEquals_Valid_7:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:bool:const true
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:bool:call TypeEquals_Valid_7:f(%5)
  looping thru 0 args of 5:bool:const false
  looping thru 0 args of 7:bool:const false
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:bool:call TypeEquals_Valid_7:f(%10)
  looping thru 0 args of 10:bool:const true
  looping thru 0 args of 12:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_9.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:TypeEquals_Valid_9:expr:read (%0)
  looping thru 0 args of 0:TypeEquals_Valid_9:expr:decl e
  looping thru 0 args of 3:type:const int[]
checking: 7:bool:const true
  looping thru 0 args of 7:bool:const true
checking: 10:bool:const false
  looping thru 0 args of 10:bool:const false
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:bool:call TypeEquals_Valid_9:f(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_9:expr:decl e = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 4:bool:const false
assign 1 := 1
checking: 7:int:read (%1)
  looping thru 1 args of 7:int:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_9:expr:decl e = 0
  looping thru 0 args of 0:int:const 1
checking: 12:int[]:arrinit (%8, %9, %10, %11)
  looping thru 4 args of 12:int[]:arrinit (%8, %9, %10, %11)
  looping thru 0 args of 8:int:const 1
  looping thru 0 args of 9:int:const 2
  looping thru 0 args of 10:int:const 3
  looping thru 0 args of 11:int:const 4
checking: 17:bool:eq (%15, %16)
  looping thru 2 args of 17:bool:eq (%15, %16)
  looping thru 1 args of 15:bool:call TypeEquals_Valid_9:f(%14)
  looping thru 1 args of 14:int[]:read (%1)
  looping thru 1 args of 1:TypeEquals_Valid_9:expr:decl e = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 16:bool:const true
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_1.whiley =====
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 2:int:const 1
assign 1 := 1
checking: 4:int|int[]:read (%0)
  looping thru 1 args of 4:int|int[]:read (%0)
  looping thru 0 args of 0:int|int[]:decl x
checking: 5:int:const 1
  looping thru 0 args of 5:int:const 1
assign 1 := 1
checking: 8:int|int[]:read (%0)
  looping thru 1 args of 8:int|int[]:read (%0)
  looping thru 0 args of 0:int|int[]:decl x
checking: 12:int[]:arrinit (%9, %10, %11)
  looping thru 3 args of 12:int[]:arrinit (%9, %10, %11)
  looping thru 0 args of 9:int:const 1
  looping thru 0 args of 10:int:const 2
  looping thru 0 args of 11:int:const 3
checking: 21:bool:eq (%16, %20)
  looping thru 2 args of 21:bool:eq (%16, %20)
  looping thru 1 args of 16:int|int[]:read (%0)
  looping thru 0 args of 0:int|int[]:decl x
  looping thru 3 args of 20:int[]:arrinit (%17, %18, %19)
  looping thru 0 args of 17:int:const 1
  looping thru 0 args of 18:int:const 2
  looping thru 0 args of 19:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== UnionType_Valid_10.whiley =====
checking: 2:UnionType_Valid_10:msgType:read (%0)
  looping thru 1 args of 2:UnionType_Valid_10:msgType:read (%0)
  looping thru 0 args of 0:UnionType_Valid_10:msgType:decl m
checking: 13:bool:eq (%7, %12)
  looping thru 2 args of 13:bool:eq (%7, %12)
  looping thru 1 args of 7:UnionType_Valid_10:msgType:call UnionType_Valid_10:f(%6)
  looping thru 1 args of 6:{int[] data,int op}:read (%5)
  looping thru 1 args of 5:UnionType_Valid_10:msg1:decl x = 4
  looping thru 2 args of 4:{int[] data,int op}:recinit (%2, %3)
  looping thru 2 args of 2:int[]:arrgen (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 3:int:const 11
  looping thru 2 args of 12:{int[] data,int op}:recinit (%10, %11)
  looping thru 2 args of 10:int[]:arrgen (%8, %9)
  looping thru 0 args of 8:int:const 0
  looping thru 0 args of 9:int:const 0
  looping thru 0 args of 11:int:const 11
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_11.whiley =====
checking: 2:UnionType_Valid_11:msgType:read (%0)
  looping thru 1 args of 2:UnionType_Valid_11:msgType:read (%0)
  looping thru 0 args of 0:UnionType_Valid_11:msgType:decl m
checking: 16:bool:eq (%10, %15)
  looping thru 2 args of 16:bool:eq (%10, %15)
  looping thru 1 args of 10:UnionType_Valid_11:msgType:call UnionType_Valid_11:f(%9)
  looping thru 1 args of 9:{int[] data,int op}:read (%5)
  looping thru 1 args of 5:UnionType_Valid_11:msg1:decl m1 = 4
  looping thru 2 args of 4:{int[] data,int op}:recinit (%2, %3)
  looping thru 2 args of 2:int[]:arrgen (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 3:int:const 11
  looping thru 2 args of 15:{int[] data,int op}:recinit (%13, %14)
  looping thru 2 args of 13:int[]:arrgen (%11, %12)
  looping thru 0 args of 11:int:const 0
  looping thru 0 args of 12:int:const 0
  looping thru 0 args of 14:int:const 11
checking: 22:bool:eq (%19, %21)
  looping thru 2 args of 22:bool:eq (%19, %21)
  looping thru 1 args of 19:UnionType_Valid_11:msgType:call UnionType_Valid_11:f(%18)
  looping thru 1 args of 18:{int index}:read (%8)
  looping thru 1 args of 8:UnionType_Valid_11:msg2:decl m2 = 7
  looping thru 1 args of 7:{int index}:recinit (%6)
  looping thru 0 args of 6:int:const 1
  looping thru 1 args of 21:{int index}:recinit (%20)
  looping thru 0 args of 20:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_12.whiley =====
checking: 2:UnionType_Valid_12:IntList:read (%0)
  looping thru 1 args of 2:UnionType_Valid_12:IntList:read (%0)
  looping thru 0 args of 0:UnionType_Valid_12:IntList:decl y
checking: 2:{int mode,int op}:read (%0)
  looping thru 1 args of 2:{int mode,int op}:read (%0)
  looping thru 0 args of 0:{int mode,int op}:decl z
checking: 11:bool:eq (%6, %10)
  looping thru 2 args of 11:bool:eq (%6, %10)
  looping thru 1 args of 6:UnionType_Valid_12:IntList:call UnionType_Valid_12:f(%5)
  looping thru 1 args of 5:{int op,bool[] rest}:read (%4)
  looping thru 1 args of 4:UnionType_Valid_12:IntList:decl x = 3
  looping thru 2 args of 3:{int op,bool[] rest}:recinit (%0, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 2:bool[]:arrinit (%1)
  looping thru 0 args of 1:bool:const false
  looping thru 2 args of 10:{int op,bool[] rest}:recinit (%7, %9)
  looping thru 0 args of 7:int:const 1
  looping thru 1 args of 9:bool[]:arrinit (%8)
  looping thru 0 args of 8:bool:const false
assign 1 := 1
checking: 13:{int op,bool[] rest}:read (%4)
  looping thru 1 args of 13:{int op,bool[] rest}:read (%4)
  looping thru 1 args of 4:UnionType_Valid_12:IntList:decl x = 3
  looping thru 2 args of 3:{int op,bool[] rest}:recinit (%0, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 2:bool[]:arrinit (%1)
  looping thru 0 args of 1:bool:const false
checking: 16:{int mode,int op}:recinit (%14, %15)
  looping thru 2 args of 16:{int mode,int op}:recinit (%14, %15)
  looping thru 0 args of 14:int:const 0
  looping thru 0 args of 15:int:const 123
checking: 23:bool:eq (%19, %22)
  looping thru 2 args of 23:bool:eq (%19, %22)
  looping thru 1 args of 19:UnionType_Valid_12:IntList:call UnionType_Valid_12:g(%18)
  looping thru 1 args of 18:{int mode,int op}:read (%4)
  looping thru 1 args of 4:UnionType_Valid_12:IntList:decl x = 3
  looping thru 2 args of 3:{int op,bool[] rest}:recinit (%0, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 2:bool[]:arrinit (%1)
  looping thru 0 args of 1:bool:const false
  looping thru 2 args of 22:{int mode,int op}:recinit (%20, %21)
  looping thru 0 args of 20:int:const 0
  looping thru 0 args of 21:int:const 123
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== UnionType_Valid_13.whiley =====
checking: 2:UnionType_Valid_13:msgType:read (%0)
  looping thru 1 args of 2:UnionType_Valid_13:msgType:read (%0)
  looping thru 0 args of 0:UnionType_Valid_13:msgType:decl m
checking: 16:bool:eq (%10, %15)
  looping thru 2 args of 16:bool:eq (%10, %15)
  looping thru 1 args of 10:UnionType_Valid_13:msgType:call UnionType_Valid_13:f(%9)
  looping thru 1 args of 9:{int[] data,int op}:read (%5)
  looping thru 1 args of 5:UnionType_Valid_13:msg1:decl m1 = 4
  looping thru 2 args of 4:{int[] data,int op}:recinit (%2, %3)
  looping thru 2 args of 2:int[]:arrgen (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 3:int:const 11
  looping thru 2 args of 15:{int[] data,int op}:recinit (%13, %14)
  looping thru 2 args of 13:int[]:arrgen (%11, %12)
  looping thru 0 args of 11:int:const 0
  looping thru 0 args of 12:int:const 0
  looping thru 0 args of 14:int:const 11
checking: 22:bool:eq (%19, %21)
  looping thru 2 args of 22:bool:eq (%19, %21)
  looping thru 1 args of 19:UnionType_Valid_13:msgType:call UnionType_Valid_13:f(%18)
  looping thru 1 args of 18:{int index}:read (%8)
  looping thru 1 args of 8:UnionType_Valid_13:msg2:decl m2 = 7
  looping thru 1 args of 7:{int index}:recinit (%6)
  looping thru 0 args of 6:int:const 1
  looping thru 1 args of 21:{int index}:recinit (%20)
  looping thru 0 args of 20:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_14.whiley =====
checking: 6:bool:istype (%2, %3)
  looping thru 2 args of 6:bool:istype (%2, %3)
  looping thru 1 args of 2:UnionType_Valid_14:Expr:read (%0)
  looping thru 0 args of 0:UnionType_Valid_14:Expr:decl e
  looping thru 0 args of 3:type:const int
checking: 7:int:read (%4)
  looping thru 1 args of 7:int:read (%4)
  looping thru 1 args of 4:int:alias (%0)
  looping thru 0 args of 0:UnionType_Valid_14:Expr:decl e
checking: 14:bool:istype (%10, %11)
  looping thru 2 args of 14:bool:istype (%10, %11)
  looping thru 1 args of 10:UnionType_Valid_14:Expr:read (%5)
  looping thru 1 args of 5:UnionType_Valid_14:Expr:alias (%0)
  looping thru 0 args of 0:UnionType_Valid_14:Expr:decl e
  looping thru 0 args of 11:type:const int[]
checking: 16:int:arrlen (%15)
  looping thru 1 args of 16:int:arrlen (%15)
  looping thru 1 args of 15:int[]:read (%12)
  looping thru 1 args of 12:int[]:alias (%5)
  looping thru 1 args of 5:UnionType_Valid_14:Expr:alias (%0)
  looping thru 0 args of 0:UnionType_Valid_14:Expr:decl e
checking: 19:int:const 1
  looping thru 0 args of 19:int:const 1
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call UnionType_Valid_14:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 1
checking: 11:bool:eq (%9, %10)
  looping thru 2 args of 11:bool:eq (%9, %10)
  looping thru 1 args of 9:int:call UnionType_Valid_14:f(%8)
  looping thru 3 args of 8:int[]:arrinit (%5, %6, %7)
  looping thru 0 args of 5:int:const 1
  looping thru 0 args of 6:int:const 2
  looping thru 0 args of 7:int:const 3
  looping thru 0 args of 10:int:const 3
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:int:call UnionType_Valid_14:f(%16)
  looping thru 3 args of 16:{int lhs,int op,int rhs}:recinit (%13, %14, %15)
  looping thru 0 args of 13:int:const 1
  looping thru 0 args of 14:int:const 0
  looping thru 0 args of 15:int:const 2
  looping thru 0 args of 18:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_15.whiley =====
checking: 2:UnionType_Valid_15:msgType:read (%0)
  looping thru 1 args of 2:UnionType_Valid_15:msgType:read (%0)
  looping thru 0 args of 0:UnionType_Valid_15:msgType:decl m
checking: 15:bool:eq (%8, %14)
  looping thru 2 args of 15:bool:eq (%8, %14)
  looping thru 1 args of 8:UnionType_Valid_15:msgType:call UnionType_Valid_15:f(%7)
  looping thru 1 args of 7:{int[] data,int op}:read (%6)
  looping thru 1 args of 6:UnionType_Valid_15:msg1:decl x = 5
  looping thru 2 args of 5:{int[] data,int op}:recinit (%3, %4)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 4:int:const 1
  looping thru 2 args of 14:{int[] data,int op}:recinit (%12, %13)
  looping thru 3 args of 12:int[]:arrinit (%9, %10, %11)
  looping thru 0 args of 9:int:const 1
  looping thru 0 args of 10:int:const 2
  looping thru 0 args of 11:int:const 3
  looping thru 0 args of 13:int:const 1
checking: 25:bool:eq (%20, %24)
  looping thru 2 args of 25:bool:eq (%20, %24)
  looping thru 1 args of 20:int[]:read (%19)
  looping thru 1 args of 19:int[]:decl list = 18
  looping thru 1 args of 18:int[]:recfield %17 data
  looping thru 1 args of 17:{int[] data,int op}:read (%6)
  looping thru 1 args of 6:UnionType_Valid_15:msg1:decl x = 5
  looping thru 2 args of 5:{int[] data,int op}:recinit (%3, %4)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 4:int:const 1
  looping thru 3 args of 24:int[]:arrinit (%21, %22, %23)
  looping thru 0 args of 21:int:const 1
  looping thru 0 args of 22:int:const 2
  looping thru 0 args of 23:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
UnionType_Valid_15.bpl(7,265): Error: undeclared identifier: $dum
1 name resolution errors detected in UnionType_Valid_15.bpl
===== UnionType_Valid_16.whiley =====
assign 1 := 1
checking: 4:int:recfield %3 op
  looping thru 1 args of 4:int:recfield %3 op
  looping thru 1 args of 3:{int op}:read (%2)
  looping thru 1 args of 2:UnionType_Valid_16:IntList:decl x = 1
  looping thru 1 args of 1:{int op}:recinit (%0)
  looping thru 0 args of 0:int:const 2
checking: 5:int:const 1
  looping thru 0 args of 5:int:const 1
checking: 12:bool:eq (%9, %11)
  looping thru 2 args of 12:bool:eq (%9, %11)
  looping thru 1 args of 9:{int op}:read (%8)
  looping thru 1 args of 8:UnionType_Valid_16:IntList:decl y = 7
  looping thru 1 args of 7:{int op}:read (%2)
  looping thru 1 args of 2:UnionType_Valid_16:IntList:decl x = 1
  looping thru 1 args of 1:{int op}:recinit (%0)
  looping thru 0 args of 0:int:const 2
  looping thru 1 args of 11:{int op}:recinit (%10)
  looping thru 0 args of 10:int:const 1
assign 1 := 1
checking: 14:{int op}:read (%2)
  looping thru 1 args of 14:{int op}:read (%2)
  looping thru 1 args of 2:UnionType_Valid_16:IntList:decl x = 1
  looping thru 1 args of 1:{int op}:recinit (%0)
  looping thru 0 args of 0:int:const 2
checking: 19:{int[] op}:recinit (%18)
  looping thru 1 args of 19:{int[] op}:recinit (%18)
  looping thru 3 args of 18:int[]:arrinit (%15, %16, %17)
  looping thru 0 args of 15:int:const 1
  looping thru 0 args of 16:int:const 2
  looping thru 0 args of 17:int:const 3
checking: 27:bool:eq (%21, %26)
  looping thru 2 args of 27:bool:eq (%21, %26)
  looping thru 1 args of 21:{int[] op}:read (%2)
  looping thru 1 args of 2:UnionType_Valid_16:IntList:decl x = 1
  looping thru 1 args of 1:{int op}:recinit (%0)
  looping thru 0 args of 0:int:const 2
  looping thru 1 args of 26:{int[] op}:recinit (%25)
  looping thru 3 args of 25:int[]:arrinit (%22, %23, %24)
  looping thru 0 args of 22:int:const 1
  looping thru 0 args of 23:int:const 2
  looping thru 0 args of 24:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== UnionType_Valid_17.whiley =====
checking: 2:int:read (%0)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl y
checking: 2:int[]:read (%0)
  looping thru 1 args of 2:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl z
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:call UnionType_Valid_17:f(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:UnionType_Valid_17:IntList:decl x = 0
  looping thru 0 args of 0:int:const 123
  looping thru 0 args of 4:int:const 123
wyboogie.NotImplementedYet: call to method (f) from inside an expression in 3:int:call UnionType_Valid_17:f(%2)
	at wyboogie.Wyil2Boogie.writeInvoke(Wyil2Boogie.java:1151)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:972)
	at wyboogie.Wyil2Boogie.writeEquality(Wyil2Boogie.java:1237)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1032)
	at wyboogie.Wyil2Boogie.boolExpr(Wyil2Boogie.java:934)
	at wyboogie.Wyil2Boogie.writeAssume(Wyil2Boogie.java:703)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:598)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== UnionType_Valid_18.whiley =====
checking: 6:int:recfield %5 op
  looping thru 1 args of 6:int:recfield %5 op
  looping thru 1 args of 5:UnionType_Valid_18:tupper:read (%0)
  looping thru 0 args of 0:UnionType_Valid_18:tupper:decl y
checking: 7:bool:eq (%5, %6)
  looping thru 2 args of 7:bool:eq (%5, %6)
  looping thru 1 args of 5:int:call UnionType_Valid_18:f(%4)
  looping thru 1 args of 4:{int il,int op}:read (%3)
  looping thru 1 args of 3:UnionType_Valid_18:tupper:decl x = 2
  looping thru 2 args of 2:{int il,int op}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 6:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_19.whiley =====
checking: 3:int:recfield %2 op
  looping thru 1 args of 3:int:recfield %2 op
  looping thru 1 args of 2:UnionType_Valid_19:tupper:read (%0)
  looping thru 0 args of 0:UnionType_Valid_19:tupper:decl y
checking: 7:bool:eq (%5, %6)
  looping thru 2 args of 7:bool:eq (%5, %6)
  looping thru 1 args of 5:int:call UnionType_Valid_19:f(%4)
  looping thru 1 args of 4:{int il,int op}:read (%3)
  looping thru 1 args of 3:UnionType_Valid_19:tupper:decl x = 2
  looping thru 2 args of 2:{int il,int op}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 6:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_2.whiley =====
checking: 8:bool:land (%4, %7)
  looping thru 2 args of 4:bool:lteq (%2, %3)
  looping thru 0 args of 2:int:const 48
  looping thru 1 args of 3:UnionType_Valid_2:char:read (%0)
  looping thru 0 args of 0:UnionType_Valid_2:char:decl c
  looping thru 2 args of 7:bool:lteq (%5, %6)
  looping thru 1 args of 5:UnionType_Valid_2:char:read (%0)
  looping thru 0 args of 0:UnionType_Valid_2:char:decl c
  looping thru 0 args of 6:int:const 57
wyboogie.NotImplementedYet: multiple return values:parseTerm
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:272)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== UnionType_Valid_20.whiley =====
checking: 2:UnionType_Valid_20:byteCode:read (%0)
  looping thru 1 args of 2:UnionType_Valid_20:byteCode:read (%0)
  looping thru 0 args of 0:UnionType_Valid_20:byteCode:decl b
checking: 9:bool:eq (%5, %8)
  looping thru 2 args of 9:bool:eq (%5, %8)
  looping thru 1 args of 5:UnionType_Valid_20:byteCode:call UnionType_Valid_20:f(%4)
  looping thru 1 args of 4:{int index,int op}:read (%3)
  looping thru 1 args of 3:UnionType_Valid_20:STORE:decl b = 2
  looping thru 2 args of 2:{int index,int op}:recinit (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 0
  looping thru 2 args of 8:{int index,int op}:recinit (%6, %7)
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 7:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_21.whiley =====
checking: 4:bool:lteq (%2, %3)
  looping thru 2 args of 4:bool:lteq (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 3:int:const 0
checking: 5:int:const 0
  looping thru 0 args of 5:int:const 0
checking: 11:UnionType_Valid_21:nlist:call UnionType_Valid_21:f(%10)
  looping thru 1 args of 11:UnionType_Valid_21:nlist:call UnionType_Valid_21:f(%10)
  looping thru 2 args of 10:int:sub (%8, %9)
  looping thru 1 args of 8:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 9:int:const 1
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:UnionType_Valid_21:nlist:read (%2)
  looping thru 1 args of 2:UnionType_Valid_21:nlist:decl x = 1
  looping thru 1 args of 1:UnionType_Valid_21:nlist:call UnionType_Valid_21:f(%0)
  looping thru 0 args of 0:int:const 2
  looping thru 0 args of 4:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_22.whiley =====
checking: 10:bool:lor (%5, %9)
  looping thru 2 args of 5:bool:lt (%3, %4)
  looping thru 1 args of 3:int:read (%0)
  looping thru 0 args of 0:int:decl i
  looping thru 0 args of 4:int:const 0
  looping thru 2 args of 9:bool:gteq (%6, %8)
  looping thru 1 args of 6:int:read (%0)
  looping thru 0 args of 0:int:decl i
  looping thru 1 args of 8:int:arrlen (%7)
  looping thru 1 args of 7:UnionType_Valid_22:nlist[]:read (%1)
  looping thru 0 args of 1:UnionType_Valid_22:nlist[]:decl xs
checking: 11:int:const 0
  looping thru 0 args of 11:int:const 0
checking: 16:UnionType_Valid_22:nlist:arridx (%14, %15)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 16:UnionType_Valid_22:nlist:arridx (%14, %15)
  looping thru 1 args of 14:UnionType_Valid_22:nlist[]:read (%1)
  looping thru 0 args of 1:UnionType_Valid_22:nlist[]:decl xs
  looping thru 1 args of 15:int:read (%0)
  looping thru 0 args of 0:int:decl i
checking: 9:bool:eq (%7, %8)
  looping thru 2 args of 9:bool:eq (%7, %8)
  looping thru 1 args of 7:UnionType_Valid_22:nlist:read (%6)
  looping thru 1 args of 6:UnionType_Valid_22:nlist:decl x = 5
  looping thru 2 args of 5:UnionType_Valid_22:nlist:call UnionType_Valid_22:f(%0, %4)
  looping thru 0 args of 0:int:const 2
  looping thru 3 args of 4:int[]:arrinit (%1, %2, %3)
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 8:int:const 4
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_23.whiley =====
checking: 2:UnionType_Valid_23:IntList:read (%0)
  looping thru 1 args of 2:UnionType_Valid_23:IntList:read (%0)
  looping thru 0 args of 0:UnionType_Valid_23:IntList:decl y
checking: 7:bool:eq (%5, %6)
  looping thru 2 args of 7:bool:eq (%5, %6)
  looping thru 0 args of 5:int:const 0
  looping thru 0 args of 6:int:const 10
assign 1 := 1
checking: 8:{int op,bool[] rest}:read (%4)
  looping thru 1 args of 8:{int op,bool[] rest}:read (%4)
  looping thru 1 args of 4:{bool|int op,bool[] rest}:decl x = 3
  looping thru 2 args of 3:{int op,bool[] rest}:recinit (%0, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 2:bool[]:arrinit (%1)
  looping thru 0 args of 1:bool:const false
checking: 12:{bool op,bool[] rest}:recinit (%9, %11)
  looping thru 2 args of 12:{bool op,bool[] rest}:recinit (%9, %11)
  looping thru 0 args of 9:bool:const false
  looping thru 1 args of 11:bool[]:arrinit (%10)
  looping thru 0 args of 10:bool:const false
assign 1 := 1
checking: 17:bool|int:recfield %16 op
  looping thru 1 args of 17:bool|int:recfield %16 op
  looping thru 1 args of 16:{bool op,bool[] rest}|{int op,bool[] rest}:read (%4)
  looping thru 1 args of 4:{bool|int op,bool[] rest}:decl x = 3
  looping thru 2 args of 3:{int op,bool[] rest}:recinit (%0, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 2:bool[]:arrinit (%1)
  looping thru 0 args of 1:bool:const false
checking: 18:int:const 123
  looping thru 0 args of 18:int:const 123
checking: 26:bool:eq (%21, %25)
  looping thru 2 args of 26:bool:eq (%21, %25)
  looping thru 1 args of 21:UnionType_Valid_23:IntList:call UnionType_Valid_23:f(%20)
  looping thru 1 args of 20:{int op,bool[] rest}:read (%4)
  looping thru 1 args of 4:{bool|int op,bool[] rest}:decl x = 3
  looping thru 2 args of 3:{int op,bool[] rest}:recinit (%0, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 1 args of 2:bool[]:arrinit (%1)
  looping thru 0 args of 1:bool:const false
  looping thru 2 args of 25:{int op,bool[] rest}:recinit (%22, %24)
  looping thru 0 args of 22:int:const 123
  looping thru 1 args of 24:bool[]:arrinit (%23)
  looping thru 0 args of 23:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_3.whiley =====
checking: 12:bool:lt (%9, %11)
  looping thru 2 args of 12:bool:lt (%9, %11)
  looping thru 1 args of 9:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 0 args of 3:int:const 0
  looping thru 1 args of 11:int:arrlen (%10)
  looping thru 1 args of 10:UnionType_Valid_3:TYPE[]:read (%0)
  looping thru 0 args of 0:UnionType_Valid_3:TYPE[]:decl xs
checking: 17:bool:eq (%15, %16)
  looping thru 2 args of 17:bool:eq (%15, %16)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 15:UnionType_Valid_3:TYPE:arridx (%13, %14)
  looping thru 1 args of 13:UnionType_Valid_3:TYPE[]:read (%0)
  looping thru 0 args of 0:UnionType_Valid_3:TYPE[]:decl xs
  looping thru 1 args of 14:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 0 args of 3:int:const 0
  looping thru 1 args of 16:UnionType_Valid_3:TYPE:read (%1)
  looping thru 0 args of 1:UnionType_Valid_3:TYPE:decl p
wyboogie.NotImplementedYet: comparison of void intersection type: UnionType_Valid_3:TYPE and UnionType_Valid_3:TYPE in 17:bool:eq (%15, %16)
	at wyboogie.Wyil2Boogie.writeEquality(Wyil2Boogie.java:1234)
	at wyboogie.Wyil2Boogie.expr(Wyil2Boogie.java:1032)
	at wyboogie.Wyil2Boogie.boolExpr(Wyil2Boogie.java:934)
	at wyboogie.Wyil2Boogie.writeIf(Wyil2Boogie.java:826)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:626)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeWhile(Wyil2Boogie.java:881)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:641)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== UnionType_Valid_4.whiley =====
checking: 2:UnionType_Valid_4:IntBool:read (%0)
  looping thru 1 args of 2:UnionType_Valid_4:IntBool:read (%0)
  looping thru 0 args of 0:UnionType_Valid_4:IntBool:decl y
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:UnionType_Valid_4:IntBool:call UnionType_Valid_4:f(%2)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:UnionType_Valid_4:IntBool:decl x = 0
  looping thru 0 args of 0:int:const 123
  looping thru 0 args of 4:int:const 123
assign 1 := 1
checking: 7:int:read (%1)
  looping thru 1 args of 7:int:read (%1)
  looping thru 1 args of 1:UnionType_Valid_4:IntBool:decl x = 0
  looping thru 0 args of 0:int:const 123
checking: 8:bool:const true
  looping thru 0 args of 8:bool:const true
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:UnionType_Valid_4:IntBool:call UnionType_Valid_4:f(%10)
  looping thru 1 args of 10:bool:read (%1)
  looping thru 1 args of 1:UnionType_Valid_4:IntBool:decl x = 0
  looping thru 0 args of 0:int:const 123
  looping thru 0 args of 12:bool:const true
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_5.whiley =====
checking: 2:UnionType_Valid_5:wur4nat:read (%0)
  looping thru 1 args of 2:UnionType_Valid_5:wur4nat:read (%0)
  looping thru 0 args of 0:UnionType_Valid_5:wur4nat:decl x
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:any:call UnionType_Valid_5:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_6.whiley =====
checking: 2:UnionType_Valid_6:wur4nat:read (%0)
  looping thru 1 args of 2:UnionType_Valid_6:wur4nat:read (%0)
  looping thru 0 args of 0:UnionType_Valid_6:wur4nat:decl x
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:any:call UnionType_Valid_6:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_7.whiley =====
checking: 3:int:recfield %2 op
  looping thru 1 args of 3:int:recfield %2 op
  looping thru 1 args of 2:UnionType_Valid_7:msgType:read (%0)
  looping thru 0 args of 0:UnionType_Valid_7:msgType:decl msg
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:any:call UnionType_Valid_7:f(%5)
  looping thru 2 args of 5:{int op,int[] payload}:recinit (%0, %4)
  looping thru 0 args of 0:int:const 1
  looping thru 3 args of 4:int[]:arrinit (%1, %2, %3)
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 2:int:const 2
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 7:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_8.whiley =====
checking: 3:int:recfield %2 op
  looping thru 1 args of 3:int:recfield %2 op
  looping thru 1 args of 2:UnionType_Valid_8:msgType:read (%0)
  looping thru 0 args of 0:UnionType_Valid_8:msgType:decl msg
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:any:call UnionType_Valid_8:f(%5)
  looping thru 2 args of 5:{int op,int[] payload}:recinit (%0, %4)
  looping thru 0 args of 0:int:const 1
  looping thru 3 args of 4:int[]:arrinit (%1, %2, %3)
  looping thru 0 args of 1:int:const 1
  looping thru 0 args of 2:int:const 2
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 7:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_9.whiley =====
checking: 2:UnionType_Valid_9:msgType:read (%0)
  looping thru 1 args of 2:UnionType_Valid_9:msgType:read (%0)
  looping thru 0 args of 0:UnionType_Valid_9:msgType:decl m
checking: 13:bool:eq (%7, %12)
  looping thru 2 args of 13:bool:eq (%7, %12)
  looping thru 1 args of 7:any:call UnionType_Valid_9:f(%6)
  looping thru 1 args of 6:{int[] data,int op}:read (%5)
  looping thru 1 args of 5:UnionType_Valid_9:msg1:decl x = 4
  looping thru 2 args of 4:{int[] data,int op}:recinit (%2, %3)
  looping thru 2 args of 2:int[]:arrgen (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 3:int:const 11
  looping thru 2 args of 12:{int[] data,int op}:recinit (%10, %11)
  looping thru 2 args of 10:int[]:arrgen (%8, %9)
  looping thru 0 args of 8:int:const 0
  looping thru 0 args of 9:int:const 0
  looping thru 0 args of 11:int:const 11
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Update_Valid_2.whiley =====
MUTATED INPUT l : Update_Valid_2:list
assign 1 := 1
checking: 14:int:arridx (%12, %13)
conjecture: 0 <= toInt(index) && toInt(index) < arraylen(l)
  looping thru 2 args of 14:int:arridx (%12, %13)
  looping thru 1 args of 12:Update_Valid_2:list:read (%0)
  looping thru 0 args of 0:Update_Valid_2:list:decl l
  looping thru 1 args of 13:int:read (%1)
  looping thru 0 args of 1:int:decl index
checking: 15:int:read (%2)
  looping thru 1 args of 15:int:read (%2)
  looping thru 0 args of 2:int:decl value
checking: 17:int[]:read (%0)
  looping thru 1 args of 17:int[]:read (%0)
  looping thru 0 args of 0:Update_Valid_2:list:decl l
checking: 13:bool:eq (%8, %12)
  looping thru 2 args of 13:bool:eq (%8, %12)
  looping thru 3 args of 8:Update_Valid_2:list:call Update_Valid_2:update(%5, %6, %7)
  looping thru 1 args of 5:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl l = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 49
  looping thru 0 args of 1:int:const 50
  looping thru 0 args of 2:int:const 51
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 7:int:const 0
  looping thru 3 args of 12:int[]:arrinit (%9, %10, %11)
  looping thru 0 args of 9:int:const 49
  looping thru 0 args of 10:int:const 0
  looping thru 0 args of 11:int:const 51
checking: 23:bool:eq (%18, %22)
  looping thru 2 args of 23:bool:eq (%18, %22)
  looping thru 3 args of 18:Update_Valid_2:list:call Update_Valid_2:update(%15, %16, %17)
  looping thru 1 args of 15:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl l = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 49
  looping thru 0 args of 1:int:const 50
  looping thru 0 args of 2:int:const 51
  looping thru 0 args of 16:int:const 2
  looping thru 0 args of 17:int:const 0
  looping thru 3 args of 22:int[]:arrinit (%19, %20, %21)
  looping thru 0 args of 19:int:const 49
  looping thru 0 args of 20:int:const 50
  looping thru 0 args of 21:int:const 0
assign 1 := 1
checking: 25:int[]:read (%4)
  looping thru 1 args of 25:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl l = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 49
  looping thru 0 args of 1:int:const 50
  looping thru 0 args of 2:int:const 51
checking: 26:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
  looping thru 0 args of 26:int[]:const [72,101,108,108,111,32,87,111,114,108,100]
checking: 44:bool:eq (%31, %43)
  looping thru 2 args of 44:bool:eq (%31, %43)
  looping thru 3 args of 31:Update_Valid_2:list:call Update_Valid_2:update(%28, %29, %30)
  looping thru 1 args of 28:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl l = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 49
  looping thru 0 args of 1:int:const 50
  looping thru 0 args of 2:int:const 51
  looping thru 0 args of 29:int:const 1
  looping thru 0 args of 30:int:const 0
  looping thru 11 args of 43:int[]:arrinit (%32, %33, %34, %35, %36, %37, %38, %39, %40, %41, %42)
  looping thru 0 args of 32:int:const 72
  looping thru 0 args of 33:int:const 0
  looping thru 0 args of 34:int:const 108
  looping thru 0 args of 35:int:const 108
  looping thru 0 args of 36:int:const 111
  looping thru 0 args of 37:int:const 32
  looping thru 0 args of 38:int:const 87
  looping thru 0 args of 39:int:const 111
  looping thru 0 args of 40:int:const 114
  looping thru 0 args of 41:int:const 108
  looping thru 0 args of 42:int:const 100
checking: 62:bool:eq (%49, %61)
  looping thru 2 args of 62:bool:eq (%49, %61)
  looping thru 3 args of 49:Update_Valid_2:list:call Update_Valid_2:update(%46, %47, %48)
  looping thru 1 args of 46:int[]:read (%4)
  looping thru 1 args of 4:int[]:decl l = 3
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 49
  looping thru 0 args of 1:int:const 50
  looping thru 0 args of 2:int:const 51
  looping thru 0 args of 47:int:const 2
  looping thru 0 args of 48:int:const 0
  looping thru 11 args of 61:int[]:arrinit (%50, %51, %52, %53, %54, %55, %56, %57, %58, %59, %60)
  looping thru 0 args of 50:int:const 72
  looping thru 0 args of 51:int:const 101
  looping thru 0 args of 52:int:const 0
  looping thru 0 args of 53:int:const 108
  looping thru 0 args of 54:int:const 111
  looping thru 0 args of 55:int:const 32
  looping thru 0 args of 56:int:const 87
  looping thru 0 args of 57:int:const 111
  looping thru 0 args of 58:int:const 114
  looping thru 0 args of 59:int:const 108
  looping thru 0 args of 60:int:const 100
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== VarDecl_Valid_1.whiley =====
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl x = 0
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 3:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== VarDecl_Valid_2.whiley =====
checking: 5:int:read (%0)
  looping thru 1 args of 5:int:read (%0)
  looping thru 0 args of 0:int:decl z
checking: 10:int:call VarDecl_Valid_2:g(%9)
  looping thru 1 args of 10:int:call VarDecl_Valid_2:g(%9)
  looping thru 1 args of 9:int:read (%8)
  looping thru 1 args of 8:int:decl y = 7
  looping thru 2 args of 7:int:add (%5, %6)
  looping thru 1 args of 5:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 6:int:const 1
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call VarDecl_Valid_2:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== VarDecl_Valid_3.whiley =====
checking: 2:int:read (%0)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl z
checking: 7:int:call VarDecl_Valid_3:g(%6)
  looping thru 1 args of 7:int:call VarDecl_Valid_3:g(%6)
  looping thru 1 args of 6:int:read (%5)
  looping thru 1 args of 5:int:decl y = 4
  looping thru 2 args of 4:int:add (%2, %3)
  looping thru 1 args of 2:int:read (%0)
  looping thru 0 args of 0:int:decl x
  looping thru 0 args of 3:int:const 1
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call VarDecl_Valid_3:f(%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== VarDecl_Valid_4.whiley =====
checking: 1:int:const 12478623847120981
  looping thru 0 args of 1:int:const 12478623847120981
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:int:decl pool = 0
  looping thru 0 args of 0:int:call VarDecl_Valid_4:constantPool()
  looping thru 0 args of 3:int:const 12478623847120981
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_1.whiley =====
checking: 24:bool:gt (%22, %23)
  looping thru 2 args of 24:bool:gt (%22, %23)
  looping thru 1 args of 22:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 1 args of 3:int:arrlen (%2)
  looping thru 1 args of 2:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 0 args of 23:int:const 0
assign 1 := 1
checking: 32:int:read (%4)
  looping thru 1 args of 32:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 1 args of 3:int:arrlen (%2)
  looping thru 1 args of 2:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
checking: 35:int:sub (%33, %34)
  looping thru 2 args of 35:int:sub (%33, %34)
  looping thru 1 args of 33:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 1 args of 3:int:arrlen (%2)
  looping thru 1 args of 2:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 0 args of 34:int:const 1
assign 1 := 1
checking: 39:int:arridx (%37, %38)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(r)
  looping thru 2 args of 39:int:arridx (%37, %38)
  looping thru 1 args of 37:int[]:read (%9)
  looping thru 1 args of 9:int[]:decl r = 8
  looping thru 2 args of 8:int[]:arrgen (%5, %7)
  looping thru 0 args of 5:int:const 0
  looping thru 1 args of 7:int:arrlen (%6)
  looping thru 1 args of 6:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 1 args of 38:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 1 args of 3:int:arrlen (%2)
  looping thru 1 args of 2:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
checking: 40:int:read (%31)
  looping thru 1 args of 40:int:read (%31)
  looping thru 1 args of 31:int:decl item = 30
conjecture: 0 <= arraylen(ls) - toInt(i) && arraylen(ls) - toInt(i) < arraylen(ls)
  looping thru 2 args of 30:int:arridx (%25, %29)
  looping thru 1 args of 25:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 2 args of 29:int:sub (%27, %28)
  looping thru 1 args of 27:int:arrlen (%26)
  looping thru 1 args of 26:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 1 args of 28:int:read (%4)
  looping thru 1 args of 4:int:decl i = 3
  looping thru 1 args of 3:int:arrlen (%2)
  looping thru 1 args of 2:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
checking: 44:int[]:read (%9)
  looping thru 1 args of 44:int[]:read (%9)
  looping thru 1 args of 9:int[]:decl r = 8
  looping thru 2 args of 8:int[]:arrgen (%5, %7)
  looping thru 0 args of 5:int:const 0
  looping thru 1 args of 7:int:arrlen (%6)
  looping thru 1 args of 6:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
checking: 15:bool:eq (%8, %14)
  looping thru 2 args of 15:bool:eq (%8, %14)
  looping thru 1 args of 8:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl rs = 6
  looping thru 1 args of 6:int[]:call While_Valid_1:reverse(%5)
  looping thru 5 args of 5:int[]:arrinit (%0, %1, %2, %3, %4)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 4:int:const 5
  looping thru 5 args of 14:int[]:arrinit (%9, %10, %11, %12, %13)
  looping thru 0 args of 9:int:const 5
  looping thru 0 args of 10:int:const 4
  looping thru 0 args of 11:int:const 3
  looping thru 0 args of 12:int:const 2
  looping thru 0 args of 13:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_1.bpl(29,9): Error BP5001: This assertion might not hold.
Execution trace:
    While_Valid_1.bpl(21,7): anon0
    While_Valid_1.bpl(23,5): anon3_LoopHead
    While_Valid_1.bpl(26,14): anon3_LoopBody

Boogie program verifier finished with 1 verified, 1 error
===== While_Valid_10.whiley =====
checking: 17:bool:lt (%14, %16)
  looping thru 2 args of 17:bool:lt (%14, %16)
  looping thru 1 args of 14:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
  looping thru 1 args of 16:int:arrlen (%15)
  looping thru 1 args of 15:int[]:read (%8)
  looping thru 1 args of 8:int[]:decl r = 7
  looping thru 2 args of 7:int[]:arrgen (%4, %6)
  looping thru 0 args of 4:int:const 0
  looping thru 1 args of 6:int:arrlen (%5)
  looping thru 1 args of 5:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
assign 1 := 1
checking: 20:int:arridx (%18, %19)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(r)
  looping thru 2 args of 20:int:arridx (%18, %19)
  looping thru 1 args of 18:int[]:read (%8)
  looping thru 1 args of 8:int[]:decl r = 7
  looping thru 2 args of 7:int[]:arrgen (%4, %6)
  looping thru 0 args of 4:int:const 0
  looping thru 1 args of 6:int:arrlen (%5)
  looping thru 1 args of 5:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 1 args of 19:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
checking: 21:int:const 1
  looping thru 0 args of 21:int:const 1
assign 1 := 1
checking: 23:int:read (%3)
  looping thru 1 args of 23:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
checking: 26:int:add (%24, %25)
  looping thru 2 args of 26:int:add (%24, %25)
  looping thru 1 args of 24:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
  looping thru 0 args of 25:int:const 1
checking: 30:int[]:read (%8)
  looping thru 1 args of 30:int[]:read (%8)
  looping thru 1 args of 8:int[]:decl r = 7
  looping thru 2 args of 7:int[]:arrgen (%4, %6)
  looping thru 0 args of 4:int:const 0
  looping thru 1 args of 6:int:arrlen (%5)
  looping thru 1 args of 5:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
checking: 19:bool:eq (%10, %18)
  looping thru 2 args of 19:bool:eq (%10, %18)
  looping thru 1 args of 10:int[]:read (%9)
  looping thru 1 args of 9:int[]:decl rs = 8
  looping thru 1 args of 8:int[]:call While_Valid_10:extract(%7)
  looping thru 7 args of 7:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 4:int:const 5
  looping thru 0 args of 5:int:const 6
  looping thru 0 args of 6:int:const 7
  looping thru 7 args of 18:int[]:arrinit (%11, %12, %13, %14, %15, %16, %17)
  looping thru 0 args of 11:int:const 1
  looping thru 0 args of 12:int:const 1
  looping thru 0 args of 13:int:const 1
  looping thru 0 args of 14:int:const 1
  looping thru 0 args of 15:int:const 1
  looping thru 0 args of 16:int:const 1
  looping thru 0 args of 17:int:const 1
assign 1 := 1
checking: 21:int[]:read (%9)
  looping thru 1 args of 21:int[]:read (%9)
  looping thru 1 args of 9:int[]:decl rs = 8
  looping thru 1 args of 8:int[]:call While_Valid_10:extract(%7)
  looping thru 7 args of 7:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 4:int:const 5
  looping thru 0 args of 5:int:const 6
  looping thru 0 args of 6:int:const 7
checking: 25:int[]:call While_Valid_10:extract(%24)
  looping thru 1 args of 25:int[]:call While_Valid_10:extract(%24)
  looping thru 2 args of 24:int[]:arrgen (%22, %23)
  looping thru 0 args of 22:int:const 0
  looping thru 0 args of 23:int:const 0
checking: 31:bool:eq (%27, %30)
  looping thru 2 args of 31:bool:eq (%27, %30)
  looping thru 1 args of 27:int[]:read (%9)
  looping thru 1 args of 9:int[]:decl rs = 8
  looping thru 1 args of 8:int[]:call While_Valid_10:extract(%7)
  looping thru 7 args of 7:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 4:int:const 5
  looping thru 0 args of 5:int:const 6
  looping thru 0 args of 6:int:const 7
  looping thru 2 args of 30:int[]:arrgen (%28, %29)
  looping thru 0 args of 28:int:const 0
  looping thru 0 args of 29:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_11.whiley =====
checking: 33:bool:lt (%30, %32)
  looping thru 2 args of 33:bool:lt (%30, %32)
  looping thru 1 args of 30:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
  looping thru 1 args of 32:int:arrlen (%31)
  looping thru 1 args of 31:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
checking: 38:bool:lt (%36, %37)
  looping thru 2 args of 38:bool:lt (%36, %37)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(ls)
  looping thru 2 args of 36:int:arridx (%34, %35)
  looping thru 1 args of 34:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 1 args of 35:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
  looping thru 0 args of 37:int:const 0
assign 1 := 1
checking: 41:int:arridx (%39, %40)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(r)
  looping thru 2 args of 41:int:arridx (%39, %40)
  looping thru 1 args of 39:int[]:read (%8)
  looping thru 1 args of 8:int[]:decl r = 7
  looping thru 2 args of 7:int[]:arrgen (%4, %6)
  looping thru 0 args of 4:int:const 0
  looping thru 1 args of 6:int:arrlen (%5)
  looping thru 1 args of 5:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 1 args of 40:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
checking: 45:int:neg (%44)
  looping thru 1 args of 45:int:neg (%44)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(ls)
  looping thru 2 args of 44:int:arridx (%42, %43)
  looping thru 1 args of 42:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 1 args of 43:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
assign 1 := 1
checking: 50:int:arridx (%48, %49)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(r)
  looping thru 2 args of 50:int:arridx (%48, %49)
  looping thru 1 args of 48:int[]:read (%8)
  looping thru 1 args of 8:int[]:decl r = 7
  looping thru 2 args of 7:int[]:arrgen (%4, %6)
  looping thru 0 args of 4:int:const 0
  looping thru 1 args of 6:int:arrlen (%5)
  looping thru 1 args of 5:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 1 args of 49:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
checking: 53:int:arridx (%51, %52)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(ls)
  looping thru 2 args of 53:int:arridx (%51, %52)
  looping thru 1 args of 51:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 1 args of 52:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
assign 1 := 1
checking: 57:int:read (%3)
  looping thru 1 args of 57:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
checking: 60:int:add (%58, %59)
  looping thru 2 args of 60:int:add (%58, %59)
  looping thru 1 args of 58:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
  looping thru 0 args of 59:int:const 1
checking: 64:int[]:read (%8)
  looping thru 1 args of 64:int[]:read (%8)
  looping thru 1 args of 8:int[]:decl r = 7
  looping thru 2 args of 7:int[]:arrgen (%4, %6)
  looping thru 0 args of 4:int:const 0
  looping thru 1 args of 6:int:arrlen (%5)
  looping thru 1 args of 5:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
checking: 36:bool:eq (%21, %35)
  looping thru 2 args of 36:bool:eq (%21, %35)
  looping thru 1 args of 21:While_Valid_11:nat[]:read (%20)
  looping thru 1 args of 20:int[]:decl rs = 19
  looping thru 1 args of 19:While_Valid_11:nat[]:call While_Valid_11:extract(%18)
  looping thru 13 args of 18:int[]:arrinit (%1, %2, %3, %5, %6, %7, %8, %9, %11, %12, %14, %15, %17)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 2
  looping thru 0 args of 3:int:const 3
  looping thru 1 args of 5:int:neg (%4)
  looping thru 0 args of 4:int:const 4
  looping thru 0 args of 6:int:const 5
  looping thru 0 args of 7:int:const 6
  looping thru 0 args of 8:int:const 7
  looping thru 0 args of 9:int:const 23987
  looping thru 1 args of 11:int:neg (%10)
  looping thru 0 args of 10:int:const 23897
  looping thru 0 args of 12:int:const 0
  looping thru 1 args of 14:int:neg (%13)
  looping thru 0 args of 13:int:const 1
  looping thru 0 args of 15:int:const 1
  looping thru 1 args of 17:int:neg (%16)
  looping thru 0 args of 16:int:const 2389
  looping thru 13 args of 35:int[]:arrinit (%22, %23, %24, %25, %26, %27, %28, %29, %30, %31, %32, %33, %34)
  looping thru 0 args of 22:int:const 1
  looping thru 0 args of 23:int:const 2
  looping thru 0 args of 24:int:const 3
  looping thru 0 args of 25:int:const 4
  looping thru 0 args of 26:int:const 5
  looping thru 0 args of 27:int:const 6
  looping thru 0 args of 28:int:const 7
  looping thru 0 args of 29:int:const 23987
  looping thru 0 args of 30:int:const 23897
  looping thru 0 args of 31:int:const 0
  looping thru 0 args of 32:int:const 1
  looping thru 0 args of 33:int:const 1
  looping thru 0 args of 34:int:const 2389
assign 1 := 1
checking: 38:While_Valid_11:nat[]:read (%20)
  looping thru 1 args of 38:While_Valid_11:nat[]:read (%20)
  looping thru 1 args of 20:int[]:decl rs = 19
  looping thru 1 args of 19:While_Valid_11:nat[]:call While_Valid_11:extract(%18)
  looping thru 13 args of 18:int[]:arrinit (%1, %2, %3, %5, %6, %7, %8, %9, %11, %12, %14, %15, %17)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 2
  looping thru 0 args of 3:int:const 3
  looping thru 1 args of 5:int:neg (%4)
  looping thru 0 args of 4:int:const 4
  looping thru 0 args of 6:int:const 5
  looping thru 0 args of 7:int:const 6
  looping thru 0 args of 8:int:const 7
  looping thru 0 args of 9:int:const 23987
  looping thru 1 args of 11:int:neg (%10)
  looping thru 0 args of 10:int:const 23897
  looping thru 0 args of 12:int:const 0
  looping thru 1 args of 14:int:neg (%13)
  looping thru 0 args of 13:int:const 1
  looping thru 0 args of 15:int:const 1
  looping thru 1 args of 17:int:neg (%16)
  looping thru 0 args of 16:int:const 2389
checking: 42:While_Valid_11:nat[]:call While_Valid_11:extract(%41)
  looping thru 1 args of 42:While_Valid_11:nat[]:call While_Valid_11:extract(%41)
  looping thru 2 args of 41:int[]:arrgen (%39, %40)
  looping thru 0 args of 39:int:const 0
  looping thru 0 args of 40:int:const 0
checking: 48:bool:eq (%44, %47)
  looping thru 2 args of 48:bool:eq (%44, %47)
  looping thru 1 args of 44:While_Valid_11:nat[]:read (%20)
  looping thru 1 args of 20:int[]:decl rs = 19
  looping thru 1 args of 19:While_Valid_11:nat[]:call While_Valid_11:extract(%18)
  looping thru 13 args of 18:int[]:arrinit (%1, %2, %3, %5, %6, %7, %8, %9, %11, %12, %14, %15, %17)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 2:int:const 2
  looping thru 0 args of 3:int:const 3
  looping thru 1 args of 5:int:neg (%4)
  looping thru 0 args of 4:int:const 4
  looping thru 0 args of 6:int:const 5
  looping thru 0 args of 7:int:const 6
  looping thru 0 args of 8:int:const 7
  looping thru 0 args of 9:int:const 23987
  looping thru 1 args of 11:int:neg (%10)
  looping thru 0 args of 10:int:const 23897
  looping thru 0 args of 12:int:const 0
  looping thru 1 args of 14:int:neg (%13)
  looping thru 0 args of 13:int:const 1
  looping thru 0 args of 15:int:const 1
  looping thru 1 args of 17:int:neg (%16)
  looping thru 0 args of 16:int:const 2389
  looping thru 2 args of 47:int[]:arrgen (%45, %46)
  looping thru 0 args of 45:int:const 0
  looping thru 0 args of 46:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_11.bpl(43,5): Error BP5003: A postcondition might not hold on this return path.
While_Valid_11.bpl(19,5): Related location: This is the postcondition that might not hold.
Execution trace:
    While_Valid_11.bpl(24,7): anon0
    While_Valid_11.bpl(26,5): anon6_LoopHead
    While_Valid_11.bpl(26,5): anon6_LoopDone

Boogie program verifier finished with 1 verified, 1 error
===== While_Valid_12.whiley =====
MUTATED INPUT v1 : int[]
checking: 29:bool:lt (%26, %28)
  looping thru 2 args of 29:bool:lt (%26, %28)
  looping thru 1 args of 26:int:read (%14)
  looping thru 1 args of 14:int:decl i = 13
  looping thru 0 args of 13:int:const 0
  looping thru 1 args of 28:int:arrlen (%27)
  looping thru 1 args of 27:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl v1
assign 1 := 1
checking: 32:int:arridx (%30, %31)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(v1)
  looping thru 2 args of 32:int:arridx (%30, %31)
  looping thru 1 args of 30:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl v1
  looping thru 1 args of 31:int:read (%14)
  looping thru 1 args of 14:int:decl i = 13
  looping thru 0 args of 13:int:const 0
checking: 39:int:add (%35, %38)
  looping thru 2 args of 39:int:add (%35, %38)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(v1)
  looping thru 2 args of 35:int:arridx (%33, %34)
  looping thru 1 args of 33:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl v1
  looping thru 1 args of 34:int:read (%14)
  looping thru 1 args of 14:int:decl i = 13
  looping thru 0 args of 13:int:const 0
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(v2)
  looping thru 2 args of 38:int:arridx (%36, %37)
  looping thru 1 args of 36:int[]:read (%1)
  looping thru 0 args of 1:int[]:decl v2
  looping thru 1 args of 37:int:read (%14)
  looping thru 1 args of 14:int:decl i = 13
  looping thru 0 args of 13:int:const 0
assign 1 := 1
checking: 41:int:read (%14)
  looping thru 1 args of 41:int:read (%14)
  looping thru 1 args of 14:int:decl i = 13
  looping thru 0 args of 13:int:const 0
checking: 44:int:add (%42, %43)
  looping thru 2 args of 44:int:add (%42, %43)
  looping thru 1 args of 42:int:read (%14)
  looping thru 1 args of 14:int:decl i = 13
  looping thru 0 args of 13:int:const 0
  looping thru 0 args of 43:int:const 1
checking: 48:int[]:read (%0)
  looping thru 1 args of 48:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl v1
checking: 13:bool:eq (%8, %12)
  looping thru 2 args of 13:bool:eq (%8, %12)
  looping thru 2 args of 8:int[]:call While_Valid_12:add(%3, %7)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 3 args of 7:int[]:arrinit (%4, %5, %6)
  looping thru 0 args of 4:int:const 4
  looping thru 0 args of 5:int:const 5
  looping thru 0 args of 6:int:const 6
  looping thru 3 args of 12:int[]:arrinit (%9, %10, %11)
  looping thru 0 args of 9:int:const 5
  looping thru 0 args of 10:int:const 7
  looping thru 0 args of 11:int:const 9
checking: 22:bool:eq (%19, %21)
  looping thru 2 args of 22:bool:eq (%19, %21)
  looping thru 2 args of 19:int[]:call While_Valid_12:add(%16, %18)
  looping thru 1 args of 16:int[]:arrinit (%15)
  looping thru 0 args of 15:int:const 1
  looping thru 1 args of 18:int[]:arrinit (%17)
  looping thru 0 args of 17:int:const 4
  looping thru 1 args of 21:int[]:arrinit (%20)
  looping thru 0 args of 20:int:const 5
checking: 34:bool:eq (%30, %33)
  looping thru 2 args of 34:bool:eq (%30, %33)
  looping thru 2 args of 30:int[]:call While_Valid_12:add(%26, %29)
  looping thru 2 args of 26:int[]:arrgen (%24, %25)
  looping thru 0 args of 24:int:const 0
  looping thru 0 args of 25:int:const 0
  looping thru 2 args of 29:int[]:arrgen (%27, %28)
  looping thru 0 args of 27:int:const 0
  looping thru 0 args of 28:int:const 0
  looping thru 2 args of 33:int[]:arrgen (%31, %32)
  looping thru 0 args of 31:int:const 0
  looping thru 0 args of 32:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_14.whiley =====
checking: 12:bool:lt (%9, %11)
  looping thru 2 args of 12:bool:lt (%9, %11)
  looping thru 1 args of 9:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
  looping thru 1 args of 11:int:arrlen (%10)
  looping thru 1 args of 10:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
assign 1 := 1
checking: 13:int:read (%7)
  looping thru 1 args of 13:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
checking: 16:int:add (%14, %15)
  looping thru 2 args of 16:int:add (%14, %15)
  looping thru 1 args of 14:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 15:int:const 1
checking: 20:int:read (%7)
  looping thru 1 args of 20:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
checking: 17:bool:eq (%15, %16)
  looping thru 2 args of 17:bool:eq (%15, %16)
  looping thru 1 args of 15:int:read (%14)
  looping thru 1 args of 14:int:decl rs = 13
  looping thru 1 args of 13:int:call While_Valid_14:extract(%12)
  looping thru 9 args of 12:int[]:arrinit (%1, %3, %4, %5, %7, %8, %9, %10, %11)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 2
  looping thru 1 args of 3:int:neg (%2)
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 2
  looping thru 1 args of 7:int:neg (%6)
  looping thru 0 args of 6:int:const 23
  looping thru 0 args of 8:int:const 3
  looping thru 0 args of 9:int:const 2345
  looping thru 0 args of 10:int:const 4
  looping thru 0 args of 11:int:const 5
  looping thru 0 args of 16:int:const 9
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_15.whiley =====
MUTATED INPUT list : While_Valid_15:LinkedList
checking: 8:bool:istype (%6, %7)
  looping thru 2 args of 8:bool:istype (%6, %7)
  looping thru 1 args of 6:int|X<{int|X next}>|While_Valid_15:LinkedList:read (%0)
  looping thru 0 args of 0:While_Valid_15:LinkedList:decl list
  looping thru 0 args of 7:type:const While_Valid_15:Link
assign 1 := 1
checking: 9:X<{X|int next}>:read (%0)
  looping thru 1 args of 9:X<{X|int next}>:read (%0)
  looping thru 0 args of 0:While_Valid_15:LinkedList:decl list
checking: 11:X<int|{X next}>:recfield %10 next
  looping thru 1 args of 11:X<int|{X next}>:recfield %10 next
  looping thru 1 args of 10:X<{X|int next}>:read (%0)
  looping thru 0 args of 0:While_Valid_15:LinkedList:decl list
assign 1 := 1
checking: 13:int:read (%3)
  looping thru 1 args of 13:int:read (%3)
  looping thru 1 args of 3:int:decl distance = 2
  looping thru 0 args of 2:int:const 0
checking: 16:int:add (%14, %15)
  looping thru 2 args of 16:int:add (%14, %15)
  looping thru 1 args of 14:int:read (%3)
  looping thru 1 args of 3:int:decl distance = 2
  looping thru 0 args of 2:int:const 0
  looping thru 0 args of 15:int:const 1
checking: 22:int:add (%20, %21)
  looping thru 2 args of 22:int:add (%20, %21)
  looping thru 1 args of 20:int|X<{int|X next}>|While_Valid_15:LinkedList:read (%0)
  looping thru 0 args of 0:While_Valid_15:LinkedList:decl list
  looping thru 1 args of 21:int:read (%3)
  looping thru 1 args of 3:int:decl distance = 2
  looping thru 0 args of 2:int:const 0
assign 1 := 1
checking: 2:int:read (%1)
  looping thru 1 args of 2:int:read (%1)
  looping thru 1 args of 1:While_Valid_15:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
checking: 4:{int next}:recinit (%3)
  looping thru 1 args of 4:{int next}:recinit (%3)
  looping thru 1 args of 3:int:read (%1)
  looping thru 1 args of 1:While_Valid_15:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
assign 1 := 1
checking: 6:{int next}:read (%1)
  looping thru 1 args of 6:{int next}:read (%1)
  looping thru 1 args of 1:While_Valid_15:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
checking: 8:{{int next} next}:recinit (%7)
  looping thru 1 args of 8:{{int next} next}:recinit (%7)
  looping thru 1 args of 7:{int next}:read (%1)
  looping thru 1 args of 1:While_Valid_15:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:While_Valid_15:Leaf:call While_Valid_15:dist(%10)
  looping thru 1 args of 10:{{int next} next}:read (%1)
  looping thru 1 args of 1:While_Valid_15:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
  looping thru 0 args of 12:int:const 125
assign 1 := 1
checking: 15:{{int next} next}:read (%1)
  looping thru 1 args of 15:{{int next} next}:read (%1)
  looping thru 1 args of 1:While_Valid_15:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
checking: 17:{{{int next} next} next}:recinit (%16)
  looping thru 1 args of 17:{{{int next} next} next}:recinit (%16)
  looping thru 1 args of 16:{{int next} next}:read (%1)
  looping thru 1 args of 1:While_Valid_15:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
assign 1 := 1
checking: 19:{{{int next} next} next}:read (%1)
  looping thru 1 args of 19:{{{int next} next} next}:read (%1)
  looping thru 1 args of 1:While_Valid_15:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
checking: 21:{{{{int next} next} next} next}:recinit (%20)
  looping thru 1 args of 21:{{{{int next} next} next} next}:recinit (%20)
  looping thru 1 args of 20:{{{int next} next} next}:read (%1)
  looping thru 1 args of 1:While_Valid_15:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
checking: 26:bool:eq (%24, %25)
  looping thru 2 args of 26:bool:eq (%24, %25)
  looping thru 1 args of 24:While_Valid_15:Leaf:call While_Valid_15:dist(%23)
  looping thru 1 args of 23:{{{{int next} next} next} next}:read (%1)
  looping thru 1 args of 1:While_Valid_15:LinkedList:decl list = 0
  looping thru 0 args of 0:int:const 123
  looping thru 0 args of 25:int:const 127
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_16.whiley =====
MUTATED INPUT src : While_Valid_16:nat[]
checking: 41:bool:lt (%38, %40)
  looping thru 2 args of 41:bool:lt (%38, %40)
  looping thru 1 args of 38:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
  looping thru 1 args of 40:int:arrlen (%39)
  looping thru 1 args of 39:int|While_Valid_16:nat[]:read (%0)
  looping thru 0 args of 0:While_Valid_16:nat[]:decl src
assign 1 := 1
checking: 44:int|While_Valid_16:nat:arridx (%42, %43)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(src)
  looping thru 2 args of 44:int|While_Valid_16:nat:arridx (%42, %43)
  looping thru 1 args of 42:int|While_Valid_16:nat[]:read (%0)
  looping thru 0 args of 0:While_Valid_16:nat[]:decl src
  looping thru 1 args of 43:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
checking: 49:int:add (%47, %48)
  looping thru 2 args of 49:int:add (%47, %48)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(src)
  looping thru 2 args of 47:int|While_Valid_16:nat:arridx (%45, %46)
  looping thru 1 args of 45:int|While_Valid_16:nat[]:read (%0)
  looping thru 0 args of 0:While_Valid_16:nat[]:decl src
  looping thru 1 args of 46:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
  looping thru 0 args of 48:int:const 1
assign 1 := 1
checking: 51:int:read (%18)
  looping thru 1 args of 51:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
checking: 54:int:add (%52, %53)
  looping thru 2 args of 54:int:add (%52, %53)
  looping thru 1 args of 52:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
  looping thru 0 args of 53:int:const 1
checking: 58:int|While_Valid_16:nat[]:read (%0)
  looping thru 1 args of 58:int|While_Valid_16:nat[]:read (%0)
  looping thru 0 args of 0:While_Valid_16:nat[]:decl src
assign 1 := 1
checking: 8:int[]:read (%7)
  looping thru 1 args of 8:int[]:read (%7)
  looping thru 1 args of 7:While_Valid_16:nat[]:decl xs = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 3
  looping thru 0 args of 2:int:const 5
  looping thru 0 args of 3:int:const 7
  looping thru 0 args of 4:int:const 9
  looping thru 0 args of 5:int:const 11
checking: 10:While_Valid_16:nat[]:call While_Valid_16:inc(%9)
  looping thru 1 args of 10:While_Valid_16:nat[]:call While_Valid_16:inc(%9)
  looping thru 1 args of 9:int[]:read (%7)
  looping thru 1 args of 7:While_Valid_16:nat[]:decl xs = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 3
  looping thru 0 args of 2:int:const 5
  looping thru 0 args of 3:int:const 7
  looping thru 0 args of 4:int:const 9
  looping thru 0 args of 5:int:const 11
checking: 20:bool:eq (%12, %19)
  looping thru 2 args of 20:bool:eq (%12, %19)
  looping thru 1 args of 12:While_Valid_16:nat[]:read (%7)
  looping thru 1 args of 7:While_Valid_16:nat[]:decl xs = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 3
  looping thru 0 args of 2:int:const 5
  looping thru 0 args of 3:int:const 7
  looping thru 0 args of 4:int:const 9
  looping thru 0 args of 5:int:const 11
  looping thru 6 args of 19:int[]:arrinit (%13, %14, %15, %16, %17, %18)
  looping thru 0 args of 13:int:const 2
  looping thru 0 args of 14:int:const 4
  looping thru 0 args of 15:int:const 6
  looping thru 0 args of 16:int:const 8
  looping thru 0 args of 17:int:const 10
  looping thru 0 args of 18:int:const 12
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_16.bpl(39,5): Error BP5003: A postcondition might not hold on this return path.
While_Valid_16.bpl(21,5): Related location: This is the postcondition that might not hold.
Execution trace:
    While_Valid_16.bpl(27,9): anon0
    While_Valid_16.bpl(29,5): anon3_LoopHead
    While_Valid_16.bpl(29,5): anon3_LoopDone

Boogie program verifier finished with 1 verified, 1 error
===== While_Valid_17.whiley =====
checking: 5:bool:lt (%3, %4)
  looping thru 2 args of 5:bool:lt (%3, %4)
  looping thru 1 args of 3:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 4:int:const 5
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 7:int:const 3
assign 1 := 1
checking: 12:int:read (%1)
  looping thru 1 args of 12:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
checking: 15:int:add (%13, %14)
  looping thru 2 args of 15:int:add (%13, %14)
  looping thru 1 args of 13:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 14:int:const 1
checking: 21:bool:eq (%19, %20)
  looping thru 2 args of 21:bool:eq (%19, %20)
  looping thru 1 args of 19:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 20:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== While_Valid_18.whiley =====
MUTATED INPUT offset : While_Valid_18:nat
checking: 33:bool:land (%20, %32)
  looping thru 2 args of 20:bool:lt (%18, %19)
  looping thru 1 args of 18:int|While_Valid_18:nat:read (%1)
  looping thru 0 args of 1:While_Valid_18:nat:decl offset
  looping thru 1 args of 19:int|While_Valid_18:nat:read (%5)
  looping thru 1 args of 5:While_Valid_18:nat:decl pos = 4
  looping thru 1 args of 4:While_Valid_18:nat:read (%2)
  looping thru 0 args of 2:While_Valid_18:nat:decl end
  looping thru 2 args of 24:bool:lt (%21, %23)
  looping thru 1 args of 21:int|While_Valid_18:nat:read (%5)
  looping thru 1 args of 5:While_Valid_18:nat:decl pos = 4
  looping thru 1 args of 4:While_Valid_18:nat:read (%2)
  looping thru 0 args of 2:While_Valid_18:nat:decl end
  looping thru 1 args of 23:int:arrlen (%22)
  looping thru 1 args of 22:byte[]:read (%0)
  looping thru 0 args of 0:byte[]:decl data
  looping thru 2 args of 31:bool:eq (%27, %30)
conjecture: 0 <= toInt(offset) && toInt(offset) < arraylen(data)
  looping thru 2 args of 27:byte:arridx (%25, %26)
  looping thru 1 args of 25:byte[]:read (%0)
  looping thru 0 args of 0:byte[]:decl data
  looping thru 1 args of 26:int|While_Valid_18:nat:read (%1)
  looping thru 0 args of 1:While_Valid_18:nat:decl offset
conjecture: 0 <= toInt(pos) && toInt(pos) < arraylen(data)
  looping thru 2 args of 30:byte:arridx (%28, %29)
  looping thru 1 args of 28:byte[]:read (%0)
  looping thru 0 args of 0:byte[]:decl data
  looping thru 1 args of 29:int|While_Valid_18:nat:read (%5)
  looping thru 1 args of 5:While_Valid_18:nat:decl pos = 4
  looping thru 1 args of 4:While_Valid_18:nat:read (%2)
  looping thru 0 args of 2:While_Valid_18:nat:decl end
assign 1 := 1
checking: 34:int|While_Valid_18:nat:read (%1)
  looping thru 1 args of 34:int|While_Valid_18:nat:read (%1)
  looping thru 0 args of 1:While_Valid_18:nat:decl offset
checking: 37:int:add (%35, %36)
  looping thru 2 args of 37:int:add (%35, %36)
  looping thru 1 args of 35:int|While_Valid_18:nat:read (%1)
  looping thru 0 args of 1:While_Valid_18:nat:decl offset
  looping thru 0 args of 36:int:const 1
assign 1 := 1
checking: 39:int|While_Valid_18:nat:read (%5)
  looping thru 1 args of 39:int|While_Valid_18:nat:read (%5)
  looping thru 1 args of 5:While_Valid_18:nat:decl pos = 4
  looping thru 1 args of 4:While_Valid_18:nat:read (%2)
  looping thru 0 args of 2:While_Valid_18:nat:decl end
checking: 42:int:add (%40, %41)
  looping thru 2 args of 42:int:add (%40, %41)
  looping thru 1 args of 40:int|While_Valid_18:nat:read (%5)
  looping thru 1 args of 5:While_Valid_18:nat:decl pos = 4
  looping thru 1 args of 4:While_Valid_18:nat:read (%2)
  looping thru 0 args of 2:While_Valid_18:nat:decl end
  looping thru 0 args of 41:int:const 1
assign 1 := 1
checking: 44:int:read (%7)
  looping thru 1 args of 44:int:read (%7)
  looping thru 1 args of 7:int:decl len = 6
  looping thru 0 args of 6:int:const 0
checking: 47:int:add (%45, %46)
  looping thru 2 args of 47:int:add (%45, %46)
  looping thru 1 args of 45:int:read (%7)
  looping thru 1 args of 7:int:decl len = 6
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 46:int:const 1
checking: 51:int:read (%7)
  looping thru 1 args of 51:int:read (%7)
  looping thru 1 args of 7:int:decl len = 6
  looping thru 0 args of 6:int:const 0
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 1 args of 16:int:read (%15)
  looping thru 1 args of 15:int:decl x = 14
  looping thru 3 args of 14:int:call While_Valid_18:match(%8, %9, %13)
  looping thru 1 args of 8:byte[]:read (%7)
  looping thru 1 args of 7:byte[]:decl xs = 6
  looping thru 6 args of 6:byte[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:byte:const 00000000b
  looping thru 0 args of 1:byte:const 00000101b
  looping thru 0 args of 2:byte:const 00000000b
  looping thru 0 args of 3:byte:const 00000110b
  looping thru 0 args of 4:byte:const 00000000b
  looping thru 0 args of 5:byte:const 00000101b
  looping thru 0 args of 9:int:const 0
  looping thru 2 args of 13:int:sub (%11, %12)
  looping thru 1 args of 11:int:arrlen (%10)
  looping thru 1 args of 10:byte[]:read (%7)
  looping thru 1 args of 7:byte[]:decl xs = 6
  looping thru 6 args of 6:byte[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:byte:const 00000000b
  looping thru 0 args of 1:byte:const 00000101b
  looping thru 0 args of 2:byte:const 00000000b
  looping thru 0 args of 3:byte:const 00000110b
  looping thru 0 args of 4:byte:const 00000000b
  looping thru 0 args of 5:byte:const 00000101b
  looping thru 0 args of 12:int:const 2
  looping thru 0 args of 17:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_19.whiley =====
checking: 16:bool:lt (%13, %15)
  looping thru 2 args of 16:bool:lt (%13, %15)
  looping thru 1 args of 13:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
  looping thru 1 args of 15:int:arrlen (%14)
  looping thru 1 args of 14:int[][]:read (%5)
  looping thru 1 args of 5:int[][]:decl components = 4
  looping thru 2 args of 4:int[][]:arrgen (%2, %3)
  looping thru 2 args of 2:int[]:arrgen (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 3:int:const 5
assign 1 := 1
checking: 19:int[]:arridx (%17, %18)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(components)
  looping thru 2 args of 19:int[]:arridx (%17, %18)
  looping thru 1 args of 17:int[][]:read (%5)
  looping thru 1 args of 5:int[][]:decl components = 4
  looping thru 2 args of 4:int[][]:arrgen (%2, %3)
  looping thru 2 args of 2:int[]:arrgen (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 3:int:const 5
  looping thru 1 args of 18:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
checking: 21:int[]:arrinit (%20)
  looping thru 1 args of 21:int[]:arrinit (%20)
  looping thru 0 args of 20:int:const 0
assign 1 := 1
checking: 23:int:read (%7)
  looping thru 1 args of 23:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
checking: 26:int:add (%24, %25)
  looping thru 2 args of 26:int:add (%24, %25)
  looping thru 1 args of 24:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 25:int:const 1
checking: 42:bool:eq (%30, %41)
  looping thru 2 args of 42:bool:eq (%30, %41)
  looping thru 1 args of 30:int[][]:read (%5)
  looping thru 1 args of 5:int[][]:decl components = 4
  looping thru 2 args of 4:int[][]:arrgen (%2, %3)
  looping thru 2 args of 2:int[]:arrgen (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 3:int:const 5
  looping thru 5 args of 41:int[][]:arrinit (%32, %34, %36, %38, %40)
  looping thru 1 args of 32:int[]:arrinit (%31)
  looping thru 0 args of 31:int:const 0
  looping thru 1 args of 34:int[]:arrinit (%33)
  looping thru 0 args of 33:int:const 0
  looping thru 1 args of 36:int[]:arrinit (%35)
  looping thru 0 args of 35:int:const 0
  looping thru 1 args of 38:int[]:arrinit (%37)
  looping thru 0 args of 37:int:const 0
  looping thru 1 args of 40:int[]:arrinit (%39)
  looping thru 0 args of 39:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== While_Valid_2.whiley =====
checking: 86:bool:lt (%84, %85)
  looping thru 2 args of 86:bool:lt (%84, %85)
  looping thru 1 args of 84:int:read (%47)
  looping thru 1 args of 47:int:decl lo = 46
  looping thru 0 args of 46:int:const 0
  looping thru 1 args of 85:int:read (%50)
  looping thru 1 args of 50:int:decl hi = 49
  looping thru 1 args of 49:int:arrlen (%48)
  looping thru 1 args of 48:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
checking: 97:bool:lt (%95, %96)
  looping thru 2 args of 97:bool:lt (%95, %96)
conjecture: 0 <= toInt(mid) && toInt(mid) < arraylen(items)
  looping thru 2 args of 95:int:arridx (%93, %94)
  looping thru 1 args of 93:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 1 args of 94:int:read (%92)
  looping thru 1 args of 92:int:decl mid = 91
  looping thru 2 args of 91:int:div (%89, %90)
  looping thru 2 args of 89:int:add (%87, %88)
  looping thru 1 args of 87:int:read (%47)
  looping thru 1 args of 47:int:decl lo = 46
  looping thru 0 args of 46:int:const 0
  looping thru 1 args of 88:int:read (%50)
  looping thru 1 args of 50:int:decl hi = 49
  looping thru 1 args of 49:int:arrlen (%48)
  looping thru 1 args of 48:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 0 args of 90:int:const 2
  looping thru 1 args of 96:int:read (%1)
  looping thru 0 args of 1:int:decl item
assign 1 := 1
checking: 98:int:read (%47)
  looping thru 1 args of 98:int:read (%47)
  looping thru 1 args of 47:int:decl lo = 46
  looping thru 0 args of 46:int:const 0
checking: 101:int:add (%99, %100)
  looping thru 2 args of 101:int:add (%99, %100)
  looping thru 1 args of 99:int:read (%92)
  looping thru 1 args of 92:int:decl mid = 91
  looping thru 2 args of 91:int:div (%89, %90)
  looping thru 2 args of 89:int:add (%87, %88)
  looping thru 1 args of 87:int:read (%47)
  looping thru 1 args of 47:int:decl lo = 46
  looping thru 0 args of 46:int:const 0
  looping thru 1 args of 88:int:read (%50)
  looping thru 1 args of 50:int:decl hi = 49
  looping thru 1 args of 49:int:arrlen (%48)
  looping thru 1 args of 48:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 0 args of 90:int:const 2
  looping thru 0 args of 100:int:const 1
checking: 108:bool:gt (%106, %107)
  looping thru 2 args of 108:bool:gt (%106, %107)
conjecture: 0 <= toInt(mid) && toInt(mid) < arraylen(items)
  looping thru 2 args of 106:int:arridx (%104, %105)
  looping thru 1 args of 104:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 1 args of 105:int:read (%92)
  looping thru 1 args of 92:int:decl mid = 91
  looping thru 2 args of 91:int:div (%89, %90)
  looping thru 2 args of 89:int:add (%87, %88)
  looping thru 1 args of 87:int:read (%47)
  looping thru 1 args of 47:int:decl lo = 46
  looping thru 0 args of 46:int:const 0
  looping thru 1 args of 88:int:read (%50)
  looping thru 1 args of 50:int:decl hi = 49
  looping thru 1 args of 49:int:arrlen (%48)
  looping thru 1 args of 48:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 0 args of 90:int:const 2
  looping thru 1 args of 107:int:read (%1)
  looping thru 0 args of 1:int:decl item
assign 1 := 1
checking: 109:int:read (%50)
  looping thru 1 args of 109:int:read (%50)
  looping thru 1 args of 50:int:decl hi = 49
  looping thru 1 args of 49:int:arrlen (%48)
  looping thru 1 args of 48:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
checking: 110:int:read (%92)
  looping thru 1 args of 110:int:read (%92)
  looping thru 1 args of 92:int:decl mid = 91
  looping thru 2 args of 91:int:div (%89, %90)
  looping thru 2 args of 89:int:add (%87, %88)
  looping thru 1 args of 87:int:read (%47)
  looping thru 1 args of 47:int:decl lo = 46
  looping thru 0 args of 46:int:const 0
  looping thru 1 args of 88:int:read (%50)
  looping thru 1 args of 50:int:decl hi = 49
  looping thru 1 args of 49:int:arrlen (%48)
  looping thru 1 args of 48:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 0 args of 90:int:const 2
checking: 113:bool:const true
  looping thru 0 args of 113:bool:const true
checking: 121:bool:const false
  looping thru 0 args of 121:bool:const false
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 2 args of 8:bool:call While_Valid_2:binarySearch(%6, %7)
  looping thru 1 args of 6:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 9:bool:const false
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 2 args of 14:bool:call While_Valid_2:binarySearch(%12, %13)
  looping thru 1 args of 12:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 13:int:const 1
  looping thru 0 args of 15:bool:const false
checking: 22:bool:eq (%20, %21)
  looping thru 2 args of 22:bool:eq (%20, %21)
  looping thru 2 args of 20:bool:call While_Valid_2:binarySearch(%18, %19)
  looping thru 1 args of 18:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 19:int:const 2
  looping thru 0 args of 21:bool:const false
checking: 28:bool:eq (%26, %27)
  looping thru 2 args of 28:bool:eq (%26, %27)
  looping thru 2 args of 26:bool:call While_Valid_2:binarySearch(%24, %25)
  looping thru 1 args of 24:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 25:int:const 3
  looping thru 0 args of 27:bool:const true
checking: 34:bool:eq (%32, %33)
  looping thru 2 args of 34:bool:eq (%32, %33)
  looping thru 2 args of 32:bool:call While_Valid_2:binarySearch(%30, %31)
  looping thru 1 args of 30:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 31:int:const 4
  looping thru 0 args of 33:bool:const false
checking: 40:bool:eq (%38, %39)
  looping thru 2 args of 40:bool:eq (%38, %39)
  looping thru 2 args of 38:bool:call While_Valid_2:binarySearch(%36, %37)
  looping thru 1 args of 36:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 37:int:const 5
  looping thru 0 args of 39:bool:const true
checking: 46:bool:eq (%44, %45)
  looping thru 2 args of 46:bool:eq (%44, %45)
  looping thru 2 args of 44:bool:call While_Valid_2:binarySearch(%42, %43)
  looping thru 1 args of 42:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 43:int:const 6
  looping thru 0 args of 45:bool:const true
checking: 52:bool:eq (%50, %51)
  looping thru 2 args of 52:bool:eq (%50, %51)
  looping thru 2 args of 50:bool:call While_Valid_2:binarySearch(%48, %49)
  looping thru 1 args of 48:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 49:int:const 7
  looping thru 0 args of 51:bool:const false
checking: 58:bool:eq (%56, %57)
  looping thru 2 args of 58:bool:eq (%56, %57)
  looping thru 2 args of 56:bool:call While_Valid_2:binarySearch(%54, %55)
  looping thru 1 args of 54:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 55:int:const 8
  looping thru 0 args of 57:bool:const false
checking: 64:bool:eq (%62, %63)
  looping thru 2 args of 64:bool:eq (%62, %63)
  looping thru 2 args of 62:bool:call While_Valid_2:binarySearch(%60, %61)
  looping thru 1 args of 60:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 61:int:const 9
  looping thru 0 args of 63:bool:const true
checking: 70:bool:eq (%68, %69)
  looping thru 2 args of 70:bool:eq (%68, %69)
  looping thru 2 args of 68:bool:call While_Valid_2:binarySearch(%66, %67)
  looping thru 1 args of 66:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 67:int:const 10
  looping thru 0 args of 69:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_2.bpl(29,9): Error BP5005: This loop invariant might not be maintained by the loop.
Execution trace:
    While_Valid_2.bpl(25,8): anon0
    While_Valid_2.bpl(27,5): anon7_LoopHead
    While_Valid_2.bpl(32,13): anon7_LoopBody
    While_Valid_2.bpl(35,16): anon8_Then
While_Valid_2.bpl(30,9): Error BP5005: This loop invariant might not be maintained by the loop.
Execution trace:
    While_Valid_2.bpl(25,8): anon0
    While_Valid_2.bpl(27,5): anon7_LoopHead
    While_Valid_2.bpl(32,13): anon7_LoopBody
    While_Valid_2.bpl(37,13): anon8_Else
    While_Valid_2.bpl(39,20): anon9_Then

Boogie program verifier finished with 1 verified, 2 errors
===== While_Valid_20.whiley =====
MUTATED INPUT l : While_Valid_20:LinkedList
checking: 9:bool:not (%8)
  looping thru 1 args of 9:bool:not (%8)
  looping thru 2 args of 8:bool:istype (%6, %7)
  looping thru 1 args of 6:null|X<{int data,null|X next}>|While_Valid_20:LinkedList:read (%0)
  looping thru 0 args of 0:While_Valid_20:LinkedList:decl l
  looping thru 0 args of 7:type:const null
assign 1 := 1
checking: 10:int:read (%3)
  looping thru 1 args of 10:int:read (%3)
  looping thru 1 args of 3:int:decl r = 2
  looping thru 0 args of 2:int:const 0
checking: 14:int:add (%11, %13)
  looping thru 2 args of 14:int:add (%11, %13)
  looping thru 1 args of 11:int:read (%3)
  looping thru 1 args of 3:int:decl r = 2
  looping thru 0 args of 2:int:const 0
  looping thru 1 args of 13:int:recfield %12 data
  looping thru 1 args of 12:X<{int data,X|null next}>|While_Valid_20:LinkedList:read (%0)
  looping thru 0 args of 0:While_Valid_20:LinkedList:decl l
assign 1 := 1
checking: 16:X<{int data,X|null next}>|While_Valid_20:LinkedList:read (%0)
  looping thru 1 args of 16:X<{int data,X|null next}>|While_Valid_20:LinkedList:read (%0)
  looping thru 0 args of 0:While_Valid_20:LinkedList:decl l
checking: 18:X<null|{int data,X next}>:recfield %17 next
  looping thru 1 args of 18:X<null|{int data,X next}>:recfield %17 next
  looping thru 1 args of 17:X<{int data,X|null next}>|While_Valid_20:LinkedList:read (%0)
  looping thru 0 args of 0:While_Valid_20:LinkedList:decl l
checking: 22:int:read (%3)
  looping thru 1 args of 22:int:read (%3)
  looping thru 1 args of 3:int:decl r = 2
  looping thru 0 args of 2:int:const 0
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:call While_Valid_20:sum(%2)
  looping thru 1 args of 2:null:read (%1)
  looping thru 1 args of 1:While_Valid_20:LinkedList:decl list = 0
  looping thru 0 args of 0:null:const null
  looping thru 0 args of 4:int:const 0
assign 1 := 1
checking: 7:null:read (%1)
  looping thru 1 args of 7:null:read (%1)
  looping thru 1 args of 1:While_Valid_20:LinkedList:decl list = 0
  looping thru 0 args of 0:null:const null
checking: 10:{int data,null next}:recinit (%8, %9)
  looping thru 2 args of 10:{int data,null next}:recinit (%8, %9)
  looping thru 0 args of 8:int:const 1
  looping thru 1 args of 9:null:read (%1)
  looping thru 1 args of 1:While_Valid_20:LinkedList:decl list = 0
  looping thru 0 args of 0:null:const null
checking: 15:bool:eq (%13, %14)
  looping thru 2 args of 15:bool:eq (%13, %14)
  looping thru 1 args of 13:int:call While_Valid_20:sum(%12)
  looping thru 1 args of 12:{int data,null next}:read (%1)
  looping thru 1 args of 1:While_Valid_20:LinkedList:decl list = 0
  looping thru 0 args of 0:null:const null
  looping thru 0 args of 14:int:const 1
assign 1 := 1
checking: 17:{int data,null next}:read (%1)
  looping thru 1 args of 17:{int data,null next}:read (%1)
  looping thru 1 args of 1:While_Valid_20:LinkedList:decl list = 0
  looping thru 0 args of 0:null:const null
checking: 20:{int data,{int data,null next} next}:recinit (%18, %19)
  looping thru 2 args of 20:{int data,{int data,null next} next}:recinit (%18, %19)
  looping thru 0 args of 18:int:const 2324
  looping thru 1 args of 19:{int data,null next}:read (%1)
  looping thru 1 args of 1:While_Valid_20:LinkedList:decl list = 0
  looping thru 0 args of 0:null:const null
checking: 25:bool:eq (%23, %24)
  looping thru 2 args of 25:bool:eq (%23, %24)
  looping thru 1 args of 23:int:call While_Valid_20:sum(%22)
  looping thru 1 args of 22:{int data,{int data,null next} next}:read (%1)
  looping thru 1 args of 1:While_Valid_20:LinkedList:decl list = 0
  looping thru 0 args of 0:null:const null
  looping thru 0 args of 24:int:const 2325
assign 1 := 1
checking: 27:{int data,{int data,null next} next}:read (%1)
  looping thru 1 args of 27:{int data,{int data,null next} next}:read (%1)
  looping thru 1 args of 1:While_Valid_20:LinkedList:decl list = 0
  looping thru 0 args of 0:null:const null
checking: 30:{int data,{int data,{int data,null next} next} next}:recinit (%28, %29)
  looping thru 2 args of 30:{int data,{int data,{int data,null next} next} next}:recinit (%28, %29)
  looping thru 0 args of 28:int:const 2
  looping thru 1 args of 29:{int data,{int data,null next} next}:read (%1)
  looping thru 1 args of 1:While_Valid_20:LinkedList:decl list = 0
  looping thru 0 args of 0:null:const null
checking: 35:bool:eq (%33, %34)
  looping thru 2 args of 35:bool:eq (%33, %34)
  looping thru 1 args of 33:int:call While_Valid_20:sum(%32)
  looping thru 1 args of 32:{int data,{int data,{int data,null next} next} next}:read (%1)
  looping thru 1 args of 1:While_Valid_20:LinkedList:decl list = 0
  looping thru 0 args of 0:null:const null
  looping thru 0 args of 34:int:const 2327
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_21.whiley =====
checking: 29:bool:lt (%27, %28)
  looping thru 2 args of 29:bool:lt (%27, %28)
  looping thru 1 args of 27:int:read (%12)
  looping thru 1 args of 12:int:decl i = 11
  looping thru 0 args of 11:int:const 0
  looping thru 1 args of 28:While_Valid_21:nat:read (%0)
  looping thru 0 args of 0:While_Valid_21:nat:decl count
assign 1 := 1
checking: 32:int:arridx (%30, %31)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(r)
  looping thru 2 args of 32:int:arridx (%30, %31)
  looping thru 1 args of 30:int[]:read (%10)
  looping thru 1 args of 10:int[]:decl r = 9
  looping thru 2 args of 9:int[]:arrgen (%7, %8)
  looping thru 0 args of 7:int:const 0
  looping thru 1 args of 8:While_Valid_21:nat:read (%0)
  looping thru 0 args of 0:While_Valid_21:nat:decl count
  looping thru 1 args of 31:int:read (%12)
  looping thru 1 args of 12:int:decl i = 11
  looping thru 0 args of 11:int:const 0
checking: 33:int:read (%1)
  looping thru 1 args of 33:int:read (%1)
  looping thru 0 args of 1:int:decl value
assign 1 := 1
checking: 35:int:read (%12)
  looping thru 1 args of 35:int:read (%12)
  looping thru 1 args of 12:int:decl i = 11
  looping thru 0 args of 11:int:const 0
checking: 38:int:add (%36, %37)
  looping thru 2 args of 38:int:add (%36, %37)
  looping thru 1 args of 36:int:read (%12)
  looping thru 1 args of 12:int:decl i = 11
  looping thru 0 args of 11:int:const 0
  looping thru 0 args of 37:int:const 1
checking: 42:int[]:read (%10)
  looping thru 1 args of 42:int[]:read (%10)
  looping thru 1 args of 10:int[]:decl r = 9
  looping thru 2 args of 9:int[]:arrgen (%7, %8)
  looping thru 0 args of 7:int:const 0
  looping thru 1 args of 8:While_Valid_21:nat:read (%0)
  looping thru 0 args of 0:While_Valid_21:nat:decl count
checking: 7:bool:eq (%2, %6)
  looping thru 2 args of 7:bool:eq (%2, %6)
  looping thru 2 args of 2:int[]:call While_Valid_21:create(%0, %1)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 3
  looping thru 3 args of 6:int[]:arrinit (%3, %4, %5)
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:const 3
  looping thru 0 args of 5:int:const 3
checking: 15:bool:eq (%11, %14)
  looping thru 2 args of 15:bool:eq (%11, %14)
  looping thru 2 args of 11:int[]:call While_Valid_21:create(%9, %10)
  looping thru 0 args of 9:int:const 2
  looping thru 0 args of 10:int:const 2
  looping thru 2 args of 14:int[]:arrinit (%12, %13)
  looping thru 0 args of 12:int:const 2
  looping thru 0 args of 13:int:const 2
checking: 23:bool:eq (%19, %22)
  looping thru 2 args of 23:bool:eq (%19, %22)
  looping thru 2 args of 19:int[]:call While_Valid_21:create(%17, %18)
  looping thru 0 args of 17:int:const 2
  looping thru 0 args of 18:int:const 1
  looping thru 2 args of 22:int[]:arrinit (%20, %21)
  looping thru 0 args of 20:int:const 1
  looping thru 0 args of 21:int:const 1
checking: 30:bool:eq (%27, %29)
  looping thru 2 args of 30:bool:eq (%27, %29)
  looping thru 2 args of 27:int[]:call While_Valid_21:create(%25, %26)
  looping thru 0 args of 25:int:const 1
  looping thru 0 args of 26:int:const 1
  looping thru 1 args of 29:int[]:arrinit (%28)
  looping thru 0 args of 28:int:const 1
checking: 38:bool:eq (%34, %37)
  looping thru 2 args of 38:bool:eq (%34, %37)
  looping thru 2 args of 34:int[]:call While_Valid_21:create(%32, %33)
  looping thru 0 args of 32:int:const 0
  looping thru 0 args of 33:int:const 0
  looping thru 2 args of 37:int[]:arrgen (%35, %36)
  looping thru 0 args of 35:int:const 0
  looping thru 0 args of 36:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_22.whiley =====
mangle max : function(int[])->(int) to max$2
checking: 5:bool:gteq (%3, %4)
  looping thru 2 args of 5:bool:gteq (%3, %4)
  looping thru 1 args of 3:int:read (%0)
  looping thru 0 args of 0:int:decl a
  looping thru 1 args of 4:int:read (%1)
  looping thru 0 args of 1:int:decl b
checking: 6:int:read (%0)
  looping thru 1 args of 6:int:read (%0)
  looping thru 0 args of 0:int:decl a
checking: 9:int:read (%1)
  looping thru 1 args of 9:int:read (%1)
  looping thru 0 args of 1:int:decl b
checking: 59:bool:lt (%56, %58)
  looping thru 2 args of 59:bool:lt (%56, %58)
  looping thru 1 args of 56:int:read (%31)
  looping thru 1 args of 31:int:decl i = 30
  looping thru 0 args of 30:int:const 0
  looping thru 1 args of 58:int:arrlen (%57)
  looping thru 1 args of 57:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
assign 1 := 1
checking: 60:int:read (%29)
  looping thru 1 args of 60:int:read (%29)
  looping thru 1 args of 29:int:decl r = 28
conjecture: 0 <= 0 && 0 < arraylen(xs)
  looping thru 2 args of 28:int:arridx (%26, %27)
  looping thru 1 args of 26:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 0 args of 27:int:const 0
checking: 65:int:call While_Valid_22:max(%61, %64)
  looping thru 2 args of 65:int:call While_Valid_22:max(%61, %64)
  looping thru 1 args of 61:int:read (%29)
  looping thru 1 args of 29:int:decl r = 28
conjecture: 0 <= 0 && 0 < arraylen(xs)
  looping thru 2 args of 28:int:arridx (%26, %27)
  looping thru 1 args of 26:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 0 args of 27:int:const 0
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 64:int:arridx (%62, %63)
  looping thru 1 args of 62:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 63:int:read (%31)
  looping thru 1 args of 31:int:decl i = 30
  looping thru 0 args of 30:int:const 0
assign 1 := 1
checking: 67:int:read (%31)
  looping thru 1 args of 67:int:read (%31)
  looping thru 1 args of 31:int:decl i = 30
  looping thru 0 args of 30:int:const 0
checking: 70:int:add (%68, %69)
  looping thru 2 args of 70:int:add (%68, %69)
  looping thru 1 args of 68:int:read (%31)
  looping thru 1 args of 31:int:decl i = 30
  looping thru 0 args of 30:int:const 0
  looping thru 0 args of 69:int:const 1
checking: 74:int:read (%29)
  looping thru 1 args of 74:int:read (%29)
  looping thru 1 args of 29:int:decl r = 28
conjecture: 0 <= 0 && 0 < arraylen(xs)
  looping thru 2 args of 28:int:arridx (%26, %27)
  looping thru 1 args of 26:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 0 args of 27:int:const 0
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:int:call While_Valid_22:max(%10)
  looping thru 10 args of 10:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6, %7, %8, %9)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 4:int:const 5
  looping thru 0 args of 5:int:const 6
  looping thru 0 args of 6:int:const 7
  looping thru 0 args of 7:int:const 8
  looping thru 0 args of 8:int:const 9
  looping thru 0 args of 9:int:const 10
  looping thru 0 args of 12:int:const 10
checking: 31:bool:eq (%29, %30)
  looping thru 2 args of 31:bool:eq (%29, %30)
  looping thru 1 args of 29:int:call While_Valid_22:max(%28)
  looping thru 10 args of 28:int[]:arrinit (%16, %17, %18, %19, %21, %22, %23, %24, %26, %27)
  looping thru 1 args of 16:int:neg (%15)
  looping thru 0 args of 15:int:const 8
  looping thru 0 args of 17:int:const 7
  looping thru 0 args of 18:int:const 9
  looping thru 0 args of 19:int:const 1
  looping thru 1 args of 21:int:neg (%20)
  looping thru 0 args of 20:int:const 1
  looping thru 0 args of 22:int:const 2
  looping thru 0 args of 23:int:const 5
  looping thru 0 args of 24:int:const 6
  looping thru 1 args of 26:int:neg (%25)
  looping thru 0 args of 25:int:const 200
  looping thru 0 args of 27:int:const 4
  looping thru 0 args of 30:int:const 9
checking: 37:bool:eq (%35, %36)
  looping thru 2 args of 37:bool:eq (%35, %36)
  looping thru 1 args of 35:int:call While_Valid_22:max(%34)
  looping thru 1 args of 34:int[]:arrinit (%33)
  looping thru 0 args of 33:int:const 1
  looping thru 0 args of 36:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_22.bpl(54,9): Error BP5005: This loop invariant might not be maintained by the loop.
Execution trace:
    While_Valid_22.bpl(50,7): anon0
    While_Valid_22.bpl(52,5): anon3_LoopHead
    While_Valid_22.bpl(57,9): anon3_LoopBody
While_Valid_22.bpl(55,9): Error BP5005: This loop invariant might not be maintained by the loop.
Execution trace:
    While_Valid_22.bpl(50,7): anon0
    While_Valid_22.bpl(52,5): anon3_LoopHead
    While_Valid_22.bpl(57,9): anon3_LoopBody

Boogie program verifier finished with 2 verified, 2 errors
===== While_Valid_23.whiley =====
checking: 44:bool:lt (%41, %43)
  looping thru 2 args of 44:bool:lt (%41, %43)
  looping thru 1 args of 41:int:read (%21)
  looping thru 1 args of 21:int:decl i = 20
  looping thru 0 args of 20:int:const 1
  looping thru 1 args of 43:int:arrlen (%42)
  looping thru 1 args of 42:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
assign 1 := 1
checking: 45:int:read (%19)
  looping thru 1 args of 45:int:read (%19)
  looping thru 1 args of 19:int:decl r = 18
conjecture: 0 <= 0 && 0 < arraylen(xs)
  looping thru 2 args of 18:int:arridx (%16, %17)
  looping thru 1 args of 16:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 0 args of 17:int:const 0
checking: 48:int:arridx (%46, %47)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 48:int:arridx (%46, %47)
  looping thru 1 args of 46:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 47:int:read (%21)
  looping thru 1 args of 21:int:decl i = 20
  looping thru 0 args of 20:int:const 1
assign 1 := 1
checking: 50:int:read (%21)
  looping thru 1 args of 50:int:read (%21)
  looping thru 1 args of 21:int:decl i = 20
  looping thru 0 args of 20:int:const 1
checking: 53:int:add (%51, %52)
  looping thru 2 args of 53:int:add (%51, %52)
  looping thru 1 args of 51:int:read (%21)
  looping thru 1 args of 21:int:decl i = 20
  looping thru 0 args of 20:int:const 1
  looping thru 0 args of 52:int:const 1
checking: 57:int:read (%19)
  looping thru 1 args of 57:int:read (%19)
  looping thru 1 args of 19:int:decl r = 18
conjecture: 0 <= 0 && 0 < arraylen(xs)
  looping thru 2 args of 18:int:arridx (%16, %17)
  looping thru 1 args of 16:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 0 args of 17:int:const 0
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:int:call While_Valid_23:f(%10)
  looping thru 10 args of 10:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6, %7, %8, %9)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 4:int:const 5
  looping thru 0 args of 5:int:const 6
  looping thru 0 args of 6:int:const 7
  looping thru 0 args of 7:int:const 8
  looping thru 0 args of 8:int:const 9
  looping thru 0 args of 9:int:const 10
  looping thru 0 args of 12:int:const 10
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_23.bpl(25,9): Error BP5004: This loop invariant might not hold on entry.
Execution trace:
    While_Valid_23.bpl(21,7): anon0

Boogie program verifier finished with 1 verified, 1 error
===== While_Valid_24.whiley =====
checking: 23:bool:lt (%20, %22)
  looping thru 2 args of 23:bool:lt (%20, %22)
  looping thru 1 args of 20:int:read (%15)
  looping thru 1 args of 15:int:decl i = 14
  looping thru 0 args of 14:int:const 0
  looping thru 1 args of 22:int:arrlen (%21)
  looping thru 1 args of 21:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
checking: 28:bool:eq (%26, %27)
  looping thru 2 args of 28:bool:eq (%26, %27)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 26:int:arridx (%24, %25)
  looping thru 1 args of 24:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 25:int:read (%15)
  looping thru 1 args of 15:int:decl i = 14
  looping thru 0 args of 14:int:const 0
  looping thru 1 args of 27:int:read (%1)
  looping thru 0 args of 1:int:decl x
checking: 29:int:read (%15)
  looping thru 1 args of 29:int:read (%15)
  looping thru 1 args of 15:int:decl i = 14
  looping thru 0 args of 14:int:const 0
assign 1 := 1
checking: 33:int:read (%15)
  looping thru 1 args of 33:int:read (%15)
  looping thru 1 args of 15:int:decl i = 14
  looping thru 0 args of 14:int:const 0
checking: 36:int:add (%34, %35)
  looping thru 2 args of 36:int:add (%34, %35)
  looping thru 1 args of 34:int:read (%15)
  looping thru 1 args of 15:int:decl i = 14
  looping thru 0 args of 14:int:const 0
  looping thru 0 args of 35:int:const 1
checking: 40:null:const null
  looping thru 0 args of 40:null:const null
checking: 7:bool:eq (%5, %6)
  looping thru 2 args of 7:bool:eq (%5, %6)
  looping thru 2 args of 5:null|int:call While_Valid_24:indexOf(%3, %4)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 6:int:const 0
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 2 args of 14:null|int:call While_Valid_24:indexOf(%12, %13)
  looping thru 3 args of 12:int[]:arrinit (%9, %10, %11)
  looping thru 0 args of 9:int:const 1
  looping thru 0 args of 10:int:const 2
  looping thru 0 args of 11:int:const 3
  looping thru 0 args of 13:int:const 0
  looping thru 0 args of 15:null:const null
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_25.whiley =====
checking: 15:bool:lt (%13, %14)
  looping thru 2 args of 15:bool:lt (%13, %14)
  looping thru 1 args of 13:int:read (%3)
  looping thru 1 args of 3:int:decl x = 2
  looping thru 0 args of 2:int:const 0
  looping thru 1 args of 14:int:read (%0)
  looping thru 0 args of 0:int:decl n
assign 1 := 1
checking: 16:int:read (%3)
  looping thru 1 args of 16:int:read (%3)
  looping thru 1 args of 3:int:decl x = 2
  looping thru 0 args of 2:int:const 0
checking: 19:int:add (%17, %18)
  looping thru 2 args of 19:int:add (%17, %18)
  looping thru 1 args of 17:int:read (%3)
  looping thru 1 args of 3:int:decl x = 2
  looping thru 0 args of 2:int:const 0
  looping thru 0 args of 18:int:const 1
assign 1 := 1
checking: 21:int:read (%5)
  looping thru 1 args of 21:int:read (%5)
  looping thru 1 args of 5:int:decl y = 4
  looping thru 0 args of 4:int:const 0
checking: 24:int:add (%22, %23)
  looping thru 2 args of 24:int:add (%22, %23)
  looping thru 1 args of 22:int:read (%5)
  looping thru 1 args of 5:int:decl y = 4
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 23:int:const 2
checking: 30:int:add (%28, %29)
  looping thru 2 args of 30:int:add (%28, %29)
  looping thru 1 args of 28:int:read (%3)
  looping thru 1 args of 3:int:decl x = 2
  looping thru 0 args of 2:int:const 0
  looping thru 1 args of 29:int:read (%5)
  looping thru 1 args of 5:int:decl y = 4
  looping thru 0 args of 4:int:const 0
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call While_Valid_25:f(%0)
  looping thru 0 args of 0:int:const 10
  looping thru 0 args of 2:int:const 30
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_26.whiley =====
checking: 70:bool:lt (%67, %69)
  looping thru 2 args of 70:bool:lt (%67, %69)
  looping thru 1 args of 67:int:read (%48)
  looping thru 1 args of 48:int:decl i = 47
  looping thru 0 args of 47:int:const 0
  looping thru 1 args of 69:int:arrlen (%68)
  looping thru 1 args of 68:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
checking: 75:bool:eq (%73, %74)
  looping thru 2 args of 75:bool:eq (%73, %74)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(items)
  looping thru 2 args of 73:int:arridx (%71, %72)
  looping thru 1 args of 71:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 1 args of 72:int:read (%48)
  looping thru 1 args of 48:int:decl i = 47
  looping thru 0 args of 47:int:const 0
  looping thru 1 args of 74:int:read (%1)
  looping thru 0 args of 1:int:decl item
checking: 76:int:read (%48)
  looping thru 1 args of 76:int:read (%48)
  looping thru 1 args of 48:int:decl i = 47
  looping thru 0 args of 47:int:const 0
assign 1 := 1
checking: 80:int:read (%48)
  looping thru 1 args of 80:int:read (%48)
  looping thru 1 args of 48:int:decl i = 47
  looping thru 0 args of 47:int:const 0
checking: 83:int:add (%81, %82)
  looping thru 2 args of 83:int:add (%81, %82)
  looping thru 1 args of 81:int:read (%48)
  looping thru 1 args of 48:int:decl i = 47
  looping thru 0 args of 47:int:const 0
  looping thru 0 args of 82:int:const 1
checking: 87:null:const null
  looping thru 0 args of 87:null:const null
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 2 args of 8:null|While_Valid_26:nat:call While_Valid_26:search(%6, %7)
  looping thru 1 args of 6:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 9:null:const null
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 2 args of 14:null|While_Valid_26:nat:call While_Valid_26:search(%12, %13)
  looping thru 1 args of 12:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 13:int:const 1
  looping thru 0 args of 15:null:const null
checking: 22:bool:eq (%20, %21)
  looping thru 2 args of 22:bool:eq (%20, %21)
  looping thru 2 args of 20:null|While_Valid_26:nat:call While_Valid_26:search(%18, %19)
  looping thru 1 args of 18:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 19:int:const 2
  looping thru 0 args of 21:null:const null
checking: 28:bool:eq (%26, %27)
  looping thru 2 args of 28:bool:eq (%26, %27)
  looping thru 2 args of 26:null|While_Valid_26:nat:call While_Valid_26:search(%24, %25)
  looping thru 1 args of 24:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 25:int:const 3
  looping thru 0 args of 27:int:const 0
checking: 34:bool:eq (%32, %33)
  looping thru 2 args of 34:bool:eq (%32, %33)
  looping thru 2 args of 32:null|While_Valid_26:nat:call While_Valid_26:search(%30, %31)
  looping thru 1 args of 30:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 31:int:const 4
  looping thru 0 args of 33:null:const null
checking: 40:bool:eq (%38, %39)
  looping thru 2 args of 40:bool:eq (%38, %39)
  looping thru 2 args of 38:null|While_Valid_26:nat:call While_Valid_26:search(%36, %37)
  looping thru 1 args of 36:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 37:int:const 5
  looping thru 0 args of 39:int:const 1
checking: 46:bool:eq (%44, %45)
  looping thru 2 args of 46:bool:eq (%44, %45)
  looping thru 2 args of 44:null|While_Valid_26:nat:call While_Valid_26:search(%42, %43)
  looping thru 1 args of 42:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 43:int:const 6
  looping thru 0 args of 45:int:const 2
checking: 52:bool:eq (%50, %51)
  looping thru 2 args of 52:bool:eq (%50, %51)
  looping thru 2 args of 50:null|While_Valid_26:nat:call While_Valid_26:search(%48, %49)
  looping thru 1 args of 48:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 49:int:const 7
  looping thru 0 args of 51:null:const null
checking: 58:bool:eq (%56, %57)
  looping thru 2 args of 58:bool:eq (%56, %57)
  looping thru 2 args of 56:null|While_Valid_26:nat:call While_Valid_26:search(%54, %55)
  looping thru 1 args of 54:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 55:int:const 8
  looping thru 0 args of 57:null:const null
checking: 64:bool:eq (%62, %63)
  looping thru 2 args of 64:bool:eq (%62, %63)
  looping thru 2 args of 62:null|While_Valid_26:nat:call While_Valid_26:search(%60, %61)
  looping thru 1 args of 60:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 61:int:const 9
  looping thru 0 args of 63:int:const 3
checking: 70:bool:eq (%68, %69)
  looping thru 2 args of 70:bool:eq (%68, %69)
  looping thru 2 args of 68:null|While_Valid_26:nat:call While_Valid_26:search(%66, %67)
  looping thru 1 args of 66:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl list = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 3
  looping thru 0 args of 1:int:const 5
  looping thru 0 args of 2:int:const 6
  looping thru 0 args of 3:int:const 9
  looping thru 0 args of 67:int:const 10
  looping thru 0 args of 69:null:const null
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_27.whiley =====
checking: 22:bool:lt (%20, %21)
  looping thru 2 args of 22:bool:lt (%20, %21)
  looping thru 1 args of 20:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
  looping thru 1 args of 21:int:read (%15)
  looping thru 1 args of 15:int:decl size = 14
  looping thru 2 args of 14:int:mul (%12, %13)
  looping thru 1 args of 12:int:read (%0)
  looping thru 0 args of 0:int:decl width
  looping thru 1 args of 13:int:read (%1)
  looping thru 0 args of 1:int:decl height
assign 1 := 1
checking: 23:int:read (%11)
  looping thru 1 args of 23:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
checking: 26:int:add (%24, %25)
  looping thru 2 args of 26:int:add (%24, %25)
  looping thru 1 args of 24:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
  looping thru 0 args of 25:int:const 1
checking: 30:int:read (%11)
  looping thru 1 args of 30:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 2 args of 2:int:call While_Valid_27:count(%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 3:int:const 0
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 2 args of 8:int:call While_Valid_27:count(%6, %7)
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 7:int:const 1
  looping thru 0 args of 9:int:const 1
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 2 args of 14:int:call While_Valid_27:count(%12, %13)
  looping thru 0 args of 12:int:const 5
  looping thru 0 args of 13:int:const 5
  looping thru 0 args of 15:int:const 25
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_28.whiley =====
checking: 12:bool:gteq (%10, %11)
  looping thru 2 args of 12:bool:gteq (%10, %11)
  looping thru 1 args of 10:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 11:int:const 0
assign 1 := 1
checking: 14:int:read (%9)
  looping thru 1 args of 14:int:read (%9)
  looping thru 1 args of 9:int:decl r = 8
  looping thru 0 args of 8:int:const 0
checking: 19:int:add (%15, %18)
  looping thru 2 args of 19:int:add (%15, %18)
  looping thru 1 args of 15:int:read (%9)
  looping thru 1 args of 9:int:decl r = 8
  looping thru 0 args of 8:int:const 0
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 18:int:arridx (%16, %17)
  looping thru 1 args of 16:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 17:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
assign 1 := 1
checking: 21:int:read (%7)
  looping thru 1 args of 21:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
checking: 24:int:add (%22, %23)
  looping thru 2 args of 24:int:add (%22, %23)
  looping thru 1 args of 22:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 23:int:const 1
checking: 34:bool:lt (%31, %33)
  looping thru 2 args of 34:bool:lt (%31, %33)
  looping thru 1 args of 31:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
  looping thru 1 args of 33:int:arrlen (%32)
  looping thru 1 args of 32:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
assign 1 := 1
checking: 35:int:read (%9)
  looping thru 1 args of 35:int:read (%9)
  looping thru 1 args of 9:int:decl r = 8
  looping thru 0 args of 8:int:const 0
checking: 40:int:add (%36, %39)
  looping thru 2 args of 40:int:add (%36, %39)
  looping thru 1 args of 36:int:read (%9)
  looping thru 1 args of 9:int:decl r = 8
  looping thru 0 args of 8:int:const 0
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 39:int:arridx (%37, %38)
  looping thru 1 args of 37:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 38:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
assign 1 := 1
checking: 42:int:read (%7)
  looping thru 1 args of 42:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
checking: 45:int:add (%43, %44)
  looping thru 2 args of 45:int:add (%43, %44)
  looping thru 1 args of 43:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 44:int:const 1
checking: 49:int:read (%9)
  looping thru 1 args of 49:int:read (%9)
  looping thru 1 args of 9:int:decl r = 8
  looping thru 0 args of 8:int:const 0
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 1 args of 2:int:call While_Valid_28:sum(%1)
  looping thru 1 args of 1:int[]:arrinit (%0)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 3:int:const 1
checking: 11:bool:eq (%9, %10)
  looping thru 2 args of 11:bool:eq (%9, %10)
  looping thru 1 args of 9:int:call While_Valid_28:sum(%8)
  looping thru 2 args of 8:int[]:arrinit (%6, %7)
  looping thru 0 args of 6:int:const 1
  looping thru 0 args of 7:int:const 2
  looping thru 0 args of 10:int:const 3
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 1 args of 17:int:call While_Valid_28:sum(%16)
  looping thru 3 args of 16:int[]:arrinit (%13, %14, %15)
  looping thru 0 args of 13:int:const 1
  looping thru 0 args of 14:int:const 2
  looping thru 0 args of 15:int:const 3
  looping thru 0 args of 18:int:const 6
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_29.whiley =====
checking: 36:bool:lt (%33, %35)
  looping thru 2 args of 36:bool:lt (%33, %35)
  looping thru 1 args of 33:int:read (%23)
  looping thru 1 args of 23:int:decl i = 22
  looping thru 0 args of 22:int:const 0
  looping thru 1 args of 35:int:arrlen (%34)
  looping thru 1 args of 34:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
checking: 41:bool:eq (%39, %40)
  looping thru 2 args of 41:bool:eq (%39, %40)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(items)
  looping thru 2 args of 39:int:arridx (%37, %38)
  looping thru 1 args of 37:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 1 args of 38:int:read (%23)
  looping thru 1 args of 23:int:decl i = 22
  looping thru 0 args of 22:int:const 0
  looping thru 1 args of 40:int:read (%1)
  looping thru 0 args of 1:int:decl item
checking: 49:bool:land (%44, %48)
  looping thru 2 args of 44:bool:lteq (%42, %43)
  looping thru 0 args of 42:int:const 0
  looping thru 1 args of 43:int:read (%23)
  looping thru 1 args of 23:int:decl i = 22
  looping thru 0 args of 22:int:const 0
  looping thru 2 args of 48:bool:lt (%45, %47)
  looping thru 1 args of 45:int:read (%23)
  looping thru 1 args of 23:int:decl i = 22
  looping thru 0 args of 22:int:const 0
  looping thru 1 args of 47:int:arrlen (%46)
  looping thru 1 args of 46:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
assign 1 := 1
checking: 54:int:read (%23)
  looping thru 1 args of 54:int:read (%23)
  looping thru 1 args of 23:int:decl i = 22
  looping thru 0 args of 22:int:const 0
checking: 57:int:add (%55, %56)
  looping thru 2 args of 57:int:add (%55, %56)
  looping thru 1 args of 55:int:read (%23)
  looping thru 1 args of 23:int:decl i = 22
  looping thru 0 args of 22:int:const 0
  looping thru 0 args of 56:int:const 1
checking: 61:int:read (%23)
  looping thru 1 args of 61:int:read (%23)
  looping thru 1 args of 23:int:decl i = 22
  looping thru 0 args of 22:int:const 0
checking: 7:bool:eq (%5, %6)
  looping thru 2 args of 7:bool:eq (%5, %6)
  looping thru 2 args of 5:int:call While_Valid_29:find(%3, %4)
  looping thru 3 args of 3:int[]:arrinit (%0, %1, %2)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 6:int:const 0
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 2 args of 14:int:call While_Valid_29:find(%12, %13)
  looping thru 3 args of 12:int[]:arrinit (%9, %10, %11)
  looping thru 0 args of 9:int:const 1
  looping thru 0 args of 10:int:const 2
  looping thru 0 args of 11:int:const 3
  looping thru 0 args of 13:int:const 2
  looping thru 0 args of 15:int:const 1
checking: 25:bool:eq (%23, %24)
  looping thru 2 args of 25:bool:eq (%23, %24)
  looping thru 2 args of 23:int:call While_Valid_29:find(%21, %22)
  looping thru 3 args of 21:int[]:arrinit (%18, %19, %20)
  looping thru 0 args of 18:int:const 1
  looping thru 0 args of 19:int:const 2
  looping thru 0 args of 20:int:const 3
  looping thru 0 args of 22:int:const 3
  looping thru 0 args of 24:int:const 2
checking: 35:bool:eq (%33, %34)
  looping thru 2 args of 35:bool:eq (%33, %34)
  looping thru 2 args of 33:int:call While_Valid_29:find(%30, %32)
  looping thru 3 args of 30:int[]:arrinit (%27, %28, %29)
  looping thru 0 args of 27:int:const 1
  looping thru 0 args of 28:int:const 2
  looping thru 0 args of 29:int:const 3
  looping thru 1 args of 32:int:neg (%31)
  looping thru 0 args of 31:int:const 1
  looping thru 0 args of 34:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_3.whiley =====
checking: 18:bool:lt (%15, %17)
  looping thru 2 args of 18:bool:lt (%15, %17)
  looping thru 1 args of 15:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
  looping thru 1 args of 17:int:arrlen (%16)
  looping thru 1 args of 16:While_Valid_3:nat[]:read (%0)
  looping thru 0 args of 0:While_Valid_3:nat[]:decl ls
assign 1 := 1
checking: 19:int:read (%5)
  looping thru 1 args of 19:int:read (%5)
  looping thru 1 args of 5:int:decl sum = 4
  looping thru 0 args of 4:int:const 0
checking: 24:int:add (%20, %23)
  looping thru 2 args of 24:int:add (%20, %23)
  looping thru 1 args of 20:int:read (%5)
  looping thru 1 args of 5:int:decl sum = 4
  looping thru 0 args of 4:int:const 0
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(ls)
  looping thru 2 args of 23:While_Valid_3:nat:arridx (%21, %22)
  looping thru 1 args of 21:While_Valid_3:nat[]:read (%0)
  looping thru 0 args of 0:While_Valid_3:nat[]:decl ls
  looping thru 1 args of 22:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
assign 1 := 1
checking: 26:int:read (%3)
  looping thru 1 args of 26:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
checking: 29:int:add (%27, %28)
  looping thru 2 args of 29:int:add (%27, %28)
  looping thru 1 args of 27:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
  looping thru 0 args of 28:int:const 1
checking: 33:int:read (%5)
  looping thru 1 args of 33:int:read (%5)
  looping thru 1 args of 5:int:decl sum = 4
  looping thru 0 args of 4:int:const 0
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:While_Valid_3:nat:call While_Valid_3:sum(%2)
  looping thru 2 args of 2:int[]:arrgen (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 4:int:const 0
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:While_Valid_3:nat:call While_Valid_3:sum(%10)
  looping thru 3 args of 10:int[]:arrinit (%7, %8, %9)
  looping thru 0 args of 7:int:const 1
  looping thru 0 args of 8:int:const 2
  looping thru 0 args of 9:int:const 3
  looping thru 0 args of 12:int:const 6
checking: 23:bool:eq (%21, %22)
  looping thru 2 args of 23:bool:eq (%21, %22)
  looping thru 1 args of 21:While_Valid_3:nat:call While_Valid_3:sum(%20)
  looping thru 5 args of 20:int[]:arrinit (%15, %16, %17, %18, %19)
  looping thru 0 args of 15:int:const 12387
  looping thru 0 args of 16:int:const 98123
  looping thru 0 args of 17:int:const 12398
  looping thru 0 args of 18:int:const 12309
  looping thru 0 args of 19:int:const 0
  looping thru 0 args of 22:int:const 135217
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_30.whiley =====
checking: 27:bool:lt (%25, %26)
  looping thru 2 args of 27:bool:lt (%25, %26)
  looping thru 1 args of 25:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
  looping thru 1 args of 26:int:read (%0)
  looping thru 0 args of 0:int:decl n
assign 1 := 1
checking: 28:int:read (%13)
  looping thru 1 args of 28:int:read (%13)
  looping thru 1 args of 13:int:decl x = 12
  looping thru 0 args of 12:int:const 0
checking: 31:int:add (%29, %30)
  looping thru 2 args of 31:int:add (%29, %30)
  looping thru 1 args of 29:int:read (%13)
  looping thru 1 args of 13:int:decl x = 12
  looping thru 0 args of 12:int:const 0
  looping thru 0 args of 30:int:const 2
assign 1 := 1
checking: 33:int:read (%11)
  looping thru 1 args of 33:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
checking: 36:int:add (%34, %35)
  looping thru 2 args of 36:int:add (%34, %35)
  looping thru 1 args of 34:int:read (%11)
  looping thru 1 args of 11:int:decl i = 10
  looping thru 0 args of 10:int:const 0
  looping thru 0 args of 35:int:const 1
checking: 40:int:read (%13)
  looping thru 1 args of 40:int:read (%13)
  looping thru 1 args of 13:int:decl x = 12
  looping thru 0 args of 12:int:const 0
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call While_Valid_30:duplicate(%0)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 2:int:const 0
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:call While_Valid_30:duplicate(%5)
  looping thru 0 args of 5:int:const 1
  looping thru 0 args of 7:int:const 2
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:int:call While_Valid_30:duplicate(%10)
  looping thru 0 args of 10:int:const 2
  looping thru 0 args of 12:int:const 4
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 1 args of 16:int:call While_Valid_30:duplicate(%15)
  looping thru 0 args of 15:int:const 3
  looping thru 0 args of 17:int:const 6
checking: 23:bool:eq (%21, %22)
  looping thru 2 args of 23:bool:eq (%21, %22)
  looping thru 1 args of 21:int:call While_Valid_30:duplicate(%20)
  looping thru 0 args of 20:int:const 4
  looping thru 0 args of 22:int:const 8
checking: 28:bool:eq (%26, %27)
  looping thru 2 args of 28:bool:eq (%26, %27)
  looping thru 1 args of 26:int:call While_Valid_30:duplicate(%25)
  looping thru 0 args of 25:int:const 5
  looping thru 0 args of 27:int:const 10
checking: 33:bool:eq (%31, %32)
  looping thru 2 args of 33:bool:eq (%31, %32)
  looping thru 1 args of 31:int:call While_Valid_30:duplicate(%30)
  looping thru 0 args of 30:int:const 6
  looping thru 0 args of 32:int:const 12
checking: 38:bool:eq (%36, %37)
  looping thru 2 args of 38:bool:eq (%36, %37)
  looping thru 1 args of 36:int:call While_Valid_30:duplicate(%35)
  looping thru 0 args of 35:int:const 7
  looping thru 0 args of 37:int:const 14
checking: 43:bool:eq (%41, %42)
  looping thru 2 args of 43:bool:eq (%41, %42)
  looping thru 1 args of 41:int:call While_Valid_30:duplicate(%40)
  looping thru 0 args of 40:int:const 8
  looping thru 0 args of 42:int:const 16
checking: 48:bool:eq (%46, %47)
  looping thru 2 args of 48:bool:eq (%46, %47)
  looping thru 1 args of 46:int:call While_Valid_30:duplicate(%45)
  looping thru 0 args of 45:int:const 9
  looping thru 0 args of 47:int:const 18
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_31.whiley =====
checking: 33:bool:land (%27, %32)
  looping thru 2 args of 27:bool:lt (%24, %26)
  looping thru 1 args of 24:int:read (%14)
  looping thru 1 args of 14:int:decl i = 13
  looping thru 0 args of 13:int:const 0
  looping thru 1 args of 26:int:arrlen (%25)
  looping thru 1 args of 25:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 2 args of 32:bool:neq (%30, %31)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(items)
  looping thru 2 args of 30:int:arridx (%28, %29)
  looping thru 1 args of 28:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 1 args of 29:int:read (%14)
  looping thru 1 args of 14:int:decl i = 13
  looping thru 0 args of 13:int:const 0
  looping thru 1 args of 31:int:read (%1)
  looping thru 0 args of 1:int:decl ch
assign 1 := 1
checking: 34:int:read (%14)
  looping thru 1 args of 34:int:read (%14)
  looping thru 1 args of 14:int:decl i = 13
  looping thru 0 args of 13:int:const 0
checking: 37:int:add (%35, %36)
  looping thru 2 args of 37:int:add (%35, %36)
  looping thru 1 args of 35:int:read (%14)
  looping thru 1 args of 14:int:decl i = 13
  looping thru 0 args of 13:int:const 0
  looping thru 0 args of 36:int:const 1
checking: 41:int:read (%14)
  looping thru 1 args of 41:int:read (%14)
  looping thru 1 args of 14:int:decl i = 13
  looping thru 0 args of 13:int:const 0
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 2 args of 2:int:call While_Valid_31:indexOf(%0, %1)
  looping thru 0 args of 0:int[]:const [104,101,108,108,111,32,119,111,114,108,100]
  looping thru 0 args of 1:int:const 104
  looping thru 0 args of 3:int:const 0
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 2 args of 8:int:call While_Valid_31:indexOf(%6, %7)
  looping thru 0 args of 6:int[]:const [104,101,108,108,111,32,119,111,114,108,100]
  looping thru 0 args of 7:int:const 101
  looping thru 0 args of 9:int:const 1
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 2 args of 14:int:call While_Valid_31:indexOf(%12, %13)
  looping thru 0 args of 12:int[]:const [104,101,108,108,111,32,119,111,114,108,100]
  looping thru 0 args of 13:int:const 108
  looping thru 0 args of 15:int:const 2
checking: 22:bool:eq (%20, %21)
  looping thru 2 args of 22:bool:eq (%20, %21)
  looping thru 2 args of 20:int:call While_Valid_31:indexOf(%18, %19)
  looping thru 0 args of 18:int[]:const [104,101,108,108,111,32,119,111,114,108,100]
  looping thru 0 args of 19:int:const 111
  looping thru 0 args of 21:int:const 4
checking: 28:bool:eq (%26, %27)
  looping thru 2 args of 28:bool:eq (%26, %27)
  looping thru 2 args of 26:int:call While_Valid_31:indexOf(%24, %25)
  looping thru 0 args of 24:int[]:const [104,101,108,108,111,32,119,111,114,108,100]
  looping thru 0 args of 25:int:const 32
  looping thru 0 args of 27:int:const 5
checking: 34:bool:eq (%32, %33)
  looping thru 2 args of 34:bool:eq (%32, %33)
  looping thru 2 args of 32:int:call While_Valid_31:indexOf(%30, %31)
  looping thru 0 args of 30:int[]:const [104,101,108,108,111,32,119,111,114,108,100]
  looping thru 0 args of 31:int:const 119
  looping thru 0 args of 33:int:const 6
checking: 40:bool:eq (%38, %39)
  looping thru 2 args of 40:bool:eq (%38, %39)
  looping thru 2 args of 38:int:call While_Valid_31:indexOf(%36, %37)
  looping thru 0 args of 36:int[]:const [104,101,108,108,111,32,119,111,114,108,100]
  looping thru 0 args of 37:int:const 114
  looping thru 0 args of 39:int:const 8
checking: 46:bool:eq (%44, %45)
  looping thru 2 args of 46:bool:eq (%44, %45)
  looping thru 2 args of 44:int:call While_Valid_31:indexOf(%42, %43)
  looping thru 0 args of 42:int[]:const [104,101,108,108,111,32,119,111,114,108,100]
  looping thru 0 args of 43:int:const 100
  looping thru 0 args of 45:int:const 10
checking: 52:bool:eq (%50, %51)
  looping thru 2 args of 52:bool:eq (%50, %51)
  looping thru 2 args of 50:int:call While_Valid_31:indexOf(%48, %49)
  looping thru 0 args of 48:int[]:const [104,101,108,108,111,32,119,111,114,108,100]
  looping thru 0 args of 49:int:const 122
  looping thru 0 args of 51:int:const 11
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_32.whiley =====
checking: 31:bool:lt (%29, %30)
  looping thru 2 args of 31:bool:lt (%29, %30)
  looping thru 1 args of 29:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
  looping thru 1 args of 30:int:read (%0)
  looping thru 0 args of 0:int:decl p
assign 1 := 1
checking: 32:int:read (%18)
  looping thru 1 args of 32:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
checking: 35:int:add (%33, %34)
  looping thru 2 args of 35:int:add (%33, %34)
  looping thru 1 args of 33:int:read (%18)
  looping thru 1 args of 18:int:decl i = 17
  looping thru 0 args of 17:int:const 0
  looping thru 0 args of 34:int:const 1
assign 1 := 1
checking: 37:int:read (%16)
  looping thru 1 args of 37:int:read (%16)
  looping thru 1 args of 16:int:decl qq = 15
  looping thru 0 args of 15:int:const 0
checking: 40:int:add (%38, %39)
  looping thru 2 args of 40:int:add (%38, %39)
  looping thru 1 args of 38:int:read (%16)
  looping thru 1 args of 16:int:decl qq = 15
  looping thru 0 args of 15:int:const 0
  looping thru 1 args of 39:int:read (%1)
  looping thru 0 args of 1:int:decl q
checking: 48:bool:eq (%44, %47)
  looping thru 2 args of 48:bool:eq (%44, %47)
  looping thru 1 args of 44:int:read (%16)
  looping thru 1 args of 16:int:decl qq = 15
  looping thru 0 args of 15:int:const 0
  looping thru 2 args of 47:int:mul (%45, %46)
  looping thru 1 args of 45:int:read (%1)
  looping thru 0 args of 1:int:decl q
  looping thru 1 args of 46:int:read (%0)
  looping thru 0 args of 0:int:decl p
checking: 50:int:read (%16)
  looping thru 1 args of 50:int:read (%16)
  looping thru 1 args of 16:int:decl qq = 15
  looping thru 0 args of 15:int:const 0
checking: 4:bool:eq (%2, %3)
  looping thru 2 args of 4:bool:eq (%2, %3)
  looping thru 2 args of 2:int:call While_Valid_32:loop2(%0, %1)
  looping thru 0 args of 0:int:const 5
  looping thru 0 args of 1:int:const 10
  looping thru 0 args of 3:int:const 50
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_33.whiley =====
checking: 31:bool:lt (%28, %30)
  looping thru 2 args of 31:bool:lt (%28, %30)
  looping thru 1 args of 28:int:read (%16)
  looping thru 1 args of 16:int:decl i = 15
  looping thru 0 args of 15:int:const 0
  looping thru 1 args of 30:int:arrlen (%29)
  looping thru 1 args of 29:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
assign 1 := 1
checking: 32:int:read (%18)
  looping thru 1 args of 32:int:read (%18)
  looping thru 1 args of 18:int:decl x = 17
  looping thru 0 args of 17:int:const 0
checking: 37:int:add (%33, %36)
  looping thru 2 args of 37:int:add (%33, %36)
  looping thru 1 args of 33:int:read (%18)
  looping thru 1 args of 18:int:decl x = 17
  looping thru 0 args of 17:int:const 0
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(items)
  looping thru 2 args of 36:int:arridx (%34, %35)
  looping thru 1 args of 34:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 1 args of 35:int:read (%16)
  looping thru 1 args of 16:int:decl i = 15
  looping thru 0 args of 15:int:const 0
assign 1 := 1
checking: 39:int:read (%16)
  looping thru 1 args of 39:int:read (%16)
  looping thru 1 args of 16:int:decl i = 15
  looping thru 0 args of 15:int:const 0
checking: 42:int:add (%40, %41)
  looping thru 2 args of 42:int:add (%40, %41)
  looping thru 1 args of 40:int:read (%16)
  looping thru 1 args of 16:int:decl i = 15
  looping thru 0 args of 15:int:const 0
  looping thru 0 args of 41:int:const 1
checking: 46:int:read (%18)
  looping thru 1 args of 46:int:read (%18)
  looping thru 1 args of 18:int:decl x = 17
  looping thru 0 args of 17:int:const 0
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:call While_Valid_33:sum(%2)
  looping thru 2 args of 2:int[]:arrgen (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 4:int:const 0
checking: 11:bool:eq (%9, %10)
  looping thru 2 args of 11:bool:eq (%9, %10)
  looping thru 1 args of 9:int:call While_Valid_33:sum(%8)
  looping thru 1 args of 8:int[]:arrinit (%7)
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 10:int:const 0
checking: 17:bool:eq (%15, %16)
  looping thru 2 args of 17:bool:eq (%15, %16)
  looping thru 1 args of 15:int:call While_Valid_33:sum(%14)
  looping thru 1 args of 14:int[]:arrinit (%13)
  looping thru 0 args of 13:int:const 1
  looping thru 0 args of 16:int:const 1
checking: 25:bool:eq (%23, %24)
  looping thru 2 args of 25:bool:eq (%23, %24)
  looping thru 1 args of 23:int:call While_Valid_33:sum(%22)
  looping thru 3 args of 22:int[]:arrinit (%19, %20, %21)
  looping thru 0 args of 19:int:const 1
  looping thru 0 args of 20:int:const 2
  looping thru 0 args of 21:int:const 3
  looping thru 0 args of 24:int:const 6
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_34.whiley =====
checking: 46:bool:lt (%43, %45)
  looping thru 2 args of 46:bool:lt (%43, %45)
  looping thru 1 args of 43:int:read (%16)
  looping thru 1 args of 16:int:decl i = 15
  looping thru 0 args of 15:int:const 0
  looping thru 1 args of 45:int:arrlen (%44)
  looping thru 1 args of 44:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
checking: 51:bool:eq (%49, %50)
  looping thru 2 args of 51:bool:eq (%49, %50)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 49:int:arridx (%47, %48)
  looping thru 1 args of 47:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 48:int:read (%16)
  looping thru 1 args of 16:int:decl i = 15
  looping thru 0 args of 15:int:const 0
  looping thru 1 args of 50:int:read (%1)
  looping thru 0 args of 1:int:decl x
assign 1 := 1
checking: 52:null|int:read (%18)
  looping thru 1 args of 52:null|int:read (%18)
  looping thru 1 args of 18:null|int:decl last = 17
  looping thru 0 args of 17:null:const null
checking: 53:int:read (%16)
  looping thru 1 args of 53:int:read (%16)
  looping thru 1 args of 16:int:decl i = 15
  looping thru 0 args of 15:int:const 0
assign 1 := 1
checking: 57:int:read (%16)
  looping thru 1 args of 57:int:read (%16)
  looping thru 1 args of 16:int:decl i = 15
  looping thru 0 args of 15:int:const 0
checking: 60:int:add (%58, %59)
  looping thru 2 args of 60:int:add (%58, %59)
  looping thru 1 args of 58:int:read (%16)
  looping thru 1 args of 16:int:decl i = 15
  looping thru 0 args of 15:int:const 0
  looping thru 0 args of 59:int:const 1
checking: 64:null|int:read (%18)
  looping thru 1 args of 64:null|int:read (%18)
  looping thru 1 args of 18:null|int:decl last = 17
  looping thru 0 args of 17:null:const null
checking: 12:bool:eq (%10, %11)
  looping thru 2 args of 12:bool:eq (%10, %11)
  looping thru 2 args of 10:null|int:call While_Valid_34:lastIndexOf(%8, %9)
  looping thru 1 args of 8:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl list = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 9:int:const 0
  looping thru 0 args of 11:null:const null
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 2 args of 16:null|int:call While_Valid_34:lastIndexOf(%14, %15)
  looping thru 1 args of 14:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl list = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 15:int:const 1
  looping thru 0 args of 17:int:const 4
checking: 24:bool:eq (%22, %23)
  looping thru 2 args of 24:bool:eq (%22, %23)
  looping thru 2 args of 22:null|int:call While_Valid_34:lastIndexOf(%20, %21)
  looping thru 1 args of 20:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl list = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 21:int:const 2
  looping thru 0 args of 23:int:const 5
checking: 30:bool:eq (%28, %29)
  looping thru 2 args of 30:bool:eq (%28, %29)
  looping thru 2 args of 28:null|int:call While_Valid_34:lastIndexOf(%26, %27)
  looping thru 1 args of 26:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl list = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 27:int:const 3
  looping thru 0 args of 29:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_35.whiley =====
checking: 48:bool:lt (%45, %47)
  looping thru 2 args of 48:bool:lt (%45, %47)
  looping thru 1 args of 45:int:read (%16)
  looping thru 1 args of 16:int:decl i = 15
  looping thru 0 args of 15:int:const 0
  looping thru 1 args of 47:int:arrlen (%46)
  looping thru 1 args of 46:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
checking: 53:bool:eq (%51, %52)
  looping thru 2 args of 53:bool:eq (%51, %52)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 51:int:arridx (%49, %50)
  looping thru 1 args of 49:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 50:int:read (%16)
  looping thru 1 args of 16:int:decl i = 15
  looping thru 0 args of 15:int:const 0
  looping thru 1 args of 52:int:read (%1)
  looping thru 0 args of 1:int:decl x
assign 1 := 1
checking: 54:int:read (%19)
  looping thru 1 args of 54:int:read (%19)
  looping thru 1 args of 19:int:decl last = 18
  looping thru 1 args of 18:int:neg (%17)
  looping thru 0 args of 17:int:const 1
checking: 55:int:read (%16)
  looping thru 1 args of 55:int:read (%16)
  looping thru 1 args of 16:int:decl i = 15
  looping thru 0 args of 15:int:const 0
assign 1 := 1
checking: 59:int:read (%16)
  looping thru 1 args of 59:int:read (%16)
  looping thru 1 args of 16:int:decl i = 15
  looping thru 0 args of 15:int:const 0
checking: 62:int:add (%60, %61)
  looping thru 2 args of 62:int:add (%60, %61)
  looping thru 1 args of 60:int:read (%16)
  looping thru 1 args of 16:int:decl i = 15
  looping thru 0 args of 15:int:const 0
  looping thru 0 args of 61:int:const 1
checking: 69:bool:eq (%66, %68)
  looping thru 2 args of 69:bool:eq (%66, %68)
  looping thru 1 args of 66:int:read (%19)
  looping thru 1 args of 19:int:decl last = 18
  looping thru 1 args of 18:int:neg (%17)
  looping thru 0 args of 17:int:const 1
  looping thru 1 args of 68:int:neg (%67)
  looping thru 0 args of 67:int:const 1
checking: 70:null:const null
  looping thru 0 args of 70:null:const null
checking: 73:int:read (%19)
  looping thru 1 args of 73:int:read (%19)
  looping thru 1 args of 19:int:decl last = 18
  looping thru 1 args of 18:int:neg (%17)
  looping thru 0 args of 17:int:const 1
checking: 12:bool:eq (%10, %11)
  looping thru 2 args of 12:bool:eq (%10, %11)
  looping thru 2 args of 10:null|int:call While_Valid_35:lastIndexOf(%8, %9)
  looping thru 1 args of 8:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl list = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 9:int:const 0
  looping thru 0 args of 11:null:const null
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 2 args of 16:null|int:call While_Valid_35:lastIndexOf(%14, %15)
  looping thru 1 args of 14:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl list = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 15:int:const 1
  looping thru 0 args of 17:int:const 4
checking: 24:bool:eq (%22, %23)
  looping thru 2 args of 24:bool:eq (%22, %23)
  looping thru 2 args of 22:null|int:call While_Valid_35:lastIndexOf(%20, %21)
  looping thru 1 args of 20:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl list = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 21:int:const 2
  looping thru 0 args of 23:int:const 5
checking: 30:bool:eq (%28, %29)
  looping thru 2 args of 30:bool:eq (%28, %29)
  looping thru 2 args of 28:null|int:call While_Valid_35:lastIndexOf(%26, %27)
  looping thru 1 args of 26:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl list = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 27:int:const 3
  looping thru 0 args of 29:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_36.whiley =====
checking: 55:bool:lt (%52, %54)
  looping thru 2 args of 55:bool:lt (%52, %54)
  looping thru 1 args of 52:int:read (%23)
  looping thru 1 args of 23:int:decl i = 22
  looping thru 0 args of 22:int:const 0
  looping thru 1 args of 54:int:arrlen (%53)
  looping thru 1 args of 53:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
checking: 60:bool:eq (%58, %59)
  looping thru 2 args of 60:bool:eq (%58, %59)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 58:int:arridx (%56, %57)
  looping thru 1 args of 56:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 57:int:read (%23)
  looping thru 1 args of 23:int:decl i = 22
  looping thru 0 args of 22:int:const 0
  looping thru 1 args of 59:int:read (%1)
  looping thru 0 args of 1:int:decl x
assign 1 := 1
checking: 61:int:read (%26)
  looping thru 1 args of 61:int:read (%26)
  looping thru 1 args of 26:int:decl last = 25
  looping thru 1 args of 25:int:neg (%24)
  looping thru 0 args of 24:int:const 1
checking: 62:int:read (%23)
  looping thru 1 args of 62:int:read (%23)
  looping thru 1 args of 23:int:decl i = 22
  looping thru 0 args of 22:int:const 0
assign 1 := 1
checking: 66:int:read (%23)
  looping thru 1 args of 66:int:read (%23)
  looping thru 1 args of 23:int:decl i = 22
  looping thru 0 args of 22:int:const 0
checking: 69:int:add (%67, %68)
  looping thru 2 args of 69:int:add (%67, %68)
  looping thru 1 args of 67:int:read (%23)
  looping thru 1 args of 23:int:decl i = 22
  looping thru 0 args of 22:int:const 0
  looping thru 0 args of 68:int:const 1
checking: 73:int:read (%26)
  looping thru 1 args of 73:int:read (%26)
  looping thru 1 args of 26:int:decl last = 25
  looping thru 1 args of 25:int:neg (%24)
  looping thru 0 args of 24:int:const 1
checking: 13:bool:eq (%10, %12)
  looping thru 2 args of 13:bool:eq (%10, %12)
  looping thru 2 args of 10:int:call While_Valid_36:lastIndexOf(%8, %9)
  looping thru 1 args of 8:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl list = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 9:int:const 0
  looping thru 1 args of 12:int:neg (%11)
  looping thru 0 args of 11:int:const 1
checking: 19:bool:eq (%17, %18)
  looping thru 2 args of 19:bool:eq (%17, %18)
  looping thru 2 args of 17:int:call While_Valid_36:lastIndexOf(%15, %16)
  looping thru 1 args of 15:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl list = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 16:int:const 1
  looping thru 0 args of 18:int:const 4
checking: 25:bool:eq (%23, %24)
  looping thru 2 args of 25:bool:eq (%23, %24)
  looping thru 2 args of 23:int:call While_Valid_36:lastIndexOf(%21, %22)
  looping thru 1 args of 21:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl list = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 22:int:const 2
  looping thru 0 args of 24:int:const 5
checking: 31:bool:eq (%29, %30)
  looping thru 2 args of 31:bool:eq (%29, %30)
  looping thru 2 args of 29:int:call While_Valid_36:lastIndexOf(%27, %28)
  looping thru 1 args of 27:int[]:read (%7)
  looping thru 1 args of 7:int[]:decl list = 6
  looping thru 6 args of 6:int[]:arrinit (%0, %1, %2, %3, %4, %5)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 1
  looping thru 0 args of 3:int:const 3
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 2
  looping thru 0 args of 28:int:const 3
  looping thru 0 args of 30:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_37.whiley =====
checking: 56:bool:lt (%54, %55)
  looping thru 2 args of 56:bool:lt (%54, %55)
  looping thru 1 args of 54:int:read (%23)
  looping thru 1 args of 23:int:decl i = 22
  looping thru 0 args of 22:int:const 0
  looping thru 0 args of 55:int:const 8
assign 1 := 1
checking: 59:bool:arridx (%57, %58)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(ret)
  looping thru 2 args of 59:bool:arridx (%57, %58)
  looping thru 1 args of 57:bool[]:read (%25)
  looping thru 1 args of 25:bool[]:decl ret = 24
  looping thru 1 args of 24:bool[]:read (%0)
  looping thru 0 args of 0:bool[]:decl bits
  looping thru 1 args of 58:int:read (%23)
  looping thru 1 args of 23:int:decl i = 22
  looping thru 0 args of 22:int:const 0
checking: 63:bool:not (%62)
  looping thru 1 args of 63:bool:not (%62)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(bits)
  looping thru 2 args of 62:bool:arridx (%60, %61)
  looping thru 1 args of 60:bool[]:read (%0)
  looping thru 0 args of 0:bool[]:decl bits
  looping thru 1 args of 61:int:read (%23)
  looping thru 1 args of 23:int:decl i = 22
  looping thru 0 args of 22:int:const 0
assign 1 := 1
checking: 65:int:read (%23)
  looping thru 1 args of 65:int:read (%23)
  looping thru 1 args of 23:int:decl i = 22
  looping thru 0 args of 22:int:const 0
checking: 68:int:add (%66, %67)
  looping thru 2 args of 68:int:add (%66, %67)
  looping thru 1 args of 66:int:read (%23)
  looping thru 1 args of 23:int:decl i = 22
  looping thru 0 args of 22:int:const 0
  looping thru 0 args of 67:int:const 1
checking: 72:bool[]:read (%25)
  looping thru 1 args of 72:bool[]:read (%25)
  looping thru 1 args of 25:bool[]:decl ret = 24
  looping thru 1 args of 24:bool[]:read (%0)
  looping thru 0 args of 0:bool[]:decl bits
checking: 19:bool:eq (%9, %18)
  looping thru 2 args of 19:bool:eq (%9, %18)
  looping thru 1 args of 9:bool[]:call While_Valid_37:invertByte(%8)
  looping thru 8 args of 8:bool[]:arrinit (%0, %1, %2, %3, %4, %5, %6, %7)
  looping thru 0 args of 0:bool:const true
  looping thru 0 args of 1:bool:const false
  looping thru 0 args of 2:bool:const true
  looping thru 0 args of 3:bool:const false
  looping thru 0 args of 4:bool:const true
  looping thru 0 args of 5:bool:const false
  looping thru 0 args of 6:bool:const true
  looping thru 0 args of 7:bool:const false
  looping thru 8 args of 18:bool[]:arrinit (%10, %11, %12, %13, %14, %15, %16, %17)
  looping thru 0 args of 10:bool:const false
  looping thru 0 args of 11:bool:const true
  looping thru 0 args of 12:bool:const false
  looping thru 0 args of 13:bool:const true
  looping thru 0 args of 14:bool:const false
  looping thru 0 args of 15:bool:const true
  looping thru 0 args of 16:bool:const false
  looping thru 0 args of 17:bool:const true
checking: 40:bool:eq (%30, %39)
  looping thru 2 args of 40:bool:eq (%30, %39)
  looping thru 1 args of 30:bool[]:call While_Valid_37:invertByte(%29)
  looping thru 8 args of 29:bool[]:arrinit (%21, %22, %23, %24, %25, %26, %27, %28)
  looping thru 0 args of 21:bool:const true
  looping thru 0 args of 22:bool:const true
  looping thru 0 args of 23:bool:const true
  looping thru 0 args of 24:bool:const true
  looping thru 0 args of 25:bool:const false
  looping thru 0 args of 26:bool:const false
  looping thru 0 args of 27:bool:const false
  looping thru 0 args of 28:bool:const false
  looping thru 8 args of 39:bool[]:arrinit (%31, %32, %33, %34, %35, %36, %37, %38)
  looping thru 0 args of 31:bool:const false
  looping thru 0 args of 32:bool:const false
  looping thru 0 args of 33:bool:const false
  looping thru 0 args of 34:bool:const false
  looping thru 0 args of 35:bool:const true
  looping thru 0 args of 36:bool:const true
  looping thru 0 args of 37:bool:const true
  looping thru 0 args of 38:bool:const true
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_38.whiley =====
checking: 50:bool:lt (%47, %49)
  looping thru 2 args of 50:bool:lt (%47, %49)
  looping thru 1 args of 47:int:read (%24)
  looping thru 1 args of 24:int:decl i = 23
  looping thru 0 args of 23:int:const 1
  looping thru 1 args of 49:int:arrlen (%48)
  looping thru 1 args of 48:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
checking: 59:bool:gt (%55, %58)
  looping thru 2 args of 59:bool:gt (%55, %58)
conjecture: 0 <= toInt(i) - 1 && toInt(i) - 1 < arraylen(items)
  looping thru 2 args of 55:int:arridx (%51, %54)
  looping thru 1 args of 51:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 2 args of 54:int:sub (%52, %53)
  looping thru 1 args of 52:int:read (%24)
  looping thru 1 args of 24:int:decl i = 23
  looping thru 0 args of 23:int:const 1
  looping thru 0 args of 53:int:const 1
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(items)
  looping thru 2 args of 58:int:arridx (%56, %57)
  looping thru 1 args of 56:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 1 args of 57:int:read (%24)
  looping thru 1 args of 24:int:decl i = 23
  looping thru 0 args of 23:int:const 1
checking: 60:bool:const false
  looping thru 0 args of 60:bool:const false
assign 1 := 1
checking: 64:int:read (%24)
  looping thru 1 args of 64:int:read (%24)
  looping thru 1 args of 24:int:decl i = 23
  looping thru 0 args of 23:int:const 1
checking: 67:int:add (%65, %66)
  looping thru 2 args of 67:int:add (%65, %66)
  looping thru 1 args of 65:int:read (%24)
  looping thru 1 args of 24:int:decl i = 23
  looping thru 0 args of 23:int:const 1
  looping thru 0 args of 66:int:const 1
checking: 71:bool:const true
  looping thru 0 args of 71:bool:const true
checking: 5:bool:call While_Valid_38:isSorted(%4)
  looping thru 1 args of 5:bool:call While_Valid_38:isSorted(%4)
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
checking: 13:bool:not (%12)
  looping thru 1 args of 13:bool:not (%12)
  looping thru 1 args of 12:bool:call While_Valid_38:isSorted(%11)
  looping thru 4 args of 11:int[]:arrinit (%7, %8, %9, %10)
  looping thru 0 args of 7:int:const 1
  looping thru 0 args of 8:int:const 2
  looping thru 0 args of 9:int:const 4
  looping thru 0 args of 10:int:const 3
checking: 21:bool:not (%20)
  looping thru 1 args of 21:bool:not (%20)
  looping thru 1 args of 20:bool:call While_Valid_38:isSorted(%19)
  looping thru 4 args of 19:int[]:arrinit (%15, %16, %17, %18)
  looping thru 0 args of 15:int:const 4
  looping thru 0 args of 16:int:const 2
  looping thru 0 args of 17:int:const 3
  looping thru 0 args of 18:int:const 5
checking: 26:bool:call While_Valid_38:isSorted(%25)
  looping thru 1 args of 26:bool:call While_Valid_38:isSorted(%25)
  looping thru 2 args of 25:int[]:arrgen (%23, %24)
  looping thru 0 args of 23:int:const 0
  looping thru 0 args of 24:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_39.whiley =====
checking: 25:bool:lt (%22, %24)
  looping thru 2 args of 25:bool:lt (%22, %24)
  looping thru 1 args of 22:int:read (%17)
  looping thru 1 args of 17:int:decl i = 16
  looping thru 0 args of 16:int:const 0
  looping thru 1 args of 24:int:arrlen (%23)
  looping thru 1 args of 23:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
checking: 30:bool:eq (%28, %29)
  looping thru 2 args of 30:bool:eq (%28, %29)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 28:int:arridx (%26, %27)
  looping thru 1 args of 26:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 27:int:read (%17)
  looping thru 1 args of 17:int:decl i = 16
  looping thru 0 args of 16:int:const 0
  looping thru 1 args of 29:int:read (%1)
  looping thru 0 args of 1:int:decl x
checking: 31:bool:const true
  looping thru 0 args of 31:bool:const true
assign 1 := 1
checking: 35:int:read (%17)
  looping thru 1 args of 35:int:read (%17)
  looping thru 1 args of 17:int:decl i = 16
  looping thru 0 args of 16:int:const 0
checking: 38:int:add (%36, %37)
  looping thru 2 args of 38:int:add (%36, %37)
  looping thru 1 args of 36:int:read (%17)
  looping thru 1 args of 17:int:decl i = 16
  looping thru 0 args of 16:int:const 0
  looping thru 0 args of 37:int:const 1
checking: 42:bool:const false
  looping thru 0 args of 42:bool:const false
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 2 args of 8:bool:call While_Valid_39:contains(%6, %7)
  looping thru 1 args of 6:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl ls = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 9:bool:const false
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 2 args of 14:bool:call While_Valid_39:contains(%12, %13)
  looping thru 1 args of 12:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl ls = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 13:int:const 1
  looping thru 0 args of 15:bool:const true
checking: 22:bool:eq (%20, %21)
  looping thru 2 args of 22:bool:eq (%20, %21)
  looping thru 2 args of 20:bool:call While_Valid_39:contains(%18, %19)
  looping thru 1 args of 18:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl ls = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 19:int:const 2
  looping thru 0 args of 21:bool:const true
checking: 28:bool:eq (%26, %27)
  looping thru 2 args of 28:bool:eq (%26, %27)
  looping thru 2 args of 26:bool:call While_Valid_39:contains(%24, %25)
  looping thru 1 args of 24:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl ls = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 25:int:const 3
  looping thru 0 args of 27:bool:const true
checking: 34:bool:eq (%32, %33)
  looping thru 2 args of 34:bool:eq (%32, %33)
  looping thru 2 args of 32:bool:call While_Valid_39:contains(%30, %31)
  looping thru 1 args of 30:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl ls = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 31:int:const 4
  looping thru 0 args of 33:bool:const true
checking: 40:bool:eq (%38, %39)
  looping thru 2 args of 40:bool:eq (%38, %39)
  looping thru 2 args of 38:bool:call While_Valid_39:contains(%36, %37)
  looping thru 1 args of 36:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl ls = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 37:int:const 5
  looping thru 0 args of 39:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_40.whiley =====
checking: 25:bool:lt (%22, %24)
  looping thru 2 args of 25:bool:lt (%22, %24)
  looping thru 1 args of 22:int:read (%17)
  looping thru 1 args of 17:int:decl i = 16
  looping thru 0 args of 16:int:const 0
  looping thru 1 args of 24:int:arrlen (%23)
  looping thru 1 args of 23:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
checking: 30:bool:eq (%28, %29)
  looping thru 2 args of 30:bool:eq (%28, %29)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(items)
  looping thru 2 args of 28:int:arridx (%26, %27)
  looping thru 1 args of 26:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 1 args of 27:int:read (%17)
  looping thru 1 args of 17:int:decl i = 16
  looping thru 0 args of 16:int:const 0
  looping thru 1 args of 29:int:read (%1)
  looping thru 0 args of 1:int:decl item
checking: 31:bool:const true
  looping thru 0 args of 31:bool:const true
assign 1 := 1
checking: 35:int:read (%17)
  looping thru 1 args of 35:int:read (%17)
  looping thru 1 args of 17:int:decl i = 16
  looping thru 0 args of 16:int:const 0
checking: 38:int:add (%36, %37)
  looping thru 2 args of 38:int:add (%36, %37)
  looping thru 1 args of 36:int:read (%17)
  looping thru 1 args of 17:int:decl i = 16
  looping thru 0 args of 16:int:const 0
  looping thru 0 args of 37:int:const 1
checking: 42:bool:const false
  looping thru 0 args of 42:bool:const false
checking: 10:bool:eq (%8, %9)
  looping thru 2 args of 10:bool:eq (%8, %9)
  looping thru 2 args of 8:bool:call While_Valid_40:contains(%6, %7)
  looping thru 1 args of 6:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl ls = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 9:bool:const false
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 2 args of 14:bool:call While_Valid_40:contains(%12, %13)
  looping thru 1 args of 12:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl ls = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 13:int:const 1
  looping thru 0 args of 15:bool:const true
checking: 22:bool:eq (%20, %21)
  looping thru 2 args of 22:bool:eq (%20, %21)
  looping thru 2 args of 20:bool:call While_Valid_40:contains(%18, %19)
  looping thru 1 args of 18:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl ls = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 19:int:const 2
  looping thru 0 args of 21:bool:const true
checking: 28:bool:eq (%26, %27)
  looping thru 2 args of 28:bool:eq (%26, %27)
  looping thru 2 args of 26:bool:call While_Valid_40:contains(%24, %25)
  looping thru 1 args of 24:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl ls = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 25:int:const 3
  looping thru 0 args of 27:bool:const true
checking: 34:bool:eq (%32, %33)
  looping thru 2 args of 34:bool:eq (%32, %33)
  looping thru 2 args of 32:bool:call While_Valid_40:contains(%30, %31)
  looping thru 1 args of 30:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl ls = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 31:int:const 4
  looping thru 0 args of 33:bool:const true
checking: 40:bool:eq (%38, %39)
  looping thru 2 args of 40:bool:eq (%38, %39)
  looping thru 2 args of 38:bool:call While_Valid_40:contains(%36, %37)
  looping thru 1 args of 36:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl ls = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 37:int:const 5
  looping thru 0 args of 39:bool:const false
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_41.whiley =====
MUTATED INPUT items : int[]
checking: 34:bool:lt (%31, %33)
  looping thru 2 args of 34:bool:lt (%31, %33)
  looping thru 1 args of 31:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
  looping thru 1 args of 33:int:arrlen (%32)
  looping thru 1 args of 32:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
assign 1 := 1
checking: 37:int:arridx (%35, %36)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(items)
  looping thru 2 args of 37:int:arridx (%35, %36)
  looping thru 1 args of 35:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 1 args of 36:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
checking: 38:int:const 0
  looping thru 0 args of 38:int:const 0
assign 1 := 1
checking: 40:int:read (%3)
  looping thru 1 args of 40:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
checking: 43:int:add (%41, %42)
  looping thru 2 args of 43:int:add (%41, %42)
  looping thru 1 args of 41:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
  looping thru 0 args of 42:int:const 1
checking: 47:int[]:read (%0)
  looping thru 1 args of 47:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
checking: 7:bool:eq (%3, %6)
  looping thru 2 args of 7:bool:eq (%3, %6)
  looping thru 1 args of 3:int[]:call While_Valid_41:zeroOut(%2)
  looping thru 2 args of 2:int[]:arrgen (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
  looping thru 2 args of 6:int[]:arrgen (%4, %5)
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 5:int:const 0
checking: 14:bool:eq (%11, %13)
  looping thru 2 args of 14:bool:eq (%11, %13)
  looping thru 1 args of 11:int[]:call While_Valid_41:zeroOut(%10)
  looping thru 1 args of 10:int[]:arrinit (%9)
  looping thru 0 args of 9:int:const 1
  looping thru 1 args of 13:int[]:arrinit (%12)
  looping thru 0 args of 12:int:const 0
checking: 23:bool:eq (%19, %22)
  looping thru 2 args of 23:bool:eq (%19, %22)
  looping thru 1 args of 19:int[]:call While_Valid_41:zeroOut(%18)
  looping thru 2 args of 18:int[]:arrinit (%16, %17)
  looping thru 0 args of 16:int:const 1
  looping thru 0 args of 17:int:const 2
  looping thru 2 args of 22:int[]:arrinit (%20, %21)
  looping thru 0 args of 20:int:const 0
  looping thru 0 args of 21:int:const 0
checking: 34:bool:eq (%29, %33)
  looping thru 2 args of 34:bool:eq (%29, %33)
  looping thru 1 args of 29:int[]:call While_Valid_41:zeroOut(%28)
  looping thru 3 args of 28:int[]:arrinit (%25, %26, %27)
  looping thru 0 args of 25:int:const 1
  looping thru 0 args of 26:int:const 2
  looping thru 0 args of 27:int:const 3
  looping thru 3 args of 33:int[]:arrinit (%30, %31, %32)
  looping thru 0 args of 30:int:const 0
  looping thru 0 args of 31:int:const 0
  looping thru 0 args of 32:int:const 0
checking: 47:bool:eq (%41, %46)
  looping thru 2 args of 47:bool:eq (%41, %46)
  looping thru 1 args of 41:int[]:call While_Valid_41:zeroOut(%40)
  looping thru 4 args of 40:int[]:arrinit (%36, %37, %38, %39)
  looping thru 0 args of 36:int:const 1
  looping thru 0 args of 37:int:const 2
  looping thru 0 args of 38:int:const 3
  looping thru 0 args of 39:int:const 4
  looping thru 4 args of 46:int[]:arrinit (%42, %43, %44, %45)
  looping thru 0 args of 42:int:const 0
  looping thru 0 args of 43:int:const 0
  looping thru 0 args of 44:int:const 0
  looping thru 0 args of 45:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_42.whiley =====
MUTATED INPUT xs : int[]
checking: 63:bool:lt (%60, %62)
  looping thru 2 args of 63:bool:lt (%60, %62)
  looping thru 1 args of 60:int:read (%25)
  looping thru 1 args of 25:int:decl i = 24
  looping thru 0 args of 24:int:const 0
  looping thru 1 args of 62:int:arrlen (%61)
  looping thru 1 args of 61:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
assign 1 := 1
checking: 73:int:arridx (%71, %72)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 73:int:arridx (%71, %72)
  looping thru 1 args of 71:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 72:int:read (%25)
  looping thru 1 args of 25:int:decl i = 24
  looping thru 0 args of 24:int:const 0
checking: 76:int:arridx (%74, %75)
conjecture: 0 <= toInt(j) && toInt(j) < arraylen(zs)
  looping thru 2 args of 76:int:arridx (%74, %75)
  looping thru 1 args of 74:int[]:read (%27)
  looping thru 1 args of 27:int[]:decl zs = 26
  looping thru 1 args of 26:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 75:int:read (%70)
  looping thru 1 args of 70:int:decl j = 69
  looping thru 2 args of 69:int:sub (%65, %68)
  looping thru 1 args of 65:int:arrlen (%64)
  looping thru 1 args of 64:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 2 args of 68:int:add (%66, %67)
  looping thru 1 args of 66:int:read (%25)
  looping thru 1 args of 25:int:decl i = 24
  looping thru 0 args of 24:int:const 0
  looping thru 0 args of 67:int:const 1
assign 1 := 1
checking: 78:int:read (%25)
  looping thru 1 args of 78:int:read (%25)
  looping thru 1 args of 25:int:decl i = 24
  looping thru 0 args of 24:int:const 0
checking: 81:int:add (%79, %80)
  looping thru 2 args of 81:int:add (%79, %80)
  looping thru 1 args of 79:int:read (%25)
  looping thru 1 args of 25:int:decl i = 24
  looping thru 0 args of 24:int:const 0
  looping thru 0 args of 80:int:const 1
checking: 85:int[]:read (%0)
  looping thru 1 args of 85:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
checking: 7:bool:eq (%3, %6)
  looping thru 2 args of 7:bool:eq (%3, %6)
  looping thru 1 args of 3:int[]:call While_Valid_42:reverse(%2)
  looping thru 2 args of 2:int[]:arrgen (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
  looping thru 2 args of 6:int[]:arrgen (%4, %5)
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 5:int:const 0
checking: 14:bool:eq (%11, %13)
  looping thru 2 args of 14:bool:eq (%11, %13)
  looping thru 1 args of 11:int[]:call While_Valid_42:reverse(%10)
  looping thru 1 args of 10:int[]:arrinit (%9)
  looping thru 0 args of 9:int:const 1
  looping thru 1 args of 13:int[]:arrinit (%12)
  looping thru 0 args of 12:int:const 1
checking: 25:bool:eq (%20, %24)
  looping thru 2 args of 25:bool:eq (%20, %24)
  looping thru 1 args of 20:int[]:call While_Valid_42:reverse(%19)
  looping thru 3 args of 19:int[]:arrinit (%16, %17, %18)
  looping thru 0 args of 16:int:const 1
  looping thru 0 args of 17:int:const 2
  looping thru 0 args of 18:int:const 3
  looping thru 3 args of 24:int[]:arrinit (%21, %22, %23)
  looping thru 0 args of 21:int:const 3
  looping thru 0 args of 22:int:const 2
  looping thru 0 args of 23:int:const 1
checking: 42:bool:eq (%34, %41)
  looping thru 2 args of 42:bool:eq (%34, %41)
  looping thru 1 args of 34:int[]:call While_Valid_42:reverse(%33)
  looping thru 6 args of 33:int[]:arrinit (%27, %28, %29, %30, %31, %32)
  looping thru 0 args of 27:int:const 1
  looping thru 0 args of 28:int:const 2
  looping thru 0 args of 29:int:const 3
  looping thru 0 args of 30:int:const 4
  looping thru 0 args of 31:int:const 5
  looping thru 0 args of 32:int:const 6
  looping thru 6 args of 41:int[]:arrinit (%35, %36, %37, %38, %39, %40)
  looping thru 0 args of 35:int:const 6
  looping thru 0 args of 36:int:const 5
  looping thru 0 args of 37:int:const 4
  looping thru 0 args of 38:int:const 3
  looping thru 0 args of 39:int:const 2
  looping thru 0 args of 40:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_42.bpl(30,26): Error: more than one declaration of variable name: j
1 name resolution errors detected in While_Valid_42.bpl
===== While_Valid_43.whiley =====
MUTATED INPUT items : int[]
checking: 40:bool:lt (%37, %39)
  looping thru 2 args of 40:bool:lt (%37, %39)
  looping thru 1 args of 37:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
  looping thru 1 args of 39:int:arrlen (%38)
  looping thru 1 args of 38:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
assign 1 := 1
checking: 43:int:arridx (%41, %42)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(items)
  looping thru 2 args of 43:int:arridx (%41, %42)
  looping thru 1 args of 41:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 1 args of 42:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
checking: 48:int:add (%46, %47)
  looping thru 2 args of 48:int:add (%46, %47)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(oitems)
  looping thru 2 args of 46:int:arridx (%44, %45)
  looping thru 1 args of 44:int[]:read (%9)
  looping thru 1 args of 9:int[]:decl oitems = 8
  looping thru 1 args of 8:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 1 args of 45:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
  looping thru 1 args of 47:int:read (%1)
  looping thru 0 args of 1:int:decl n
assign 1 := 1
checking: 50:int:read (%7)
  looping thru 1 args of 50:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
checking: 53:int:add (%51, %52)
  looping thru 2 args of 53:int:add (%51, %52)
  looping thru 1 args of 51:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 52:int:const 1
checking: 57:int[]:read (%0)
  looping thru 1 args of 57:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
checking: 14:bool:eq (%8, %13)
  looping thru 2 args of 14:bool:eq (%8, %13)
  looping thru 2 args of 8:int[]:call While_Valid_43:add(%6, %7)
  looping thru 1 args of 6:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl ls = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 7:int:const 1
  looping thru 4 args of 13:int[]:arrinit (%9, %10, %11, %12)
  looping thru 0 args of 9:int:const 2
  looping thru 0 args of 10:int:const 3
  looping thru 0 args of 11:int:const 4
  looping thru 0 args of 12:int:const 5
checking: 24:bool:eq (%18, %23)
  looping thru 2 args of 24:bool:eq (%18, %23)
  looping thru 2 args of 18:int[]:call While_Valid_43:add(%16, %17)
  looping thru 1 args of 16:int[]:read (%5)
  looping thru 1 args of 5:int[]:decl ls = 4
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 17:int:const 11
  looping thru 4 args of 23:int[]:arrinit (%19, %20, %21, %22)
  looping thru 0 args of 19:int:const 12
  looping thru 0 args of 20:int:const 13
  looping thru 0 args of 21:int:const 14
  looping thru 0 args of 22:int:const 15
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_44.whiley =====
checking: 29:bool:gt (%27, %28)
  looping thru 2 args of 29:bool:gt (%27, %28)
  looping thru 1 args of 27:int:read (%9)
  looping thru 1 args of 9:int:decl i = 8
  looping thru 1 args of 8:int:arrlen (%7)
  looping thru 1 args of 7:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 0 args of 28:int:const 0
assign 1 := 1
checking: 37:int:read (%9)
  looping thru 1 args of 37:int:read (%9)
  looping thru 1 args of 9:int:decl i = 8
  looping thru 1 args of 8:int:arrlen (%7)
  looping thru 1 args of 7:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
checking: 40:int:sub (%38, %39)
  looping thru 2 args of 40:int:sub (%38, %39)
  looping thru 1 args of 38:int:read (%9)
  looping thru 1 args of 9:int:decl i = 8
  looping thru 1 args of 8:int:arrlen (%7)
  looping thru 1 args of 7:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 0 args of 39:int:const 1
assign 1 := 1
checking: 44:int:arridx (%42, %43)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(r)
  looping thru 2 args of 44:int:arridx (%42, %43)
  looping thru 1 args of 42:int[]:read (%14)
  looping thru 1 args of 14:int[]:decl r = 13
  looping thru 2 args of 13:int[]:arrgen (%10, %12)
  looping thru 0 args of 10:int:const 0
  looping thru 1 args of 12:int:arrlen (%11)
  looping thru 1 args of 11:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 1 args of 43:int:read (%9)
  looping thru 1 args of 9:int:decl i = 8
  looping thru 1 args of 8:int:arrlen (%7)
  looping thru 1 args of 7:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
checking: 45:int:read (%36)
  looping thru 1 args of 45:int:read (%36)
  looping thru 1 args of 36:int:decl item = 35
conjecture: 0 <= arraylen(ls) - toInt(i) && arraylen(ls) - toInt(i) < arraylen(ls)
  looping thru 2 args of 35:int:arridx (%30, %34)
  looping thru 1 args of 30:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 2 args of 34:int:sub (%32, %33)
  looping thru 1 args of 32:int:arrlen (%31)
  looping thru 1 args of 31:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 1 args of 33:int:read (%9)
  looping thru 1 args of 9:int:decl i = 8
  looping thru 1 args of 8:int:arrlen (%7)
  looping thru 1 args of 7:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
checking: 49:int[]:read (%14)
  looping thru 1 args of 49:int[]:read (%14)
  looping thru 1 args of 14:int[]:decl r = 13
  looping thru 2 args of 13:int[]:arrgen (%10, %12)
  looping thru 0 args of 10:int:const 0
  looping thru 1 args of 12:int:arrlen (%11)
  looping thru 1 args of 11:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
checking: 7:bool:eq (%3, %6)
  looping thru 2 args of 7:bool:eq (%3, %6)
  looping thru 1 args of 3:int[]:call While_Valid_44:reverse(%2)
  looping thru 2 args of 2:int[]:arrgen (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
  looping thru 2 args of 6:int[]:arrgen (%4, %5)
  looping thru 0 args of 4:int:const 0
  looping thru 0 args of 5:int:const 0
checking: 14:bool:eq (%11, %13)
  looping thru 2 args of 14:bool:eq (%11, %13)
  looping thru 1 args of 11:int[]:call While_Valid_44:reverse(%10)
  looping thru 1 args of 10:int[]:arrinit (%9)
  looping thru 0 args of 9:int:const 1
  looping thru 1 args of 13:int[]:arrinit (%12)
  looping thru 0 args of 12:int:const 1
checking: 23:bool:eq (%19, %22)
  looping thru 2 args of 23:bool:eq (%19, %22)
  looping thru 1 args of 19:int[]:call While_Valid_44:reverse(%18)
  looping thru 2 args of 18:int[]:arrinit (%16, %17)
  looping thru 0 args of 16:int:const 1
  looping thru 0 args of 17:int:const 2
  looping thru 2 args of 22:int[]:arrinit (%20, %21)
  looping thru 0 args of 20:int:const 2
  looping thru 0 args of 21:int:const 1
checking: 34:bool:eq (%29, %33)
  looping thru 2 args of 34:bool:eq (%29, %33)
  looping thru 1 args of 29:int[]:call While_Valid_44:reverse(%28)
  looping thru 3 args of 28:int[]:arrinit (%25, %26, %27)
  looping thru 0 args of 25:int:const 1
  looping thru 0 args of 26:int:const 2
  looping thru 0 args of 27:int:const 3
  looping thru 3 args of 33:int[]:arrinit (%30, %31, %32)
  looping thru 0 args of 30:int:const 3
  looping thru 0 args of 31:int:const 2
  looping thru 0 args of 32:int:const 1
checking: 47:bool:eq (%41, %46)
  looping thru 2 args of 47:bool:eq (%41, %46)
  looping thru 1 args of 41:int[]:call While_Valid_44:reverse(%40)
  looping thru 4 args of 40:int[]:arrinit (%36, %37, %38, %39)
  looping thru 0 args of 36:int:const 1
  looping thru 0 args of 37:int:const 2
  looping thru 0 args of 38:int:const 3
  looping thru 0 args of 39:int:const 4
  looping thru 4 args of 46:int[]:arrinit (%42, %43, %44, %45)
  looping thru 0 args of 42:int:const 4
  looping thru 0 args of 43:int:const 3
  looping thru 0 args of 44:int:const 2
  looping thru 0 args of 45:int:const 1
checking: 62:bool:eq (%55, %61)
  looping thru 2 args of 62:bool:eq (%55, %61)
  looping thru 1 args of 55:int[]:call While_Valid_44:reverse(%54)
  looping thru 5 args of 54:int[]:arrinit (%49, %50, %51, %52, %53)
  looping thru 0 args of 49:int:const 1
  looping thru 0 args of 50:int:const 2
  looping thru 0 args of 51:int:const 3
  looping thru 0 args of 52:int:const 4
  looping thru 0 args of 53:int:const 5
  looping thru 5 args of 61:int[]:arrinit (%56, %57, %58, %59, %60)
  looping thru 0 args of 56:int:const 5
  looping thru 0 args of 57:int:const 4
  looping thru 0 args of 58:int:const 3
  looping thru 0 args of 59:int:const 2
  looping thru 0 args of 60:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_44.bpl(30,9): Error BP5001: This assertion might not hold.
Execution trace:
    While_Valid_44.bpl(22,7): anon0
    While_Valid_44.bpl(24,5): anon3_LoopHead
    While_Valid_44.bpl(27,14): anon3_LoopBody

Boogie program verifier finished with 1 verified, 1 error
===== While_Valid_45.whiley =====
checking: 32:bool:lt (%30, %31)
  looping thru 2 args of 32:bool:lt (%30, %31)
  looping thru 1 args of 30:int:read (%6)
  looping thru 1 args of 6:int:decl i = 5
  looping thru 0 args of 5:int:const 0
  looping thru 1 args of 31:int:read (%0)
  looping thru 0 args of 0:int:decl n
assign 1 := 1
checking: 35:int:arridx (%33, %34)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(rs)
  looping thru 2 args of 35:int:arridx (%33, %34)
  looping thru 1 args of 33:int[]:read (%10)
  looping thru 1 args of 10:int[]:decl rs = 9
  looping thru 2 args of 9:int[]:arrgen (%7, %8)
  looping thru 0 args of 7:int:const 0
  looping thru 1 args of 8:int:read (%0)
  looping thru 0 args of 0:int:decl n
  looping thru 1 args of 34:int:read (%6)
  looping thru 1 args of 6:int:decl i = 5
  looping thru 0 args of 5:int:const 0
checking: 36:int:read (%6)
  looping thru 1 args of 36:int:read (%6)
  looping thru 1 args of 6:int:decl i = 5
  looping thru 0 args of 5:int:const 0
assign 1 := 1
checking: 38:int:read (%6)
  looping thru 1 args of 38:int:read (%6)
  looping thru 1 args of 6:int:decl i = 5
  looping thru 0 args of 5:int:const 0
checking: 41:int:add (%39, %40)
  looping thru 2 args of 41:int:add (%39, %40)
  looping thru 1 args of 39:int:read (%6)
  looping thru 1 args of 6:int:decl i = 5
  looping thru 0 args of 5:int:const 0
  looping thru 0 args of 40:int:const 1
checking: 45:int[]:read (%10)
  looping thru 1 args of 45:int[]:read (%10)
  looping thru 1 args of 10:int[]:decl rs = 9
  looping thru 2 args of 9:int[]:arrgen (%7, %8)
  looping thru 0 args of 7:int:const 0
  looping thru 1 args of 8:int:read (%0)
  looping thru 0 args of 0:int:decl n
checking: 5:bool:eq (%1, %4)
  looping thru 2 args of 5:bool:eq (%1, %4)
  looping thru 1 args of 1:int[]:call While_Valid_45:buildNatList(%0)
  looping thru 0 args of 0:int:const 0
  looping thru 2 args of 4:int[]:arrgen (%2, %3)
  looping thru 0 args of 2:int:const 0
  looping thru 0 args of 3:int:const 0
checking: 11:bool:eq (%8, %10)
  looping thru 2 args of 11:bool:eq (%8, %10)
  looping thru 1 args of 8:int[]:call While_Valid_45:buildNatList(%7)
  looping thru 0 args of 7:int:const 1
  looping thru 1 args of 10:int[]:arrinit (%9)
  looping thru 0 args of 9:int:const 0
checking: 18:bool:eq (%14, %17)
  looping thru 2 args of 18:bool:eq (%14, %17)
  looping thru 1 args of 14:int[]:call While_Valid_45:buildNatList(%13)
  looping thru 0 args of 13:int:const 2
  looping thru 2 args of 17:int[]:arrinit (%15, %16)
  looping thru 0 args of 15:int:const 0
  looping thru 0 args of 16:int:const 1
checking: 26:bool:eq (%21, %25)
  looping thru 2 args of 26:bool:eq (%21, %25)
  looping thru 1 args of 21:int[]:call While_Valid_45:buildNatList(%20)
  looping thru 0 args of 20:int:const 3
  looping thru 3 args of 25:int[]:arrinit (%22, %23, %24)
  looping thru 0 args of 22:int:const 0
  looping thru 0 args of 23:int:const 1
  looping thru 0 args of 24:int:const 2
checking: 35:bool:eq (%29, %34)
  looping thru 2 args of 35:bool:eq (%29, %34)
  looping thru 1 args of 29:int[]:call While_Valid_45:buildNatList(%28)
  looping thru 0 args of 28:int:const 4
  looping thru 4 args of 34:int[]:arrinit (%30, %31, %32, %33)
  looping thru 0 args of 30:int:const 0
  looping thru 0 args of 31:int:const 1
  looping thru 0 args of 32:int:const 2
  looping thru 0 args of 33:int:const 3
checking: 50:bool:eq (%38, %49)
  looping thru 2 args of 50:bool:eq (%38, %49)
  looping thru 1 args of 38:int[]:call While_Valid_45:buildNatList(%37)
  looping thru 0 args of 37:int:const 10
  looping thru 10 args of 49:int[]:arrinit (%39, %40, %41, %42, %43, %44, %45, %46, %47, %48)
  looping thru 0 args of 39:int:const 0
  looping thru 0 args of 40:int:const 1
  looping thru 0 args of 41:int:const 2
  looping thru 0 args of 42:int:const 3
  looping thru 0 args of 43:int:const 4
  looping thru 0 args of 44:int:const 5
  looping thru 0 args of 45:int:const 6
  looping thru 0 args of 46:int:const 7
  looping thru 0 args of 47:int:const 8
  looping thru 0 args of 48:int:const 9
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_46.whiley =====
checking: 27:bool:lt (%24, %26)
  looping thru 2 args of 27:bool:lt (%24, %26)
  looping thru 1 args of 24:int:read (%14)
  looping thru 1 args of 14:int:decl i = 13
  looping thru 0 args of 13:int:const 0
  looping thru 1 args of 26:int:arrlen (%25)
  looping thru 1 args of 25:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
checking: 32:bool:eq (%30, %31)
  looping thru 2 args of 32:bool:eq (%30, %31)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(items)
  looping thru 2 args of 30:int:arridx (%28, %29)
  looping thru 1 args of 28:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl items
  looping thru 1 args of 29:int:read (%14)
  looping thru 1 args of 14:int:decl i = 13
  looping thru 0 args of 13:int:const 0
  looping thru 1 args of 31:int:read (%1)
  looping thru 0 args of 1:int:decl item
assign 1 := 1
checking: 36:int:read (%14)
  looping thru 1 args of 36:int:read (%14)
  looping thru 1 args of 14:int:decl i = 13
  looping thru 0 args of 13:int:const 0
checking: 39:int:add (%37, %38)
  looping thru 2 args of 39:int:add (%37, %38)
  looping thru 1 args of 37:int:read (%14)
  looping thru 1 args of 14:int:decl i = 13
  looping thru 0 args of 13:int:const 0
  looping thru 0 args of 38:int:const 1
checking: 43:int:read (%14)
  looping thru 1 args of 43:int:read (%14)
  looping thru 1 args of 14:int:decl i = 13
  looping thru 0 args of 13:int:const 0
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 2 args of 6:int:call While_Valid_46:indexOf(%4, %5)
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 5:int:const 0
  looping thru 0 args of 7:int:const 4
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 2 args of 16:int:call While_Valid_46:indexOf(%14, %15)
  looping thru 4 args of 14:int[]:arrinit (%10, %11, %12, %13)
  looping thru 0 args of 10:int:const 1
  looping thru 0 args of 11:int:const 2
  looping thru 0 args of 12:int:const 3
  looping thru 0 args of 13:int:const 4
  looping thru 0 args of 15:int:const 1
  looping thru 0 args of 17:int:const 0
checking: 28:bool:eq (%26, %27)
  looping thru 2 args of 28:bool:eq (%26, %27)
  looping thru 2 args of 26:int:call While_Valid_46:indexOf(%24, %25)
  looping thru 4 args of 24:int[]:arrinit (%20, %21, %22, %23)
  looping thru 0 args of 20:int:const 1
  looping thru 0 args of 21:int:const 2
  looping thru 0 args of 22:int:const 3
  looping thru 0 args of 23:int:const 4
  looping thru 0 args of 25:int:const 2
  looping thru 0 args of 27:int:const 1
checking: 38:bool:eq (%36, %37)
  looping thru 2 args of 38:bool:eq (%36, %37)
  looping thru 2 args of 36:int:call While_Valid_46:indexOf(%34, %35)
  looping thru 4 args of 34:int[]:arrinit (%30, %31, %32, %33)
  looping thru 0 args of 30:int:const 1
  looping thru 0 args of 31:int:const 2
  looping thru 0 args of 32:int:const 3
  looping thru 0 args of 33:int:const 4
  looping thru 0 args of 35:int:const 3
  looping thru 0 args of 37:int:const 2
checking: 48:bool:eq (%46, %47)
  looping thru 2 args of 48:bool:eq (%46, %47)
  looping thru 2 args of 46:int:call While_Valid_46:indexOf(%44, %45)
  looping thru 4 args of 44:int[]:arrinit (%40, %41, %42, %43)
  looping thru 0 args of 40:int:const 1
  looping thru 0 args of 41:int:const 2
  looping thru 0 args of 42:int:const 3
  looping thru 0 args of 43:int:const 4
  looping thru 0 args of 45:int:const 4
  looping thru 0 args of 47:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_47.whiley =====
checking: 24:bool:lt (%21, %23)
  looping thru 2 args of 24:bool:lt (%21, %23)
  looping thru 1 args of 21:int:read (%16)
  looping thru 1 args of 16:While_Valid_47:nat:decl i = 15
  looping thru 0 args of 15:int:const 0
  looping thru 1 args of 23:int:arrlen (%22)
  looping thru 1 args of 22:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
assign 1 := 1
checking: 25:int:read (%18)
  looping thru 1 args of 25:int:read (%18)
  looping thru 1 args of 18:While_Valid_47:nat:decl x = 17
  looping thru 0 args of 17:int:const 0
checking: 30:int:add (%26, %29)
  looping thru 2 args of 30:int:add (%26, %29)
  looping thru 1 args of 26:int:read (%18)
  looping thru 1 args of 18:While_Valid_47:nat:decl x = 17
  looping thru 0 args of 17:int:const 0
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 29:int:arridx (%27, %28)
  looping thru 1 args of 27:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 28:int:read (%16)
  looping thru 1 args of 16:While_Valid_47:nat:decl i = 15
  looping thru 0 args of 15:int:const 0
assign 1 := 1
checking: 32:int:read (%16)
  looping thru 1 args of 32:int:read (%16)
  looping thru 1 args of 16:While_Valid_47:nat:decl i = 15
  looping thru 0 args of 15:int:const 0
checking: 35:int:add (%33, %34)
  looping thru 2 args of 35:int:add (%33, %34)
  looping thru 1 args of 33:int:read (%16)
  looping thru 1 args of 16:While_Valid_47:nat:decl i = 15
  looping thru 0 args of 15:int:const 0
  looping thru 0 args of 34:int:const 1
checking: 39:int:read (%18)
  looping thru 1 args of 39:int:read (%18)
  looping thru 1 args of 18:While_Valid_47:nat:decl x = 17
  looping thru 0 args of 17:int:const 0
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:call While_Valid_47:sum(%2)
  looping thru 2 args of 2:int[]:arrgen (%0, %1)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 4:int:const 0
checking: 11:bool:eq (%9, %10)
  looping thru 2 args of 11:bool:eq (%9, %10)
  looping thru 1 args of 9:int:call While_Valid_47:sum(%8)
  looping thru 1 args of 8:int[]:arrinit (%7)
  looping thru 0 args of 7:int:const 1
  looping thru 0 args of 10:int:const 1
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 1 args of 16:int:call While_Valid_47:sum(%15)
  looping thru 2 args of 15:int[]:arrinit (%13, %14)
  looping thru 0 args of 13:int:const 1
  looping thru 0 args of 14:int:const 2
  looping thru 0 args of 17:int:const 3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_48.whiley =====
checking: 8:bool:lt (%6, %7)
  looping thru 2 args of 8:bool:lt (%6, %7)
  looping thru 1 args of 6:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 7:int:const 5
assign 1 := 1
checking: 9:int:read (%1)
  looping thru 1 args of 9:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
checking: 12:int:add (%10, %11)
  looping thru 2 args of 12:int:add (%10, %11)
  looping thru 1 args of 10:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 11:int:const 1
checking: 16:bool:eq (%14, %15)
  looping thru 2 args of 16:bool:eq (%14, %15)
  looping thru 1 args of 14:int:read (%1)
  looping thru 1 args of 1:int:decl i = 0
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 15:int:const 3
wyboogie.NotImplementedYet: continue in 17::cont
	at wyboogie.Wyil2Boogie.writeContinue(Wyil2Boogie.java:780)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:612)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeIf(Wyil2Boogie.java:827)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:626)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeWhile(Wyil2Boogie.java:881)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:641)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== While_Valid_49.whiley =====
checking: 28:bool:lt (%26, %27)
  looping thru 2 args of 28:bool:lt (%26, %27)
  looping thru 1 args of 26:int:read (%15)
  looping thru 1 args of 15:int:decl i = 14
  looping thru 0 args of 14:int:const 0
  looping thru 1 args of 27:int:read (%0)
  looping thru 0 args of 0:int:decl n
checking: 31:bool:eq (%29, %30)
  looping thru 2 args of 31:bool:eq (%29, %30)
  looping thru 1 args of 29:int:read (%15)
  looping thru 1 args of 15:int:decl i = 14
  looping thru 0 args of 14:int:const 0
  looping thru 0 args of 30:int:const 3
assign 1 := 1
checking: 32:int:read (%15)
  looping thru 1 args of 32:int:read (%15)
  looping thru 1 args of 15:int:decl i = 14
  looping thru 0 args of 14:int:const 0
checking: 35:int:add (%33, %34)
  looping thru 2 args of 35:int:add (%33, %34)
  looping thru 1 args of 33:int:read (%15)
  looping thru 1 args of 15:int:decl i = 14
  looping thru 0 args of 14:int:const 0
  looping thru 0 args of 34:int:const 2
wyboogie.NotImplementedYet: continue in 37::cont
	at wyboogie.Wyil2Boogie.writeContinue(Wyil2Boogie.java:780)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:612)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeIf(Wyil2Boogie.java:827)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:626)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeWhile(Wyil2Boogie.java:881)
	at wyboogie.Wyil2Boogie.writeStatement(Wyil2Boogie.java:641)
	at wyboogie.Wyil2Boogie.writeBlock(Wyil2Boogie.java:581)
	at wyboogie.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:322)
	at wyboogie.Wyil2Boogie.apply(Wyil2Boogie.java:195)
	at wyboogie.Wyil2Boogie.main(Wyil2Boogie.java:1832)
===== While_Valid_5.whiley =====
checking: 32:bool:lt (%29, %31)
  looping thru 2 args of 32:bool:lt (%29, %31)
  looping thru 1 args of 29:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
  looping thru 1 args of 31:int:arrlen (%30)
  looping thru 1 args of 30:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
checking: 37:bool:gteq (%35, %36)
  looping thru 2 args of 37:bool:gteq (%35, %36)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(ls)
  looping thru 2 args of 35:int:arridx (%33, %34)
  looping thru 1 args of 33:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 1 args of 34:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
  looping thru 0 args of 36:int:const 0
assign 1 := 1
checking: 40:int:arridx (%38, %39)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(rs)
  looping thru 2 args of 40:int:arridx (%38, %39)
  looping thru 1 args of 38:int[]:read (%8)
  looping thru 1 args of 8:int[]:decl rs = 7
  looping thru 2 args of 7:int[]:arrgen (%4, %6)
  looping thru 0 args of 4:int:const 0
  looping thru 1 args of 6:int:arrlen (%5)
  looping thru 1 args of 5:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 1 args of 39:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
checking: 43:int:arridx (%41, %42)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(ls)
  looping thru 2 args of 43:int:arridx (%41, %42)
  looping thru 1 args of 41:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 1 args of 42:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
assign 1 := 1
checking: 47:int:read (%3)
  looping thru 1 args of 47:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
checking: 50:int:add (%48, %49)
  looping thru 2 args of 50:int:add (%48, %49)
  looping thru 1 args of 48:int:read (%3)
  looping thru 1 args of 3:int:decl i = 2
  looping thru 0 args of 2:int:const 0
  looping thru 0 args of 49:int:const 1
checking: 54:int[]:read (%8)
  looping thru 1 args of 54:int[]:read (%8)
  looping thru 1 args of 8:int[]:decl rs = 7
  looping thru 2 args of 7:int[]:arrgen (%4, %6)
  looping thru 0 args of 4:int:const 0
  looping thru 1 args of 6:int:arrlen (%5)
  looping thru 1 args of 5:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
checking: 26:bool:eq (%15, %25)
  looping thru 2 args of 26:bool:eq (%15, %25)
  looping thru 1 args of 15:While_Valid_5:nat[]:read (%14)
  looping thru 1 args of 14:int[]:decl rs = 13
  looping thru 1 args of 13:While_Valid_5:nat[]:call While_Valid_5:extract(%12)
  looping thru 9 args of 12:int[]:arrinit (%1, %3, %4, %5, %7, %8, %9, %10, %11)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 2
  looping thru 1 args of 3:int:neg (%2)
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 2
  looping thru 1 args of 7:int:neg (%6)
  looping thru 0 args of 6:int:const 23
  looping thru 0 args of 8:int:const 3
  looping thru 0 args of 9:int:const 2345
  looping thru 0 args of 10:int:const 4
  looping thru 0 args of 11:int:const 5
  looping thru 9 args of 25:int[]:arrinit (%16, %17, %18, %19, %20, %21, %22, %23, %24)
  looping thru 0 args of 16:int:const 0
  looping thru 0 args of 17:int:const 0
  looping thru 0 args of 18:int:const 1
  looping thru 0 args of 19:int:const 2
  looping thru 0 args of 20:int:const 0
  looping thru 0 args of 21:int:const 3
  looping thru 0 args of 22:int:const 2345
  looping thru 0 args of 23:int:const 4
  looping thru 0 args of 24:int:const 5
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_5.bpl(40,5): Error BP5003: A postcondition might not hold on this return path.
While_Valid_5.bpl(19,5): Related location: This is the postcondition that might not hold.
Execution trace:
    While_Valid_5.bpl(24,7): anon0
    While_Valid_5.bpl(26,5): anon5_LoopHead
    While_Valid_5.bpl(26,5): anon5_LoopDone

Boogie program verifier finished with 1 verified, 1 error
===== While_Valid_50.whiley =====
checking: 24:bool:lt (%22, %23)
  looping thru 2 args of 24:bool:lt (%22, %23)
  looping thru 1 args of 22:int:read (%13)
  looping thru 1 args of 13:int:decl i = 12
  looping thru 0 args of 12:int:const 0
  looping thru 1 args of 23:int:read (%0)
  looping thru 0 args of 0:int:decl n
checking: 27:bool:eq (%25, %26)
  looping thru 2 args of 27:bool:eq (%25, %26)
  looping thru 1 args of 25:int:read (%13)
  looping thru 1 args of 13:int:decl i = 12
  looping thru 0 args of 12:int:const 0
  looping thru 0 args of 26:int:const 2
assign 1 := 1
checking: 31:int:read (%13)
  looping thru 1 args of 31:int:read (%13)
  looping thru 1 args of 13:int:decl i = 12
  looping thru 0 args of 12:int:const 0
checking: 34:int:add (%32, %33)
  looping thru 2 args of 34:int:add (%32, %33)
  looping thru 1 args of 32:int:read (%13)
  looping thru 1 args of 13:int:decl i = 12
  looping thru 0 args of 12:int:const 0
  looping thru 0 args of 33:int:const 1
checking: 38:int:read (%13)
  looping thru 1 args of 38:int:read (%13)
  looping thru 1 args of 13:int:decl i = 12
  looping thru 0 args of 12:int:const 0
checking: 3:bool:eq (%1, %2)
  looping thru 2 args of 3:bool:eq (%1, %2)
  looping thru 1 args of 1:int:call While_Valid_50:count(%0)
  looping thru 0 args of 0:int:const 0
  looping thru 0 args of 2:int:const 0
checking: 8:bool:eq (%6, %7)
  looping thru 2 args of 8:bool:eq (%6, %7)
  looping thru 1 args of 6:int:call While_Valid_50:count(%5)
  looping thru 0 args of 5:int:const 1
  looping thru 0 args of 7:int:const 1
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:int:call While_Valid_50:count(%10)
  looping thru 0 args of 10:int:const 2
  looping thru 0 args of 12:int:const 2
checking: 18:bool:eq (%16, %17)
  looping thru 2 args of 18:bool:eq (%16, %17)
  looping thru 1 args of 16:int:call While_Valid_50:count(%15)
  looping thru 0 args of 15:int:const 3
  looping thru 0 args of 17:int:const 2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_51.whiley =====
checking: 33:bool:lt (%30, %32)
  looping thru 2 args of 33:bool:lt (%30, %32)
  looping thru 1 args of 30:int:read (%16)
  looping thru 1 args of 16:int:decl i = 15
  looping thru 0 args of 15:int:const 0
  looping thru 1 args of 32:int:arrlen (%31)
  looping thru 1 args of 31:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
checking: 38:bool:eq (%36, %37)
  looping thru 2 args of 38:bool:eq (%36, %37)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 36:int:arridx (%34, %35)
  looping thru 1 args of 34:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 35:int:read (%16)
  looping thru 1 args of 16:int:decl i = 15
  looping thru 0 args of 15:int:const 0
  looping thru 0 args of 37:int:const 0
checking: 39:bool:const false
  looping thru 0 args of 39:bool:const false
assign 1 := 1
checking: 43:int:read (%16)
  looping thru 1 args of 43:int:read (%16)
  looping thru 1 args of 16:int:decl i = 15
  looping thru 0 args of 15:int:const 0
checking: 46:int:add (%44, %45)
  looping thru 2 args of 46:int:add (%44, %45)
  looping thru 1 args of 44:int:read (%16)
  looping thru 1 args of 16:int:decl i = 15
  looping thru 0 args of 15:int:const 0
  looping thru 0 args of 45:int:const 1
checking: 50:bool:const true
  looping thru 0 args of 50:bool:const true
checking: 5:bool:call While_Valid_51:f(%4)
  looping thru 1 args of 5:bool:call While_Valid_51:f(%4)
  looping thru 4 args of 4:int[]:arrinit (%0, %1, %2, %3)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
checking: 13:bool:not (%12)
  looping thru 1 args of 13:bool:not (%12)
  looping thru 1 args of 12:bool:call While_Valid_51:f(%11)
  looping thru 4 args of 11:int[]:arrinit (%7, %8, %9, %10)
  looping thru 0 args of 7:int:const 0
  looping thru 0 args of 8:int:const 2
  looping thru 0 args of 9:int:const 4
  looping thru 0 args of 10:int:const 3
checking: 17:bool:call While_Valid_51:f(%16)
  looping thru 1 args of 17:bool:call While_Valid_51:f(%16)
  looping thru 1 args of 16:int[]:arrinit (%15)
  looping thru 0 args of 15:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_52.whiley =====
checking: 41:bool:lt (%38, %40)
  looping thru 2 args of 41:bool:lt (%38, %40)
  looping thru 1 args of 38:int:read (%26)
  looping thru 1 args of 26:int:decl i = 25
  looping thru 0 args of 25:int:const 0
  looping thru 1 args of 40:int:arrlen (%39)
  looping thru 1 args of 39:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
assign 1 := 1
checking: 42:int:read (%28)
  looping thru 1 args of 42:int:read (%28)
  looping thru 1 args of 28:int:decl sum = 27
  looping thru 0 args of 27:int:const 0
checking: 47:int:add (%43, %46)
  looping thru 2 args of 47:int:add (%43, %46)
  looping thru 1 args of 43:int:read (%28)
  looping thru 1 args of 28:int:decl sum = 27
  looping thru 0 args of 27:int:const 0
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(xs)
  looping thru 2 args of 46:int:arridx (%44, %45)
  looping thru 1 args of 44:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl xs
  looping thru 1 args of 45:int:read (%26)
  looping thru 1 args of 26:int:decl i = 25
  looping thru 0 args of 25:int:const 0
assign 1 := 1
checking: 49:int:read (%26)
  looping thru 1 args of 49:int:read (%26)
  looping thru 1 args of 26:int:decl i = 25
  looping thru 0 args of 25:int:const 0
checking: 52:int:add (%50, %51)
  looping thru 2 args of 52:int:add (%50, %51)
  looping thru 1 args of 50:int:read (%26)
  looping thru 1 args of 26:int:decl i = 25
  looping thru 0 args of 25:int:const 0
  looping thru 0 args of 51:int:const 1
checking: 56:int:read (%28)
  looping thru 1 args of 56:int:read (%28)
  looping thru 1 args of 28:int:decl sum = 27
  looping thru 0 args of 27:int:const 0
checking: 5:bool:eq (%3, %4)
  looping thru 2 args of 5:bool:eq (%3, %4)
  looping thru 1 args of 3:int:call While_Valid_52:sum(%2)
  looping thru 2 args of 2:int[]:arrgen (%0, %1)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 0
  looping thru 0 args of 4:int:const 0
checking: 13:bool:eq (%11, %12)
  looping thru 2 args of 13:bool:eq (%11, %12)
  looping thru 1 args of 11:int:call While_Valid_52:sum(%10)
  looping thru 3 args of 10:int[]:arrinit (%7, %8, %9)
  looping thru 0 args of 7:int:const 1
  looping thru 0 args of 8:int:const 2
  looping thru 0 args of 9:int:const 3
  looping thru 0 args of 12:int:const 6
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_7.whiley =====
checking: 31:bool:lt (%28, %30)
  looping thru 2 args of 31:bool:lt (%28, %30)
  looping thru 1 args of 28:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
  looping thru 1 args of 30:int:arrlen (%29)
  looping thru 1 args of 29:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
assign 1 := 1
checking: 34:int:arridx (%32, %33)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(r)
  looping thru 2 args of 34:int:arridx (%32, %33)
  looping thru 1 args of 32:int[]:read (%14)
  looping thru 1 args of 14:int[]:decl r = 13
  looping thru 2 args of 13:int[]:arrgen (%8, %12)
  looping thru 0 args of 8:int:const 1
  looping thru 2 args of 12:int:add (%10, %11)
  looping thru 1 args of 10:int:arrlen (%9)
  looping thru 1 args of 9:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 0 args of 11:int:const 1
  looping thru 1 args of 33:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
checking: 37:int:arridx (%35, %36)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(ls)
  looping thru 2 args of 37:int:arridx (%35, %36)
  looping thru 1 args of 35:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 1 args of 36:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
assign 1 := 1
checking: 39:int:read (%7)
  looping thru 1 args of 39:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
checking: 42:int:add (%40, %41)
  looping thru 2 args of 42:int:add (%40, %41)
  looping thru 1 args of 40:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 41:int:const 1
checking: 46:int[]:read (%14)
  looping thru 1 args of 46:int[]:read (%14)
  looping thru 1 args of 14:int[]:decl r = 13
  looping thru 2 args of 13:int[]:arrgen (%8, %12)
  looping thru 0 args of 8:int:const 1
  looping thru 2 args of 12:int:add (%10, %11)
  looping thru 1 args of 10:int:arrlen (%9)
  looping thru 1 args of 9:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 0 args of 11:int:const 1
checking: 30:bool:eq (%15, %29)
  looping thru 2 args of 30:bool:eq (%15, %29)
  looping thru 1 args of 15:int[]:read (%14)
  looping thru 1 args of 14:int[]:decl rs = 13
  looping thru 1 args of 13:int[]:call While_Valid_7:extract(%12)
  looping thru 9 args of 12:int[]:arrinit (%1, %3, %4, %5, %7, %8, %9, %10, %11)
  looping thru 1 args of 1:int:neg (%0)
  looping thru 0 args of 0:int:const 2
  looping thru 1 args of 3:int:neg (%2)
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 4:int:const 1
  looping thru 0 args of 5:int:const 2
  looping thru 1 args of 7:int:neg (%6)
  looping thru 0 args of 6:int:const 23
  looping thru 0 args of 8:int:const 3
  looping thru 0 args of 9:int:const 2345
  looping thru 0 args of 10:int:const 4
  looping thru 0 args of 11:int:const 5
  looping thru 10 args of 29:int[]:arrinit (%17, %19, %20, %21, %23, %24, %25, %26, %27, %28)
  looping thru 1 args of 17:int:neg (%16)
  looping thru 0 args of 16:int:const 2
  looping thru 1 args of 19:int:neg (%18)
  looping thru 0 args of 18:int:const 3
  looping thru 0 args of 20:int:const 1
  looping thru 0 args of 21:int:const 2
  looping thru 1 args of 23:int:neg (%22)
  looping thru 0 args of 22:int:const 23
  looping thru 0 args of 24:int:const 3
  looping thru 0 args of 25:int:const 2345
  looping thru 0 args of 26:int:const 4
  looping thru 0 args of 27:int:const 5
  looping thru 0 args of 28:int:const 1
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_9.whiley =====
checking: 31:bool:lt (%28, %30)
  looping thru 2 args of 31:bool:lt (%28, %30)
  looping thru 1 args of 28:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
  looping thru 1 args of 30:int:arrlen (%29)
  looping thru 1 args of 29:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
assign 1 := 1
checking: 34:int:arridx (%32, %33)
conjecture: 0 <= toInt(i) && toInt(i) < arraylen(r)
  looping thru 2 args of 34:int:arridx (%32, %33)
  looping thru 1 args of 32:int[]:read (%14)
  looping thru 1 args of 14:int[]:decl r = 13
  looping thru 2 args of 13:int[]:arrgen (%8, %12)
  looping thru 0 args of 8:int:const 0
  looping thru 2 args of 12:int:add (%10, %11)
  looping thru 1 args of 10:int:arrlen (%9)
  looping thru 1 args of 9:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 0 args of 11:int:const 1
  looping thru 1 args of 33:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
checking: 35:int:const 1
  looping thru 0 args of 35:int:const 1
assign 1 := 1
checking: 37:int:read (%7)
  looping thru 1 args of 37:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
checking: 40:int:add (%38, %39)
  looping thru 2 args of 40:int:add (%38, %39)
  looping thru 1 args of 38:int:read (%7)
  looping thru 1 args of 7:int:decl i = 6
  looping thru 0 args of 6:int:const 0
  looping thru 0 args of 39:int:const 1
checking: 44:int[]:read (%14)
  looping thru 1 args of 44:int[]:read (%14)
  looping thru 1 args of 14:int[]:decl r = 13
  looping thru 2 args of 13:int[]:arrgen (%8, %12)
  looping thru 0 args of 8:int:const 0
  looping thru 2 args of 12:int:add (%10, %11)
  looping thru 1 args of 10:int:arrlen (%9)
  looping thru 1 args of 9:int[]:read (%0)
  looping thru 0 args of 0:int[]:decl ls
  looping thru 0 args of 11:int:const 1
checking: 20:bool:eq (%10, %19)
  looping thru 2 args of 20:bool:eq (%10, %19)
  looping thru 1 args of 10:int[]:read (%9)
  looping thru 1 args of 9:int[]:decl rs = 8
  looping thru 1 args of 8:int[]:call While_Valid_9:extract(%7)
  looping thru 7 args of 7:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 4:int:const 5
  looping thru 0 args of 5:int:const 6
  looping thru 0 args of 6:int:const 7
  looping thru 8 args of 19:int[]:arrinit (%11, %12, %13, %14, %15, %16, %17, %18)
  looping thru 0 args of 11:int:const 1
  looping thru 0 args of 12:int:const 1
  looping thru 0 args of 13:int:const 1
  looping thru 0 args of 14:int:const 1
  looping thru 0 args of 15:int:const 1
  looping thru 0 args of 16:int:const 1
  looping thru 0 args of 17:int:const 1
  looping thru 0 args of 18:int:const 0
assign 1 := 1
checking: 22:int[]:read (%9)
  looping thru 1 args of 22:int[]:read (%9)
  looping thru 1 args of 9:int[]:decl rs = 8
  looping thru 1 args of 8:int[]:call While_Valid_9:extract(%7)
  looping thru 7 args of 7:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 4:int:const 5
  looping thru 0 args of 5:int:const 6
  looping thru 0 args of 6:int:const 7
checking: 26:int[]:call While_Valid_9:extract(%25)
  looping thru 1 args of 26:int[]:call While_Valid_9:extract(%25)
  looping thru 2 args of 25:int[]:arrgen (%23, %24)
  looping thru 0 args of 23:int:const 0
  looping thru 0 args of 24:int:const 0
checking: 31:bool:eq (%28, %30)
  looping thru 2 args of 31:bool:eq (%28, %30)
  looping thru 1 args of 28:int[]:read (%9)
  looping thru 1 args of 9:int[]:decl rs = 8
  looping thru 1 args of 8:int[]:call While_Valid_9:extract(%7)
  looping thru 7 args of 7:int[]:arrinit (%0, %1, %2, %3, %4, %5, %6)
  looping thru 0 args of 0:int:const 1
  looping thru 0 args of 1:int:const 2
  looping thru 0 args of 2:int:const 3
  looping thru 0 args of 3:int:const 4
  looping thru 0 args of 4:int:const 5
  looping thru 0 args of 5:int:const 6
  looping thru 0 args of 6:int:const 7
  looping thru 1 args of 30:int[]:arrinit (%29)
  looping thru 0 args of 29:int:const 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
