SCRIPT=/Users/utting/git/whiley/Whiley2Boogie/scripts
===== Access_Valid_1.whiley =====

GOT: ./Access_Valid_1.wyil
DEBUG: recording type list := int[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Access_Valid_2.whiley =====

GOT: ./Access_Valid_2.wyil
DEBUG: recording type liststr := int[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== AddressExpression_Valid_1.whiley =====

GOT: ./AddressExpression_Valid_1.wyil
DEBUG: recording type fun := function(int)->(int) where ()
DEBUG: Expr.LambdaAccess:
  name     : suc
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(341, 346, 410):[B@6ed3ccb2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== AddressExpression_Valid_2.whiley =====

GOT: ./AddressExpression_Valid_2.wyil
DEBUG: recording type fun1 := function(int)->(int) where ()
DEBUG: recording type fun2 := function(bool)->(bool) where ()
DEBUG: Expr.LambdaAccess:
  name     : overloaded
  paraTypes: (int)
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(603, 612, 757):[B@3cc1435c
DEBUG: Expr.LambdaAccess:
  name     : overloaded
  paraTypes: (bool)
  signature: function(bool)->(bool)
  type     : function(bool)->(bool)
  types    : null
  data    : [1]
  string  : 219(684, 693, 761):[B@3a6bb9bf
mangle overloaded : function(bool)->(bool) to overloaded$2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== AddressExpression_Valid_3.whiley =====

GOT: ./AddressExpression_Valid_3.wyil
DEBUG: recording type fun := function(int,int)->(int) where ()
DEBUG: Expr.LambdaAccess:
  name     : add
  paraTypes: ()
  signature: function(int,int)->(int)
  type     : function(int,int)->(int)
  types    : null
  data    : [0]
  string  : 219(387, 392, 462):[B@24aed80c
wy2boogie.translate.NotImplementedYet: indirect invoke with 2 args at (146..152)
	at wy2boogie.translate.Wyil2Boogie.boogieIndirectInvokeExpr(Wyil2Boogie.java:1773)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1508)
	at wy2boogie.translate.Wyil2Boogie.boogieEquality(Wyil2Boogie.java:1883)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1586)
	at wy2boogie.translate.Wyil2Boogie.boogieBoolExpr(Wyil2Boogie.java:1469)
	at wy2boogie.translate.Wyil2Boogie.writeAssume(Wyil2Boogie.java:926)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:784)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:485)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== AddressExpression_Valid_4.whiley =====

GOT: ./AddressExpression_Valid_4.wyil
DEBUG: recording type fun1 := function(int,int)->(int) where ()
DEBUG: recording type fun2 := function(bool,bool)->(bool) where ()
DEBUG: Expr.LambdaAccess:
  name     : overloaded
  paraTypes: (int,int)
  signature: function(int,int)->(int)
  type     : function(int,int)->(int)
  types    : null
  data    : [0]
  string  : 219(718, 731, 892):[B@77eca502
mangle overloaded : function(bool,bool)->(bool) to overloaded$2
wy2boogie.translate.NotImplementedYet: indirect invoke with 2 args at (274..279)
	at wy2boogie.translate.Wyil2Boogie.boogieIndirectInvokeExpr(Wyil2Boogie.java:1773)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1508)
	at wy2boogie.translate.Wyil2Boogie.boogieEquality(Wyil2Boogie.java:1883)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1586)
	at wy2boogie.translate.Wyil2Boogie.boogieBoolExpr(Wyil2Boogie.java:1469)
	at wy2boogie.translate.Wyil2Boogie.writeAssume(Wyil2Boogie.java:926)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:784)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:485)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Array_Valid_1.whiley =====

GOT: ./Array_Valid_1.wyil
DEBUG: recording type in_arr := int|null[] where ()
DEBUG: recording type ib_arr := int|bool[] where ()
DEBUG: recording type arr := in_arr|ib_arr where ()
MUTATED INPUT x : arr
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Array_Valid_2.whiley =====

GOT: ./Array_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Array_Valid_3.whiley =====

GOT: ./Array_Valid_3.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Array_Valid_4.whiley =====

GOT: ./Array_Valid_4.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Array_Valid_5.whiley =====

GOT: ./Array_Valid_5.wyil
MUTATED INPUT xs : int[]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Array_Valid_6.whiley =====

GOT: ./Array_Valid_6.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Array_Valid_7.whiley =====

GOT: ./Array_Valid_7.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Array_Valid_8.whiley =====

GOT: ./Array_Valid_8.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Array_Valid_9.whiley =====

GOT: ./Array_Valid_9.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Array_Valid_9.bpl(68,4): Error: wrong number of result variables in call to g: 0
1 name resolution errors detected in Array_Valid_9.bpl
===== Assert_Valid_1.whiley =====

GOT: ./Assert_Valid_1.wyil
MUTATED INPUT xs : int[]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Assert_Valid_1.bpl(57,5): Error BP5001: This assertion might not hold.
Execution trace:
    Assert_Valid_1.bpl(55,5): anon0

Boogie program verifier finished with 1 verified, 1 error

===== Assert_Valid_2.whiley =====

GOT: ./Assert_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Assign_Valid_1.whiley =====

GOT: ./Assign_Valid_1.wyil
wy2boogie.translate.NotImplementedYet: multiple return values:swap
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:439)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Assign_Valid_2.whiley =====

GOT: ./Assign_Valid_2.wyil
wy2boogie.translate.NotImplementedYet: multiple return values:swap
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:439)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Assign_Valid_3.whiley =====

GOT: ./Assign_Valid_3.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Assign_Valid_4.whiley =====

GOT: ./Assign_Valid_4.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Assign_Valid_5.whiley =====

GOT: ./Assign_Valid_5.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Assume_Valid_1.whiley =====

GOT: ./Assume_Valid_1.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Assume_Valid_2.whiley =====

GOT: ./Assume_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== BoolAssign_Valid_1.whiley =====

GOT: ./BoolAssign_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== BoolAssign_Valid_2.whiley =====

GOT: ./BoolAssign_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== BoolAssign_Valid_3.whiley =====

GOT: ./BoolAssign_Valid_3.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== BoolAssign_Valid_4.whiley =====

GOT: ./BoolAssign_Valid_4.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== BoolAssign_Valid_5.whiley =====

GOT: ./BoolAssign_Valid_5.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== BoolAssign_Valid_6.whiley =====

GOT: ./BoolAssign_Valid_6.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== BoolFun_Valid_1.whiley =====

GOT: ./BoolFun_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== BoolIfElse_Valid_1.whiley =====

GOT: ./BoolIfElse_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== BoolIfElse_Valid_2.whiley =====

GOT: ./BoolIfElse_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== BoolList_Valid_1.whiley =====

GOT: ./BoolList_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== BoolList_Valid_2.whiley =====

GOT: ./BoolList_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== BoolList_Valid_3.whiley =====

GOT: ./BoolList_Valid_3.wyil
DEBUG: recording type Board := bool[][] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
BoolList_Valid_3.bpl(33,16): Verification of 'update__impl' timed out after 10 seconds
BoolList_Valid_3.bpl(53,9): Timed out on BP5005: This loop invariant might not be maintained by the loop.
Execution trace:
    BoolList_Valid_3.bpl(40,12): anon0
    BoolList_Valid_3.bpl(51,5): anon5_LoopHead
    BoolList_Valid_3.bpl(55,11): anon5_LoopBody
    BoolList_Valid_3.bpl(59,9): anon6_LoopHead
    BoolList_Valid_3.bpl(59,9): anon6_LoopDone
BoolList_Valid_3.bpl(176,5): Error BP5001: This assertion might not hold.
Execution trace:
    BoolList_Valid_3.bpl(165,11): anon0
    BoolList_Valid_3.bpl(166,5): anon7_Else
    BoolList_Valid_3.bpl(172,5): anon8_Else

Boogie program verifier finished with 2 verified, 1 error, 1 time out

===== BoolRecord_Valid_1.whiley =====

GOT: ./BoolRecord_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== BoolRecord_Valid_2.whiley =====

GOT: ./BoolRecord_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== BoolRequires_Valid_1.whiley =====

GOT: ./BoolRequires_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== BoolReturn_Valid_1.whiley =====

GOT: ./BoolReturn_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Byte_Valid_1.whiley =====

GOT: ./Byte_Valid_1.wyil
MUTATED INPUT b : byte
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Byte_Valid_2.whiley =====

GOT: ./Byte_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Byte_Valid_3.whiley =====

GOT: ./Byte_Valid_3.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Byte_Valid_4.whiley =====

GOT: ./Byte_Valid_4.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Byte_Valid_5.whiley =====

GOT: ./Byte_Valid_5.wyil
MUTATED INPUT b : byte
MUTATED INPUT i : int
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Byte_Valid_6.whiley =====

GOT: ./Byte_Valid_6.wyil
MUTATED INPUT b : byte
MUTATED INPUT i : int
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Byte_Valid_7.whiley =====

GOT: ./Byte_Valid_7.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Byte_Valid_8.whiley =====

GOT: ./Byte_Valid_8.wyil
MUTATED INPUT b : byte
MUTATED INPUT i : int
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Byte_Valid_9.whiley =====

GOT: ./Byte_Valid_9.wyil
MUTATED INPUT b : byte
MUTATED INPUT i : int
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 4 verified, 0 errors
===== Cast_Valid_5.whiley =====

GOT: ./Cast_Valid_5.wyil
DEBUG: recording type u8 := int where ( && )
MUTATED INPUT b : byte
MUTATED INPUT v : u8
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Cast_Valid_5.bpl(83,9): Error BP5005: This loop invariant might not be maintained by the loop.
Execution trace:
    Cast_Valid_5.bpl(74,7): anon0
    Cast_Valid_5.bpl(80,5): anon4_LoopHead
    Cast_Valid_5.bpl(85,9): anon4_LoopBody
    Cast_Valid_5.bpl(86,15): anon5_Then
    Cast_Valid_5.bpl(88,11): anon3
Cast_Valid_5.bpl(94,5): Error BP5003: A postcondition might not hold on this return path.
Cast_Valid_5.bpl(67,5): Related location: This is the postcondition that might not hold.
Execution trace:
    Cast_Valid_5.bpl(74,7): anon0
    Cast_Valid_5.bpl(80,5): anon4_LoopHead
    Cast_Valid_5.bpl(80,5): anon4_LoopDone

Boogie program verifier finished with 3 verified, 2 errors

===== Coercion_Valid_10.whiley =====

GOT: ./Coercion_Valid_10.wyil
DEBUG: recording type pos := int where ( >= )
DEBUG: recording type neg := int where ( < )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Coercion_Valid_10.bpl(84,5): Error BP5001: This assertion might not hold.
Execution trace:
    Coercion_Valid_10.bpl(83,5): anon0
Coercion_Valid_10.bpl(86,5): Error BP5001: This assertion might not hold.
Execution trace:
    Coercion_Valid_10.bpl(83,5): anon0

Boogie program verifier finished with 2 verified, 2 errors

===== Coercion_Valid_11.whiley =====

GOT: ./Coercion_Valid_11.wyil
DEBUG: recording type pos := int where ( >= )
DEBUG: recording type neg := int where ( < )
DEBUG: recording type A1 := pos|neg[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Coercion_Valid_12.whiley =====

GOT: ./Coercion_Valid_12.wyil
DEBUG: recording type pos := int where ( >= )
DEBUG: recording type neg := int where ( < )
DEBUG: recording type R1 := {} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Coercion_Valid_13.whiley =====

GOT: ./Coercion_Valid_13.wyil
DEBUG: recording type pos := int where ( >= )
DEBUG: recording type neg := int where ( < )
DEBUG: recording type R1 := {} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Coercion_Valid_14.whiley =====

GOT: ./Coercion_Valid_14.wyil
DEBUG: recording type pos := int where ( >= )
DEBUG: recording type neg := int where ( < )
DEBUG: recording type A1 := pos|neg[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Coercion_Valid_15.whiley =====

GOT: ./Coercion_Valid_15.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type pos := nat where ( > )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Coercion_Valid_2.whiley =====

GOT: ./Coercion_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Coercion_Valid_3.whiley =====

GOT: ./Coercion_Valid_3.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Coercion_Valid_7.whiley =====

GOT: ./Coercion_Valid_7.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Coercion_Valid_8.whiley =====

GOT: ./Coercion_Valid_8.wyil
DEBUG: recording type Expr := int|Expr[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Coercion_Valid_9.whiley =====

GOT: ./Coercion_Valid_9.wyil
DEBUG: recording type Link := {} where ()
DEBUG: recording type BigLink := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Complex_Valid_1.whiley =====

GOT: ./Complex_Valid_1.wyil
DEBUG: recording type PieceKind := int where ( && )
DEBUG: recording type Piece := {,} where ()
DEBUG: recording type RowCol := int where ( && )
DEBUG: recording type Pos := {,} where ()
DEBUG: recording type Square := Piece|null where ()
DEBUG: recording type Row := Square[] where ( == )
DEBUG: recording type Board := {,,,,} where ( == )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Complex_Valid_10.whiley =====

GOT: ./Complex_Valid_10.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type Card := {,} where ( && , && )
DEBUG: recording type Deck := Card[] where ( == ,forall(int i = 238(14650, 11511, 11526),int j = 238(14654, 11546, 11561)). ==> )
DEBUG: recording type Random := {,} where ( < ,forall(int i = 238(14660, 12420, 12436)). < )
wy2boogie.translate.NotImplementedYet: multiple return values:next
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:439)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Complex_Valid_11.whiley =====

GOT: ./Complex_Valid_11.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type Card := {,} where ( && , && )
DEBUG: recording type Deck := Card[] where ( == )
DEBUG: recording type Random := {,} where ( < ,forall(int i = 238(5423, 3659, 3675)). < )
wy2boogie.translate.NotImplementedYet: multiple return values:next
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:439)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Complex_Valid_2.whiley =====

GOT: ./Complex_Valid_2.wyil
DEBUG: recording type string := int[] where ()
DEBUG: recording type PieceKind := int where ( && )
DEBUG: recording type Piece := {,} where ()
DEBUG: recording type RowCol := int where ()
DEBUG: recording type Pos := {,} where ()
DEBUG: recording type SingleMove := {,,} where ()
DEBUG: recording type SingleTake := {,,,} where ()
DEBUG: recording type SimpleMove := SingleMove|SingleTake where ()
DEBUG: recording type CastleMove := {,} where ()
DEBUG: recording type CheckMove := {} where ()
DEBUG: recording type Move := CheckMove|CastleMove|SimpleMove where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Complex_Valid_2.bpl(235,9): Error BP5001: This assertion might not hold.
Execution trace:
    Complex_Valid_2.bpl(230,5): anon0
    Complex_Valid_2.bpl(231,9): anon11_Then
Complex_Valid_2.bpl(237,9): Error BP5001: This assertion might not hold.
Execution trace:
    Complex_Valid_2.bpl(230,5): anon0
    Complex_Valid_2.bpl(231,9): anon11_Then
Complex_Valid_2.bpl(240,9): Error BP5001: This assertion might not hold.
Execution trace:
    Complex_Valid_2.bpl(230,5): anon0
    Complex_Valid_2.bpl(231,9): anon11_Then
Complex_Valid_2.bpl(243,9): Error BP5003: A postcondition might not hold on this return path.
Complex_Valid_2.bpl(226,5): Related location: This is the postcondition that might not hold.
Execution trace:
    Complex_Valid_2.bpl(230,5): anon0
    Complex_Valid_2.bpl(231,9): anon11_Then
Complex_Valid_2.bpl(250,13): Error BP5001: This assertion might not hold.
Execution trace:
    Complex_Valid_2.bpl(230,5): anon0
    Complex_Valid_2.bpl(245,9): anon11_Else
    Complex_Valid_2.bpl(246,13): anon12_Then

Boogie program verifier finished with 4 verified, 5 errors

===== Complex_Valid_3.whiley =====

GOT: ./Complex_Valid_3.wyil
DEBUG: recording type BNode := {,,} where ()
DEBUG: recording type BTree := null|BNode where ( && )
MUTATED INPUT tree : BTree
MUTATED INPUT tree : BTree
MUTATED INPUT tree : BTree
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Complex_Valid_3.bpl(81,5): Error BP5003: A postcondition might not hold on this return path.
Complex_Valid_3.bpl(64,5): Related location: This is the postcondition that might not hold.
Execution trace:
    Complex_Valid_3.bpl(68,10): anon0
    Complex_Valid_3.bpl(72,9): anon6_Else
    Complex_Valid_3.bpl(73,13): anon7_Then
    Complex_Valid_3.bpl(80,7): anon5

Boogie program verifier finished with 3 verified, 1 error

java.lang.NullPointerException
	at wy2boogie.core.BoogieExampleFile$BoogieModel.getValue(BoogieExampleFile.java:73)
	at wy2boogie.core.BoogieExampleFile$BoogieModel.concretise(BoogieExampleFile.java:105)
	at wy2boogie.core.BoogieExampleFile$BoogieModel.stringifyRecord(BoogieExampleFile.java:170)
	at wy2boogie.core.BoogieExampleFile$BoogieModel.toString(BoogieExampleFile.java:127)
	at wy2boogie.core.BoogieExampleFile.toString(BoogieExampleFile.java:272)
	at wy2boogie.commands.BoogieCommand.translateCounterexample(BoogieCommand.java:251)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:126)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Complex_Valid_4.whiley =====

GOT: ./Complex_Valid_4.wyil
DEBUG: recording type BTree := null|{,,} where ()
MUTATED INPUT tree : BTree
MUTATED INPUT tree : BTree
MUTATED INPUT tree : BTree
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 4 verified, 0 errors
===== Complex_Valid_5.whiley =====

GOT: ./Complex_Valid_5.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type Piece := int where ( || )
DEBUG: recording type Board := {,} where ( && )
DEBUG: recording type EmptyBoard := Board where (forall(int i = 238(2382, 1588, 1615)). == )
MUTATED INPUT b : Board
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Complex_Valid_6.whiley =====

GOT: ./Complex_Valid_6.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Complex_Valid_7.whiley =====

GOT: ./Complex_Valid_7.wyil
assuming lhs of ==> toInt(v1) <= toInt(v3) && toInt(v2) <= toInt(v3)
assuming lhs of ==> toInt(v1) <= toInt(v2) && toInt(v3) <= toInt(v2)
assuming lhs of ==> toInt(v2) <= toInt(v3) && toInt(v3) <= toInt(v1)
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Complex_Valid_8.whiley =====

GOT: ./Complex_Valid_8.wyil
DEBUG: recording type char := int where ()
DEBUG: recording type string := int[] where ()
DEBUG: recording type Transition := {,,} where ( && )
DEBUG: recording type Trie := {} where (validTransitions($.transitions))
mangle add : function(Trie,int,string,int)->(Trie) to add$2
mangle contains : function(Trie,int,string,int)->(bool) to contains$2
MUTATED INPUT trie : Trie
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 6 verified, 0 errors
===== Complex_Valid_9.whiley =====

GOT: ./Complex_Valid_9.wyil
wy2boogie.translate.NotImplementedYet: multiple return values:sort2
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:439)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Constant_Valid_3.whiley =====

GOT: ./Constant_Valid_3.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ConstrainedInt_Valid_1.whiley =====

GOT: ./ConstrainedInt_Valid_1.wyil
DEBUG: recording type cr1nat := int where ( < )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_10.whiley =====

GOT: ./ConstrainedInt_Valid_10.wyil
DEBUG: recording type nat := int where ( > )
DEBUG: recording type num := int where ( && )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedInt_Valid_12.whiley =====

GOT: ./ConstrainedInt_Valid_12.wyil
DEBUG: recording type cr1nat := int where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_13.whiley =====

GOT: ./ConstrainedInt_Valid_13.wyil
DEBUG: recording type codeOp := int where ( && )
DEBUG: recording type code := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_15.whiley =====

GOT: ./ConstrainedInt_Valid_15.wyil
DEBUG: recording type pos := int where ( > )
DEBUG: recording type neg := int where ( < )
DEBUG: recording type posneg := pos|neg where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_16.whiley =====

GOT: ./ConstrainedInt_Valid_16.wyil
DEBUG: recording type odd := int where ( || )
DEBUG: recording type even := int where ( || )
DEBUG: recording type oddeven := odd|even where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_17.whiley =====

GOT: ./ConstrainedInt_Valid_17.wyil
DEBUG: recording type anat := int where ( >= )
DEBUG: recording type bnat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedInt_Valid_18.whiley =====

GOT: ./ConstrainedInt_Valid_18.wyil
DEBUG: recording type anat := int where ()
DEBUG: recording type bnat := int where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedInt_Valid_19.whiley =====

GOT: ./ConstrainedInt_Valid_19.wyil
DEBUG: recording type a_nat := int where ( >= )
DEBUG: recording type b_nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_2.whiley =====

GOT: ./ConstrainedInt_Valid_2.wyil
DEBUG: recording type cr3nat := int where ( < )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_20.whiley =====

GOT: ./ConstrainedInt_Valid_20.wyil
DEBUG: recording type a_nat := int where ()
DEBUG: recording type b_nat := int where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_21.whiley =====

GOT: ./ConstrainedInt_Valid_21.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_22.whiley =====

GOT: ./ConstrainedInt_Valid_22.wyil
DEBUG: recording type string := int[] where ()
DEBUG: recording type item := int where ( && )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedInt_Valid_23.whiley =====

GOT: ./ConstrainedInt_Valid_23.wyil
DEBUG: recording type cr2num := int where ( && )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_24.whiley =====

GOT: ./ConstrainedInt_Valid_24.wyil
DEBUG: recording type ASCII_char := int where ( && )
DEBUG: recording type C_string := ASCII_char[] where ( && )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_3.whiley =====

GOT: ./ConstrainedInt_Valid_3.wyil
DEBUG: recording type cr3nat := int where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_4.whiley =====

GOT: ./ConstrainedInt_Valid_4.wyil
DEBUG: recording type nat := int where ( < )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_5.whiley =====

GOT: ./ConstrainedInt_Valid_5.wyil
DEBUG: recording type nat := int where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedInt_Valid_6.whiley =====

GOT: ./ConstrainedInt_Valid_6.wyil
DEBUG: recording type num := int where ( && )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedInt_Valid_8.whiley =====

GOT: ./ConstrainedInt_Valid_8.wyil
DEBUG: recording type num := int where ( && )
DEBUG: recording type bignum := int where ( && )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 4 verified, 0 errors
===== ConstrainedIntersection_Valid_1.whiley =====

GOT: ./ConstrainedIntersection_Valid_1.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type l10 := int where ( < )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_1.whiley =====

GOT: ./ConstrainedList_Valid_1.wyil
DEBUG: recording type u8 := int where ( && )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_11.whiley =====

GOT: ./ConstrainedList_Valid_11.wyil
DEBUG: recording type state := {,} where ( && )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedList_Valid_12.whiley =====

GOT: ./ConstrainedList_Valid_12.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_14.whiley =====

GOT: ./ConstrainedList_Valid_14.wyil
DEBUG: recording type wierd := int[] where (exists(int i = 238(765, 420, 435)). > )
MUTATED INPUT xs : int[]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ConstrainedList_Valid_14.bpl(40,5): Error BP5003: A postcondition might not hold on this return path.
ConstrainedList_Valid_14.bpl(32,5): Related location: This is the postcondition that might not hold.
Execution trace:
    ConstrainedList_Valid_14.bpl(36,8): anon0

Boogie program verifier finished with 1 verified, 1 error

===== ConstrainedList_Valid_15.whiley =====

GOT: ./ConstrainedList_Valid_15.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_16.whiley =====

GOT: ./ConstrainedList_Valid_16.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_17.whiley =====

GOT: ./ConstrainedList_Valid_17.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_18.whiley =====

GOT: ./ConstrainedList_Valid_18.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ConstrainedList_Valid_18.bpl(37,5): Error BP5003: A postcondition might not hold on this return path.
ConstrainedList_Valid_18.bpl(33,5): Related location: This is the postcondition that might not hold.
Execution trace:
    ConstrainedList_Valid_18.bpl(36,8): anon0

Boogie program verifier finished with 1 verified, 1 error

java.lang.NullPointerException
	at wy2boogie.core.BoogieExampleFile$BoogieModel.stringifyArray(BoogieExampleFile.java:141)
	at wy2boogie.core.BoogieExampleFile$BoogieModel.toString(BoogieExampleFile.java:125)
	at wy2boogie.core.BoogieExampleFile.toString(BoogieExampleFile.java:272)
	at wy2boogie.commands.BoogieCommand.translateCounterexample(BoogieCommand.java:251)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:126)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== ConstrainedList_Valid_19.whiley =====

GOT: ./ConstrainedList_Valid_19.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ConstrainedList_Valid_19.bpl(64,5): Error BP5003: A postcondition might not hold on this return path.
ConstrainedList_Valid_19.bpl(59,5): Related location: This is the postcondition that might not hold.
Execution trace:
    ConstrainedList_Valid_19.bpl(62,5): anon0

Boogie program verifier finished with 2 verified, 1 error

===== ConstrainedList_Valid_2.whiley =====

GOT: ./ConstrainedList_Valid_2.wyil
DEBUG: recording type nat := int where ( >= )
mangle abs : function(int[],nat)->(nat[]) to abs$2
mangle abs : function(int)->(nat) to abs$3
MUTATED INPUT items : int[]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ConstrainedList_Valid_2.bpl(37,5): Error BP5003: A postcondition might not hold on this return path.
ConstrainedList_Valid_2.bpl(32,5): Related location: This is the postcondition that might not hold.
Execution trace:
    ConstrainedList_Valid_2.bpl(35,5): anon0
ConstrainedList_Valid_2.bpl(68,9): Error BP5003: A postcondition might not hold on this return path.
ConstrainedList_Valid_2.bpl(61,5): Related location: This is the postcondition that might not hold.
Execution trace:
    ConstrainedList_Valid_2.bpl(65,11): anon0
    ConstrainedList_Valid_2.bpl(67,11): anon3_Then

Boogie program verifier finished with 2 verified, 2 errors

===== ConstrainedList_Valid_20.whiley =====

GOT: ./ConstrainedList_Valid_20.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_21.whiley =====

GOT: ./ConstrainedList_Valid_21.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type Cash := nat[] where ( == )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ConstrainedList_Valid_21.bpl(73,16): Verification of 'Cash__impl' timed out after 10 seconds
ConstrainedList_Valid_21.bpl(87,9): Timed out on BP5004: This loop invariant might not hold on entry.
Execution trace:
    ConstrainedList_Valid_21.bpl(78,10): anon0
ConstrainedList_Valid_21.bpl(87,9): Timed out on BP5005: This loop invariant might not be maintained by the loop.
Execution trace:
    ConstrainedList_Valid_21.bpl(78,10): anon0
    ConstrainedList_Valid_21.bpl(85,5): anon2_LoopHead
    ConstrainedList_Valid_21.bpl(89,9): anon2_LoopBody
ConstrainedList_Valid_21.bpl(98,5): Timed out on BP5003: A postcondition might not hold on this return path.
ConstrainedList_Valid_21.bpl(72,5): Related location: This is the postcondition that might not hold.
Execution trace:
    ConstrainedList_Valid_21.bpl(78,10): anon0
    ConstrainedList_Valid_21.bpl(85,5): anon2_LoopHead
    ConstrainedList_Valid_21.bpl(85,5): anon2_LoopDone

Boogie program verifier finished with 1 verified, 0 errors, 1 time out
===== ConstrainedList_Valid_22.whiley =====

GOT: ./ConstrainedList_Valid_22.wyil
DEBUG: recording type nat := int where ( >= )
MUTATED INPUT xs : nat[]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_23.whiley =====

GOT: ./ConstrainedList_Valid_23.wyil
DEBUG: recording type Matrix := int[][] where (forall(int i = 238(3491, 1826, 1841),int j = 238(3495, 1861, 1876)). == )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ConstrainedList_Valid_23.bpl(44,19): Error: more than one declaration of variable name: k
ConstrainedList_Valid_23.bpl(48,19): Error: more than one declaration of variable name: k
ConstrainedList_Valid_23.bpl(55,26): Error: more than one declaration of variable name: k
3 name resolution errors detected in ConstrainedList_Valid_23.bpl
===== ConstrainedList_Valid_25.whiley =====

GOT: ./ConstrainedList_Valid_25.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_26.whiley =====

GOT: ./ConstrainedList_Valid_26.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_27.whiley =====

GOT: ./ConstrainedList_Valid_27.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_28.whiley =====

GOT: ./ConstrainedList_Valid_28.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_3.whiley =====

GOT: ./ConstrainedList_Valid_3.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_4.whiley =====

GOT: ./ConstrainedList_Valid_4.wyil
DEBUG: recording type i8 := int where ( && )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedList_Valid_5.whiley =====

GOT: ./ConstrainedList_Valid_5.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedList_Valid_6.whiley =====

GOT: ./ConstrainedList_Valid_6.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type Cash := nat[] where ( == )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedList_Valid_7.whiley =====

GOT: ./ConstrainedList_Valid_7.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedList_Valid_8.whiley =====

GOT: ./ConstrainedList_Valid_8.wyil
DEBUG: recording type nat := int where ( >= )
MUTATED INPUT list : nat[]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ConstrainedList_Valid_8.bpl(63,5): Error BP5001: This assertion might not hold.
Execution trace:
    ConstrainedList_Valid_8.bpl(60,8): anon0
ConstrainedList_Valid_8.bpl(65,5): Error BP5001: This assertion might not hold.
Execution trace:
    ConstrainedList_Valid_8.bpl(60,8): anon0
ConstrainedList_Valid_8.bpl(67,5): Error BP5001: This assertion might not hold.
Execution trace:
    ConstrainedList_Valid_8.bpl(60,8): anon0

Boogie program verifier finished with 1 verified, 3 errors

===== ConstrainedList_Valid_9.whiley =====

GOT: ./ConstrainedList_Valid_9.wyil
DEBUG: recording type posintlist := int[] where (forall(int i = 238(1193, 638, 653)). >= )
mangle sum : function(posintlist)->(int) to sum$2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedNegation_Valid_1.whiley =====

GOT: ./ConstrainedNegation_Valid_1.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type neg := int where ( < )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedNegation_Valid_2.whiley =====

GOT: ./ConstrainedNegation_Valid_2.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedRecord_Valid_1.whiley =====

GOT: ./ConstrainedRecord_Valid_1.wyil
DEBUG: recording type unitCode := int where ( || )
DEBUG: recording type UNIT := {} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedRecord_Valid_10.whiley =====

GOT: ./ConstrainedRecord_Valid_10.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedRecord_Valid_2.whiley =====

GOT: ./ConstrainedRecord_Valid_2.wyil
DEBUG: recording type unitCode := int where ( || )
DEBUG: recording type UNIT := {} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedRecord_Valid_3.whiley =====

GOT: ./ConstrainedRecord_Valid_3.wyil
DEBUG: recording type btup := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ConstrainedRecord_Valid_4.whiley =====

GOT: ./ConstrainedRecord_Valid_4.wyil
DEBUG: recording type point := {,} where ( && )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ConstrainedRecord_Valid_5.whiley =====

GOT: ./ConstrainedRecord_Valid_5.wyil
DEBUG: recording type point := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ConstrainedRecord_Valid_6.whiley =====

GOT: ./ConstrainedRecord_Valid_6.wyil
DEBUG: recording type state := {,} where ( && )
MUTATED INPUT st : state
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ConstrainedRecord_Valid_8.whiley =====

GOT: ./ConstrainedRecord_Valid_8.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type piece := int where ( || )
DEBUG: recording type Board := {,} where ( && )
DEBUG: recording type EmptyBoard := Board where (forall(int i = 238(1875, 1325, 1352)). == )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ConstrainedRecord_Valid_8.bpl(84,5): Error BP5001: This assertion might not hold.
Execution trace:
    ConstrainedRecord_Valid_8.bpl(77,5): anon0

Boogie program verifier finished with 1 verified, 1 error

===== ConstrainedRecord_Valid_9.whiley =====

GOT: ./ConstrainedRecord_Valid_9.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type Matrix := {,,} where ( && )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ConstrainedRecord_Valid_9.bpl(118,5): Error BP5001: This assertion might not hold.
Execution trace:
    ConstrainedRecord_Valid_9.bpl(80,12): anon0
    ConstrainedRecord_Valid_9.bpl(83,5): anon4_LoopHead
    ConstrainedRecord_Valid_9.bpl(83,5): anon4_LoopDone
ConstrainedRecord_Valid_9.bpl(134,16): Verification of 'test' timed out after 10 seconds
ConstrainedRecord_Valid_9.bpl(141,5): Timed out on BP5001: This assertion might not hold.
Execution trace:
    ConstrainedRecord_Valid_9.bpl(139,5): anon0
ConstrainedRecord_Valid_9.bpl(146,5): Timed out on BP5001: This assertion might not hold.
Execution trace:
    ConstrainedRecord_Valid_9.bpl(139,5): anon0
ConstrainedRecord_Valid_9.bpl(148,5): Timed out on BP5001: This assertion might not hold.
Execution trace:
    ConstrainedRecord_Valid_9.bpl(139,5): anon0
ConstrainedRecord_Valid_9.bpl(155,5): Timed out on BP5001: This assertion might not hold.
Execution trace:
    ConstrainedRecord_Valid_9.bpl(139,5): anon0

Boogie program verifier finished with 1 verified, 1 error, 1 time out

===== ConstrainedReference_Valid_1.whiley =====

GOT: ./ConstrainedReference_Valid_1.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ConstrainedReference_Valid_1.bpl(30,9): Error BP5003: A postcondition might not hold on this return path.
ConstrainedReference_Valid_1.bpl(25,5): Related location: This is the postcondition that might not hold.
Execution trace:
    ConstrainedReference_Valid_1.bpl(28,5): anon0
    ConstrainedReference_Valid_1.bpl(29,11): anon3_Then

Boogie program verifier finished with 1 verified, 1 error

===== ConstrainedUnion_Valid_1.whiley =====

GOT: ./ConstrainedUnion_Valid_1.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Contractive_Valid_1.whiley =====

GOT: ./Contractive_Valid_1.wyil
DEBUG: recording type Contractive := Contractive[]|null where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Contractive_Valid_2.whiley =====

GOT: ./Contractive_Valid_2.wyil
DEBUG: recording type C1 := null|bool where ()
DEBUG: recording type C2 := null|bool where ()
DEBUG: recording type C3 := C1|C2 where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 5 verified, 0 errors
===== Contractive_Valid_3.whiley =====

GOT: ./Contractive_Valid_3.wyil
DEBUG: recording type Contractive := {}|null where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Define_Valid_1.whiley =====

GOT: ./Define_Valid_1.wyil
DEBUG: recording type point := {,} where ()
DEBUG: recording type listint := int[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Define_Valid_2.whiley =====

GOT: ./Define_Valid_2.wyil
DEBUG: recording type dr2point := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Define_Valid_3.whiley =====

GOT: ./Define_Valid_3.wyil
DEBUG: recording type odd := int where ( || )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Define_Valid_4.whiley =====

GOT: ./Define_Valid_4.wyil
DEBUG: recording type codeOp := int where ( && )
DEBUG: recording type code := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== DoWhile_Valid_1.whiley =====

GOT: ./DoWhile_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== DoWhile_Valid_2.whiley =====

GOT: ./DoWhile_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== DoWhile_Valid_3.whiley =====

GOT: ./DoWhile_Valid_3.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== DoWhile_Valid_4.whiley =====

GOT: ./DoWhile_Valid_4.wyil
DEBUG: recording type Leaf := int where ()
DEBUG: recording type Link := {} where ()
DEBUG: recording type LinkedList := Leaf|Link where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== DoWhile_Valid_5.whiley =====

GOT: ./DoWhile_Valid_5.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== DoWhile_Valid_6.whiley =====

GOT: ./DoWhile_Valid_6.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
DoWhile_Valid_6.bpl(39,9): Error BP5001: This assertion might not hold.
Execution trace:
    DoWhile_Valid_6.bpl(34,7): anon0
    DoWhile_Valid_6.bpl(35,5): anon2_Then
    DoWhile_Valid_6.bpl(36,9): CONTINUE__DO__WHILE__1

Boogie program verifier finished with 1 verified, 1 error

java.lang.NullPointerException
	at wy2boogie.core.BoogieExampleFile$BoogieModel.stringifyArray(BoogieExampleFile.java:141)
	at wy2boogie.core.BoogieExampleFile$BoogieModel.toString(BoogieExampleFile.java:125)
	at wy2boogie.core.BoogieExampleFile.toString(BoogieExampleFile.java:272)
	at wy2boogie.commands.BoogieCommand.translateCounterexample(BoogieCommand.java:251)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:126)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== DoWhile_Valid_7.whiley =====

GOT: ./DoWhile_Valid_7.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== DoWhile_Valid_8.whiley =====

GOT: ./DoWhile_Valid_8.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
DoWhile_Valid_8.bpl(41,9): Error BP5001: This assertion might not hold.
Execution trace:
    DoWhile_Valid_8.bpl(33,7): anon0
    DoWhile_Valid_8.bpl(34,5): anon4_Then
    DoWhile_Valid_8.bpl(35,9): CONTINUE__DO__WHILE__1
    DoWhile_Valid_8.bpl(36,9): anon5_Else
DoWhile_Valid_8.bpl(47,5): Error BP5003: A postcondition might not hold on this return path.
DoWhile_Valid_8.bpl(29,5): Related location: This is the postcondition that might not hold.
Execution trace:
    DoWhile_Valid_8.bpl(33,7): anon0
    DoWhile_Valid_8.bpl(34,5): anon4_Then
    DoWhile_Valid_8.bpl(35,9): CONTINUE__DO__WHILE__1
    DoWhile_Valid_8.bpl(37,13): anon5_Then
    DoWhile_Valid_8.bpl(45,5): BREAK__DO__WHILE__1

Boogie program verifier finished with 1 verified, 2 errors

===== DoWhile_Valid_9.whiley =====

GOT: ./DoWhile_Valid_9.wyil
DEBUG: recording type pos := int where ( >= )
assuming lhs of ==> toBool(clean)
assuming lhs of ==> toBool(clean)
MUTATED INPUT items : int[]
MUTATED INPUT items : int[]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== EffectiveList_Valid_1.whiley =====

GOT: ./EffectiveList_Valid_1.wyil
DEBUG: recording type rec := {,} where ()
DEBUG: recording type nbool := bool|null where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Ensures_Valid_1.whiley =====

GOT: ./Ensures_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Ensures_Valid_2.whiley =====

GOT: ./Ensures_Valid_2.wyil
MUTATED INPUT x : int
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Ensures_Valid_3.whiley =====

GOT: ./Ensures_Valid_3.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Ensures_Valid_4.whiley =====

GOT: ./Ensures_Valid_4.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Ensures_Valid_5.whiley =====

GOT: ./Ensures_Valid_5.wyil
MUTATED INPUT x : int
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Ensures_Valid_6.whiley =====

GOT: ./Ensures_Valid_6.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Ensures_Valid_7.whiley =====

GOT: ./Ensures_Valid_7.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Ensures_Valid_8.whiley =====

GOT: ./Ensures_Valid_8.wyil
MUTATED INPUT x : int
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Fail_Valid_1.whiley =====

GOT: ./Fail_Valid_1.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type neg := int where ( < )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Fail_Valid_2.whiley =====

GOT: ./Fail_Valid_2.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Fail_Valid_3.whiley =====

GOT: ./Fail_Valid_3.wyil
DEBUG: recording type pos := int where ( > )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Final_Valid_1.whiley =====

GOT: ./Final_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Final_Valid_2.whiley =====

GOT: ./Final_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Final_Valid_3.whiley =====

GOT: ./Final_Valid_3.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Final_Valid_4.whiley =====

GOT: ./Final_Valid_4.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Final_Valid_5.whiley =====

GOT: ./Final_Valid_5.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Final_Valid_6.whiley =====

GOT: ./Final_Valid_6.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Final_Valid_7.whiley =====

GOT: ./Final_Valid_7.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Final_Valid_8.whiley =====

GOT: ./Final_Valid_8.wyil
MUTATED INPUT x : int
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== FunctionRef_Valid_1.whiley =====

GOT: ./FunctionRef_Valid_1.wyil
DEBUG: recording type func_t := function(int)->(int) where ()
DEBUG: Expr.LambdaAccess:
  name     : f1
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(615, 620, 711):[B@2b4bac49
DEBUG: Expr.LambdaAccess:
  name     : f1
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(615, 620, 711):[B@2b4bac49
DEBUG: Expr.LambdaAccess:
  name     : f2
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(658, 663, 715):[B@306cf3ea
DEBUG: Expr.LambdaAccess:
  name     : f2
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(658, 663, 715):[B@306cf3ea
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 4 verified, 0 errors
===== FunctionRef_Valid_10.whiley =====

GOT: ./FunctionRef_Valid_10.wyil
DEBUG: recording type LinkedList := null|{,} where ()
DEBUG: recording type Reducer := function(LinkedList)->(int) where ()
DEBUG: Expr.LambdaAccess:
  name     : sum
  paraTypes: ()
  signature: function(LinkedList)->(int)
  type     : function(LinkedList)->(int)
  types    : null
  data    : [0]
  string  : 219(1620, 1625, 1901):[B@29d80d2b
DEBUG: Expr.LambdaAccess:
  name     : sum
  paraTypes: ()
  signature: function(LinkedList)->(int)
  type     : function(LinkedList)->(int)
  types    : null
  data    : [0]
  string  : 219(1620, 1625, 1901):[B@29d80d2b
DEBUG: Expr.LambdaAccess:
  name     : sum
  paraTypes: ()
  signature: function(LinkedList)->(int)
  type     : function(LinkedList)->(int)
  types    : null
  data    : [0]
  string  : 219(1672, 1677, 1905):[B@f58853c
DEBUG: Expr.LambdaAccess:
  name     : sum
  paraTypes: ()
  signature: function(LinkedList)->(int)
  type     : function(LinkedList)->(int)
  types    : null
  data    : [0]
  string  : 219(1672, 1677, 1905):[B@f58853c
DEBUG: Expr.LambdaAccess:
  name     : sum
  paraTypes: ()
  signature: function(LinkedList)->(int)
  type     : function(LinkedList)->(int)
  types    : null
  data    : [0]
  string  : 219(1724, 1729, 1909):[B@1224144a
DEBUG: Expr.LambdaAccess:
  name     : sum
  paraTypes: ()
  signature: function(LinkedList)->(int)
  type     : function(LinkedList)->(int)
  types    : null
  data    : [0]
  string  : 219(1724, 1729, 1909):[B@1224144a
DEBUG: Expr.LambdaAccess:
  name     : sum
  paraTypes: ()
  signature: function(LinkedList)->(int)
  type     : function(LinkedList)->(int)
  types    : null
  data    : [0]
  string  : 219(1776, 1781, 1913):[B@29f7cefd
DEBUG: Expr.LambdaAccess:
  name     : sum
  paraTypes: ()
  signature: function(LinkedList)->(int)
  type     : function(LinkedList)->(int)
  types    : null
  data    : [0]
  string  : 219(1776, 1781, 1913):[B@29f7cefd
DEBUG: Expr.LambdaAccess:
  name     : sum
  paraTypes: ()
  signature: function(LinkedList)->(int)
  type     : function(LinkedList)->(int)
  types    : null
  data    : [0]
  string  : 219(1828, 1833, 1917):[B@700fb871
DEBUG: Expr.LambdaAccess:
  name     : sum
  paraTypes: ()
  signature: function(LinkedList)->(int)
  type     : function(LinkedList)->(int)
  types    : null
  data    : [0]
  string  : 219(1828, 1833, 1917):[B@700fb871
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== FunctionRef_Valid_11.whiley =====

GOT: ./FunctionRef_Valid_11.wyil
DEBUG: recording type LinkedList := null|{,} where ()
DEBUG: recording type Reducer := function(LinkedList)->(int) where ()
DEBUG: Expr.LambdaAccess:
  name     : sum
  paraTypes: ()
  signature: function(LinkedList)->(int)
  type     : function(LinkedList)->(int)
  types    : null
  data    : [0]
  string  : 219(1902, 1907, 2427):[B@7b993c65
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== FunctionRef_Valid_12.whiley =====

GOT: ./FunctionRef_Valid_12.wyil
DEBUG: recording type SizeGetter := function(Sized)->(int) where ()
DEBUG: recording type Sized := {} where ()
DEBUG: Expr.LambdaAccess:
  name     : getSize
  paraTypes: ()
  signature: function(Sized)->(int)
  type     : function(Sized)->(int)
  types    : null
  data    : [0]
  string  : 219(650, 655, 742):[B@78ffe6dc
DEBUG: Expr.LambdaAccess:
  name     : getSize
  paraTypes: ()
  signature: function(Sized)->(int)
  type     : function(Sized)->(int)
  types    : null
  data    : [0]
  string  : 219(650, 655, 742):[B@78ffe6dc
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== FunctionRef_Valid_13.whiley =====

GOT: ./FunctionRef_Valid_13.wyil
DEBUG: recording type Sized := {} where ()
DEBUG: recording type SizeGetter := function(Sized)->(int) where ()
DEBUG: recording type SizeSetter := function(Sized,int)->(Sized) where ()
DEBUG: Expr.LambdaAccess:
  name     : getSize
  paraTypes: ()
  signature: function(Sized)->(int)
  type     : function(Sized)->(int)
  types    : null
  data    : [0]
  string  : 219(994, 999, 1098):[B@1b2abca6
DEBUG: Expr.LambdaAccess:
  name     : getSize
  paraTypes: ()
  signature: function(Sized)->(int)
  type     : function(Sized)->(int)
  types    : null
  data    : [0]
  string  : 219(994, 999, 1098):[B@1b2abca6
DEBUG: Expr.LambdaAccess:
  name     : setSize
  paraTypes: ()
  signature: function(Sized,int)->(Sized)
  type     : function(Sized,int)->(Sized)
  types    : null
  data    : [0]
  string  : 219(1037, 1042, 1102):[B@2d710f1a
DEBUG: Expr.LambdaAccess:
  name     : setSize
  paraTypes: ()
  signature: function(Sized,int)->(Sized)
  type     : function(Sized,int)->(Sized)
  types    : null
  data    : [0]
  string  : 219(1037, 1042, 1102):[B@2d710f1a
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 4 verified, 0 errors
===== FunctionRef_Valid_2.whiley =====

GOT: ./FunctionRef_Valid_2.wyil
DEBUG: Expr.LambdaAccess:
  name     : f
  paraTypes: ()
  signature: function(int|null)->(int)
  type     : function(int|null)->(int)
  types    : null
  data    : [0]
  string  : 219(366, 371, 418):[B@f5958c9
DEBUG: Expr.LambdaAccess:
  name     : f
  paraTypes: ()
  signature: function(int|null)->(int)
  type     : function(int|null)->(int)
  types    : null
  data    : [0]
  string  : 219(366, 371, 418):[B@f5958c9
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== FunctionRef_Valid_4.whiley =====

GOT: ./FunctionRef_Valid_4.wyil
DEBUG: Expr.LambdaAccess:
  name     : f1
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(560, 565, 1008):[B@10959ece
DEBUG: Expr.LambdaAccess:
  name     : f2
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(574, 579, 1010):[B@6f46426d
DEBUG: recording type func := function(int)->(int) where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 4 verified, 0 errors
===== FunctionRef_Valid_5.whiley =====

GOT: ./FunctionRef_Valid_5.wyil
DEBUG: recording type Func := {} where ()
DEBUG: Expr.LambdaAccess:
  name     : id
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(786, 791, 1070):[B@5d0a1059
DEBUG: Expr.LambdaAccess:
  name     : id
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(786, 791, 1070):[B@5d0a1059
DEBUG: Expr.LambdaAccess:
  name     : id
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(882, 887, 1074):[B@506ae4d4
DEBUG: Expr.LambdaAccess:
  name     : id
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(882, 887, 1074):[B@506ae4d4
DEBUG: Expr.LambdaAccess:
  name     : id
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(979, 984, 1078):[B@52b1beb6
DEBUG: Expr.LambdaAccess:
  name     : id
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(979, 984, 1078):[B@52b1beb6
mangle test : method()->() to test$2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== FunctionRef_Valid_6.whiley =====

GOT: ./FunctionRef_Valid_6.wyil
DEBUG: recording type Func := {} where ()
DEBUG: Expr.LambdaAccess:
  name     : id
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(786, 791, 1070):[B@5d0a1059
DEBUG: Expr.LambdaAccess:
  name     : id
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(786, 791, 1070):[B@5d0a1059
DEBUG: Expr.LambdaAccess:
  name     : id
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(882, 887, 1074):[B@506ae4d4
DEBUG: Expr.LambdaAccess:
  name     : id
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(882, 887, 1074):[B@506ae4d4
DEBUG: Expr.LambdaAccess:
  name     : id
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(979, 984, 1078):[B@52b1beb6
DEBUG: Expr.LambdaAccess:
  name     : id
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(979, 984, 1078):[B@52b1beb6
mangle test : method()->() to test$2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== FunctionRef_Valid_7.whiley =====

GOT: ./FunctionRef_Valid_7.wyil
DEBUG: recording type Proc := &{} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== FunctionRef_Valid_8.whiley =====

GOT: ./FunctionRef_Valid_8.wyil
DEBUG: Expr.LambdaAccess:
  name     : id
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(722, 727, 966):[B@3738449f
DEBUG: Expr.LambdaAccess:
  name     : id
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(722, 727, 966):[B@3738449f
DEBUG: Expr.LambdaAccess:
  name     : id
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(807, 812, 970):[B@101952da
DEBUG: Expr.LambdaAccess:
  name     : id
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(807, 812, 970):[B@101952da
DEBUG: Expr.LambdaAccess:
  name     : id
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(893, 898, 974):[B@ea6147e
DEBUG: Expr.LambdaAccess:
  name     : id
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(893, 898, 974):[B@ea6147e
mangle test : method()->() to test$2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 4 verified, 0 errors
===== FunctionRef_Valid_9.whiley =====

GOT: ./FunctionRef_Valid_9.wyil
DEBUG: recording type Proc := &{} where ()
DEBUG: Expr.LambdaAccess:
  name     : id
  paraTypes: ()
  signature: function(int)->(int)
  type     : function(int)->(int)
  types    : null
  data    : [0]
  string  : 219(1005, 1010, 1291):[B@41a0aa7d
mangle test : method()->() to test$2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
FunctionRef_Valid_9.bpl(49,5): Error BP5003: A postcondition might not hold on this return path.
FunctionRef_Valid_9.bpl(45,5): Related location: This is the postcondition that might not hold.
Execution trace:
    FunctionRef_Valid_9.bpl(48,7): anon0

Boogie program verifier finished with 3 verified, 1 error

===== Function_Valid_1.whiley =====

GOT: ./Function_Valid_1.wyil
mangle f : function(int)->(int) to f$2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Function_Valid_11.whiley =====

GOT: ./Function_Valid_11.wyil
./Function_Valid_11.whiley:12: unable to resolve name (is ambiguous)
	found function Function_Valid_11::f(fr8nat)->(bool)
	found function Function_Valid_11::f(fr8neg)->(bool)
    assume f(x) == true
           ^
===== Function_Valid_12.whiley =====

GOT: ./Function_Valid_12.wyil
DEBUG: recording type msg := {,} where ()
mangle f : function(int[])->(int[]) to f$2
mangle f : function(bool[])->(bool[]) to f$3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 4 verified, 0 errors
===== Function_Valid_13.whiley =====

GOT: ./Function_Valid_13.wyil
DEBUG: recording type Point := {,} where ( != )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Function_Valid_14.whiley =====

GOT: ./Function_Valid_14.wyil
mangle f : function(bool)->(int) to f$2
mangle f : function(int[])->(int) to f$3
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 4 verified, 0 errors
===== Function_Valid_15.whiley =====

GOT: ./Function_Valid_15.wyil
./Function_Valid_15.whiley:16: unable to resolve name (is ambiguous)
	found function Function_Valid_15::f(msg1)->(int)
	found function Function_Valid_15::f(msg2)->(int)
    assume f(m1) == 1
           ^
===== Function_Valid_16.whiley =====

GOT: ./Function_Valid_16.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Function_Valid_17.whiley =====

GOT: ./Function_Valid_17.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Function_Valid_18.whiley =====

GOT: ./Function_Valid_18.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Function_Valid_2.whiley =====

GOT: ./Function_Valid_2.wyil
DEBUG: recording type fr3nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Function_Valid_20.whiley =====

GOT: ./Function_Valid_20.wyil
DEBUG: recording type fr2nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Function_Valid_21.whiley =====

GOT: ./Function_Valid_21.wyil
DEBUG: recording type fr2nat := int where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Function_Valid_22.whiley =====

GOT: ./Function_Valid_22.wyil
mangle f : function({,})->(int) to f$2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 4 verified, 0 errors
===== Function_Valid_3.whiley =====

GOT: ./Function_Valid_3.wyil
DEBUG: recording type fr3nat := int where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Function_Valid_4.whiley =====

GOT: ./Function_Valid_4.wyil
DEBUG: recording type fr4nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Function_Valid_5.whiley =====

GOT: ./Function_Valid_5.wyil
DEBUG: recording type fr4nat := int where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Function_Valid_6.whiley =====

GOT: ./Function_Valid_6.wyil
DEBUG: recording type fr5nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Function_Valid_6.bpl(98,5): Error BP5001: This assertion might not hold.
Execution trace:
    Function_Valid_6.bpl(97,8): anon0

Boogie program verifier finished with 2 verified, 1 error

===== Function_Valid_7.whiley =====

GOT: ./Function_Valid_7.wyil
DEBUG: recording type fr5nat := int where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Function_Valid_7.bpl(98,5): Error BP5001: This assertion might not hold.
Execution trace:
    Function_Valid_7.bpl(97,8): anon0

Boogie program verifier finished with 2 verified, 1 error

===== Function_Valid_8.whiley =====

GOT: ./Function_Valid_8.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Function_Valid_8.bpl(98,5): Error BP5001: This assertion might not hold.
Execution trace:
    Function_Valid_8.bpl(97,8): anon0

Boogie program verifier finished with 2 verified, 1 error

===== Function_Valid_9.whiley =====

GOT: ./Function_Valid_9.wyil
DEBUG: recording type nat := int where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Function_Valid_9.bpl(98,5): Error BP5001: This assertion might not hold.
Execution trace:
    Function_Valid_9.bpl(97,8): anon0

Boogie program verifier finished with 2 verified, 1 error

===== HexAssign_Valid_1.whiley =====

GOT: ./HexAssign_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== IfElse_Valid_1.whiley =====

GOT: ./IfElse_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== IfElse_Valid_2.whiley =====

GOT: ./IfElse_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== IfElse_Valid_3.whiley =====

GOT: ./IfElse_Valid_3.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== IfElse_Valid_4.whiley =====

GOT: ./IfElse_Valid_4.wyil
DEBUG: recording type Link := {,} where ()
DEBUG: recording type LinkedList := null|Link where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 5 verified, 0 errors
===== IfElse_Valid_5.whiley =====

GOT: ./IfElse_Valid_5.wyil
DEBUG: recording type Record := {} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Import_Valid_1.whiley =====

GOT: ./Import_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Import_Valid_2.whiley =====

GOT: ./Import_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Import_Valid_3.whiley =====

GOT: ./Import_Valid_3.wyil
mangle toInt : function(int[])->(int) to toInt$2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Import_Valid_6.whiley =====

GOT: ./Import_Valid_6.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== IntAdd_Valid_1.whiley =====

GOT: ./IntAdd_Valid_1.wyil
wy2boogie.translate.NotImplementedYet: multiple return values:swap2
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:439)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== IntConst_Valid_1.whiley =====

GOT: ./IntConst_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== IntDefine_Valid_1.whiley =====

GOT: ./IntDefine_Valid_1.wyil
DEBUG: recording type ir1nat := int where ( > )
DEBUG: recording type pir1nat := ir1nat where ( > )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== IntDefine_Valid_2.whiley =====

GOT: ./IntDefine_Valid_2.wyil
DEBUG: recording type ir1nat := int where ()
DEBUG: recording type pir1nat := ir1nat where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== IntDiv_Valid_1.whiley =====

GOT: ./IntDiv_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== IntDiv_Valid_3.whiley =====

GOT: ./IntDiv_Valid_3.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type pos := int where ( > )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== IntDiv_Valid_4.whiley =====

GOT: ./IntDiv_Valid_4.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== IntDiv_Valid_5.whiley =====

GOT: ./IntDiv_Valid_5.wyil
MUTATED INPUT x : int
MUTATED INPUT y : int
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== IntMul_Valid_1.whiley =====

GOT: ./IntMul_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== IntMul_Valid_2.whiley =====

GOT: ./IntMul_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== IntOp_Valid_1.whiley =====

GOT: ./IntOp_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Intersection_Valid_1.whiley =====

GOT: ./Intersection_Valid_1.wyil
./Intersection_Valid_1.whiley:1: expected end-of-line
type IntInt is int&int
                  ^
===== Intersection_Valid_2.whiley =====

GOT: ./Intersection_Valid_2.wyil
./Intersection_Valid_2.whiley:7: expected end-of-line
type InterList is UnitList & LinkedList
                           ^
===== Lambda_Valid_1.whiley =====

GOT: ./Lambda_Valid_1.wyil
DEBUG: recording type func := function(int)->(int) where ()
DECL_lambda:
  name     : 
  captures : []
  type     : function(int)->(int)
  types    : null
  params   : (int x)
  body    :  + 
  returns : ()
  string  : 27(403, 404, 405, 406, 407, 408, 397, 613)
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Lambda_Valid_10.whiley =====

GOT: ./Lambda_Valid_10.wyil
DEBUG: recording type myfun := function(int)->(int) where ()
DECL_lambda:
  name     : 
  captures : []
  type     : function(int)->(int)
  types    : null
  params   : (int x)
  body    : x
  returns : ()
  string  : 27(276, 277, 278, 279, 280, 281, 270, 367)
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Lambda_Valid_11.whiley =====

GOT: ./Lambda_Valid_11.wyil
DEBUG: recording type myint := int where ()
DECL_lambda:
  name     : 
  captures : []
  type     : method()->(&*:int)
  types    : null
  params   : ()
  body    : *:new 1
  returns : ()
  string  : 27(205, 206, 207, 208, 209, 210, 198, 241)
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Lambda_Valid_11.bpl(12,47): Error: cannot refer to a global variable in this context: ref__0
1 name resolution errors detected in Lambda_Valid_11.bpl
===== Lambda_Valid_12.whiley =====

GOT: ./Lambda_Valid_12.wyil
DEBUG: recording type mymethod := method()->(int) where ()
DECL_lambda:
  name     : 
  captures : [&int x = *:new 3]
  type     : method()->(int)
  types    : null
  params   : ()
  body    : *x
  returns : ()
  string  : 27(310, 311, 312, 313, 314, 315, 304, 398)
wy2boogie.translate.NotImplementedYet: indirect invoke with 0 args at (121..123)
	at wy2boogie.translate.Wyil2Boogie.boogieIndirectInvokeExpr(Wyil2Boogie.java:1773)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1508)
	at wy2boogie.translate.Wyil2Boogie.writeAllocations(Wyil2Boogie.java:1022)
	at wy2boogie.translate.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:1456)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:866)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:485)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Lambda_Valid_2.whiley =====

GOT: ./Lambda_Valid_2.wyil
DEBUG: recording type func := function(int)->(int) where ()
DECL_lambda:
  name     : 
  captures : [int y]
  type     : function(int)->(int)
  types    : null
  params   : (int x)
  body    :  + 
  returns : ()
  string  : 27(608, 609, 610, 611, 612, 613, 602, 982)
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Lambda_Valid_3.whiley =====

GOT: ./Lambda_Valid_3.wyil
DEBUG: recording type t_Reader := method(int)->(byte[]) where ()
DEBUG: recording type InputStream := {} where ()
DEBUG: recording type BufferState := &{,} where ()
DEBUG: recording type char := int where ( && )
DEBUG: recording type string := char[] where ()
mangle toByte : function(char)->(byte) to toByte$2
MUTATED INPUT v : char
wy2boogie.translate.NotImplementedYet: call to method (read) from inside an expression at (1432..1445)
	at wy2boogie.translate.Wyil2Boogie.boogieInvoke(Wyil2Boogie.java:1752)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1511)
	at wy2boogie.translate.Wyil2Boogie.declareLambdaFunction(Wyil2Boogie.java:2552)
	at wy2boogie.translate.Wyil2Boogie.access$1400(Wyil2Boogie.java:125)
	at wy2boogie.translate.Wyil2Boogie$4.visitLambda(Wyil2Boogie.java:2575)
	at wyil.util.AbstractVisitor.visitExpression(Unknown Source)
	at wyil.util.AbstractVisitor.visitExpressions(Unknown Source)
	at wyil.util.AbstractVisitor.visitRecordInitialiser(Unknown Source)
	at wyil.util.AbstractVisitor.visitNaryOperator(Unknown Source)
	at wyil.util.AbstractVisitor.visitExpression(Unknown Source)
	at wyil.util.AbstractVisitor.visitExpressions(Unknown Source)
	at wyil.util.AbstractVisitor.visitReturn(Unknown Source)
	at wyil.util.AbstractVisitor.visitStatement(Unknown Source)
	at wyil.util.AbstractVisitor.visitBlock(Unknown Source)
	at wyil.util.AbstractVisitor.visitStatement(Unknown Source)
	at wy2boogie.translate.Wyil2Boogie.declareFuncConstants(Wyil2Boogie.java:2580)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:430)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Lambda_Valid_4.whiley =====

GOT: ./Lambda_Valid_4.wyil
DEBUG: recording type InputStream := {,} where ()
DEBUG: recording type BufferState := &{,} where ()
DEBUG: recording type char := int where ( && )
DEBUG: recording type string := char[] where ()
mangle toByte : function(char)->(byte) to toByte$2
mangle read : method(string)->(byte[]) to read$2
MUTATED INPUT v : char
wy2boogie.translate.NotImplementedYet: call to method (read) from inside an expression at (1543..1556)
	at wy2boogie.translate.Wyil2Boogie.boogieInvoke(Wyil2Boogie.java:1752)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1511)
	at wy2boogie.translate.Wyil2Boogie.declareLambdaFunction(Wyil2Boogie.java:2552)
	at wy2boogie.translate.Wyil2Boogie.access$1400(Wyil2Boogie.java:125)
	at wy2boogie.translate.Wyil2Boogie$4.visitLambda(Wyil2Boogie.java:2575)
	at wyil.util.AbstractVisitor.visitExpression(Unknown Source)
	at wyil.util.AbstractVisitor.visitExpressions(Unknown Source)
	at wyil.util.AbstractVisitor.visitRecordInitialiser(Unknown Source)
	at wyil.util.AbstractVisitor.visitNaryOperator(Unknown Source)
	at wyil.util.AbstractVisitor.visitExpression(Unknown Source)
	at wyil.util.AbstractVisitor.visitExpressions(Unknown Source)
	at wyil.util.AbstractVisitor.visitReturn(Unknown Source)
	at wyil.util.AbstractVisitor.visitStatement(Unknown Source)
	at wyil.util.AbstractVisitor.visitBlock(Unknown Source)
	at wyil.util.AbstractVisitor.visitStatement(Unknown Source)
	at wy2boogie.translate.Wyil2Boogie.declareFuncConstants(Wyil2Boogie.java:2580)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:430)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Lambda_Valid_5.whiley =====

GOT: ./Lambda_Valid_5.wyil
wy2boogie.translate.NotImplementedYet: call to method (f) from inside an expression at (168..175)
	at wy2boogie.translate.Wyil2Boogie.boogieInvoke(Wyil2Boogie.java:1752)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1511)
	at wy2boogie.translate.Wyil2Boogie.declareLambdaFunction(Wyil2Boogie.java:2552)
	at wy2boogie.translate.Wyil2Boogie.access$1400(Wyil2Boogie.java:125)
	at wy2boogie.translate.Wyil2Boogie$4.visitLambda(Wyil2Boogie.java:2575)
	at wyil.util.AbstractVisitor.visitExpression(Unknown Source)
	at wyil.util.AbstractVisitor.visitExpressions(Unknown Source)
	at wyil.util.AbstractVisitor.visitInvoke(Unknown Source)
	at wyil.util.AbstractVisitor.visitNaryOperator(Unknown Source)
	at wyil.util.AbstractVisitor.visitExpression(Unknown Source)
	at wyil.util.AbstractVisitor.visitVariable(Unknown Source)
	at wyil.util.AbstractVisitor.visitStatement(Unknown Source)
	at wyil.util.AbstractVisitor.visitBlock(Unknown Source)
	at wyil.util.AbstractVisitor.visitStatement(Unknown Source)
	at wy2boogie.translate.Wyil2Boogie.declareFuncConstants(Wyil2Boogie.java:2580)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:430)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Lambda_Valid_6.whiley =====

GOT: ./Lambda_Valid_6.wyil
DEBUG: recording type func_t := function(int)->(int) where ()
DECL_lambda:
  name     : 
  captures : []
  type     : function(int)->(int)
  types    : null
  params   : (int x)
  body    : f( + )
  returns : ()
  string  : 27(543, 544, 545, 546, 547, 548, 535, 695)
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Lambda_Valid_7.whiley =====

GOT: ./Lambda_Valid_7.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type func_t := function(int)->(int) where ()
DECL_lambda:
  name     : 
  captures : []
  type     : function(nat)->(int)
  types    : null
  params   : (nat x)
  body    : f( + )
  returns : ()
  string  : 27(748, 749, 750, 751, 752, 753, 740, 904)
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Lambda_Valid_8.whiley =====

GOT: ./Lambda_Valid_8.wyil
DECL_lambda:
  name     : 
  captures : [int x]
  type     : function(int)->(int)
  types    : null
  params   : (int y)
  body    : g(x,y)
  returns : ()
  string  : 27(718, 719, 720, 721, 722, 723, 710, 1091)
DECL_lambda:
  name     : 
  captures : [int y]
  type     : function(int)->(int)
  types    : null
  params   : (int x)
  body    : g(x,y)
  returns : ()
  string  : 27(827, 828, 829, 830, 831, 832, 819, 1095)
DEBUG: recording type func := function(int)->(int) where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 4 verified, 0 errors
===== Lambda_Valid_9.whiley =====

GOT: ./Lambda_Valid_9.wyil
DEBUG: recording type Point := {,,,} where ()
DEBUG: Expr.LambdaAccess:
  name     : toString
  paraTypes: ()
  signature: function(Point)->(int)
  type     : function(Point)->(int)
  types    : null
  data    : [0]
  string  : 219(980, 985, 1220):[B@7bab3f1a
DEBUG: Expr.LambdaAccess:
  name     : getX
  paraTypes: ()
  signature: function(Point)->(int)
  type     : function(Point)->(int)
  types    : null
  data    : [0]
  string  : 219(998, 1003, 1222):[B@6221a451
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 4 verified, 0 errors
===== LengthOf_Valid_1.whiley =====

GOT: ./LengthOf_Valid_1.wyil
DEBUG: recording type list := int[]|bool[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== LengthOf_Valid_4.whiley =====

GOT: ./LengthOf_Valid_4.wyil
DEBUG: recording type listibr := int[]|bool[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== LengthOf_Valid_5.whiley =====

GOT: ./LengthOf_Valid_5.wyil
DEBUG: recording type list := int[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Lifetime_Lambda_Valid_1.whiley =====

GOT: ./Lifetime_Lambda_Valid_1.wyil
DEBUG: recording type meth := method<a,b>(&a:int,&b:int)->(&a:int) where ()
DECL_lambda:
  name     : 
  captures : []
  type     : method<a,b>(&a:int,&b:int)->(&a:int)
  types    : null
  params   : (&a:int x,&b:int y)
  body    : a:new 1
  returns : ()
  string  : 27(500, 501, 502, 503, 504, 505, 494, 637)
DECL_lambda:
  name     : 
  captures : []
  type     : method<a,b>(&a:int,&b:int)->(&*:int)
  types    : null
  params   : (&a:int x,&b:int y)
  body    : *:new 1
  returns : ()
  string  : 27(600, 601, 602, 603, 604, 605, 593, 645)
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Lifetime_Lambda_Valid_1.bpl(12,117): Error: cannot refer to a global variable in this context: ref__0
Lifetime_Lambda_Valid_1.bpl(15,117): Error: cannot refer to a global variable in this context: ref__1
2 name resolution errors detected in Lifetime_Lambda_Valid_1.bpl
===== Lifetime_Lambda_Valid_2.whiley =====

GOT: ./Lifetime_Lambda_Valid_2.wyil
./Lifetime_Lambda_Valid_2.whiley:7: expected type meth2, found method<aa,bb>(&aa:int,&bb:int)->(int)
    meth2 m2 = &<aa, bb>(&aa:int x, &bb:int y -> *(new 1))
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
===== Lifetime_Lambda_Valid_3.whiley =====

GOT: ./Lifetime_Lambda_Valid_3.wyil
DEBUG: recording type myint := int where ()
DECL_lambda:
  name     : 
  captures : []
  type     : method()->(&*:int)
  types    : null
  params   : ()
  body    : *:new 1
  returns : ()
  string  : 27(406, 407, 408, 409, 410, 411, 399, 643)
wy2boogie.translate.NotImplementedYet: indirect invoke with 0 args at (221..223)
	at wy2boogie.translate.Wyil2Boogie.boogieIndirectInvokeExpr(Wyil2Boogie.java:1773)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1508)
	at wy2boogie.translate.Wyil2Boogie.writeAllocations(Wyil2Boogie.java:1022)
	at wy2boogie.translate.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:1456)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:866)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:485)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Lifetime_Lambda_Valid_4.whiley =====

GOT: ./Lifetime_Lambda_Valid_4.wyil
DEBUG: recording type mymethod := method<a>(&*:mymethod)->(&a:mymethod) where ()
DEBUG: Expr.LambdaAccess:
  name     : m
  paraTypes: ()
  signature: method<a>(&*:mymethod)->(&a:mymethod)
  type     : method<a>(&*:mymethod)->(&a:mymethod)
  types    : null
  data    : [0]
  string  : 219(1024, 1029, 1681):[B@16eb3ea3
wy2boogie.translate.NotImplementedYet: local var y has multiple types at (298..332)
	at wy2boogie.translate.Wyil2Boogie$2.visitVariable(Wyil2Boogie.java:719)
	at wyil.util.AbstractVisitor.visitStatement(Unknown Source)
	at wyil.util.AbstractVisitor.visitBlock(Unknown Source)
	at wy2boogie.translate.Wyil2Boogie.writeLocalVarDecls(Wyil2Boogie.java:742)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:472)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Lifetime_Lambda_Valid_5.whiley =====

GOT: ./Lifetime_Lambda_Valid_5.wyil
./Lifetime_Lambda_Valid_5.whiley:4: expected type method<a>(&a:int,&int)->(&int), found method<b>(&b:int,&b:int)->(&*:int)
    method<a>(&a:int, &int)->(&int) m1 = &<b>(&b:int x, &b:int y -> new 1)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
===== Lifetime_Lambda_Valid_6.whiley =====

GOT: ./Lifetime_Lambda_Valid_6.wyil
./Lifetime_Lambda_Valid_6.whiley:4: expected type method<a>(&a:int)->(&a:int), found method<b>(&b:int)->(&*:int)
    method<a>(&a:int)->(&a:int) m1 = &<b>(&b:int x -> new 1)
                                     ^^^^^^^^^^^^^^^^^^^^^^^
===== Lifetime_Lambda_Valid_7.whiley =====

GOT: ./Lifetime_Lambda_Valid_7.wyil
./Lifetime_Lambda_Valid_7.whiley:9: unrecognised term
    method[this]()->(int) m2 = &[this](->*x)
    ^^^^^^
===== Lifetime_Valid_1.whiley =====

GOT: ./Lifetime_Valid_1.wyil
wy2boogie.translate.NotImplementedYet: named block at (370..692)
	at wy2boogie.translate.Wyil2Boogie.writeNamedBlock(Wyil2Boogie.java:1304)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:833)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeNamedBlock(Wyil2Boogie.java:1303)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:833)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:485)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Lifetime_Valid_10.whiley =====

GOT: ./Lifetime_Valid_10.wyil
wy2boogie.translate.NotImplementedYet: named block at (191..312)
	at wy2boogie.translate.Wyil2Boogie.writeNamedBlock(Wyil2Boogie.java:1304)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:833)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeNamedBlock(Wyil2Boogie.java:1303)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:833)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:485)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Lifetime_Valid_11.whiley =====

GOT: ./Lifetime_Valid_11.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Lifetime_Valid_12.whiley =====

GOT: ./Lifetime_Valid_12.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Lifetime_Valid_13.whiley =====

GOT: ./Lifetime_Valid_13.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 4 verified, 0 errors
===== Lifetime_Valid_2.whiley =====

GOT: ./Lifetime_Valid_2.wyil
wy2boogie.translate.NotImplementedYet: named block at (292..551)
	at wy2boogie.translate.Wyil2Boogie.writeNamedBlock(Wyil2Boogie.java:1304)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:833)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeNamedBlock(Wyil2Boogie.java:1303)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:833)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:485)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Lifetime_Valid_3.whiley =====

GOT: ./Lifetime_Valid_3.wyil
wy2boogie.translate.NotImplementedYet: named block at (1013..1356)
	at wy2boogie.translate.Wyil2Boogie.writeNamedBlock(Wyil2Boogie.java:1304)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:833)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeNamedBlock(Wyil2Boogie.java:1303)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:833)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:485)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Lifetime_Valid_4.whiley =====

GOT: ./Lifetime_Valid_4.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Lifetime_Valid_5.whiley =====

GOT: ./Lifetime_Valid_5.wyil
wy2boogie.translate.NotImplementedYet: named block at (309..881)
	at wy2boogie.translate.Wyil2Boogie.writeNamedBlock(Wyil2Boogie.java:1304)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:833)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:485)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Lifetime_Valid_6.whiley =====

GOT: ./Lifetime_Valid_6.wyil
wy2boogie.translate.NotImplementedYet: named block at (233..766)
	at wy2boogie.translate.Wyil2Boogie.writeNamedBlock(Wyil2Boogie.java:1304)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:833)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:485)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Lifetime_Valid_7.whiley =====

GOT: ./Lifetime_Valid_7.wyil
mangle m : method<a>(&a:int,&*:int)->(int) to m$2
mangle m : method<a>(&*:int,&a:int)->(int) to m$3
mangle m2 : method<a,b>(&a:int,&b:int)->(int) to m2$2
wy2boogie.translate.NotImplementedYet: named block at (382..1104)
	at wy2boogie.translate.Wyil2Boogie.writeNamedBlock(Wyil2Boogie.java:1304)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:833)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:485)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Lifetime_Valid_8.whiley =====

GOT: ./Lifetime_Valid_8.wyil
./Lifetime_Valid_8.whiley:27: unable to resolve name (is ambiguous)
	found method Lifetime_Valid_8::m<a=this,b=*>(&a:int|&b:bool,&a:int,bool)->(&b:int)
	found method Lifetime_Valid_8::m<a=this,b=this>(&a:int|&b:bool,&a:int,bool)->(&b:int)
	found method Lifetime_Valid_8::m<a=this>(&*:int,&a:int,bool)->(&a:int)
	found method Lifetime_Valid_8::m<a=this>(&*:int,&a:int,int|bool)->(&a:int)
    &this:int p2 = m(*:new 1, this:new 2, true)
                   ^
===== Lifetime_Valid_9.whiley =====

GOT: ./Lifetime_Valid_9.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListAccess_Valid_1.whiley =====

GOT: ./ListAccess_Valid_1.wyil
java.lang.IllegalArgumentException: function with no return values: 24(443, 305, 444, 445, 446, 447, 448)
	at wy2boogie.translate.Wyil2Boogie.writeFunction(Wyil2Boogie.java:594)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:445)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Error opening file "ListAccess_Valid_1.bpl": Could not find file "/Users/utting/git/whiley/WhileyCompiler/tests/valid/ListAccess_Valid_1.bpl".
===== ListAccess_Valid_3.whiley =====

GOT: ./ListAccess_Valid_3.wyil
java.lang.IllegalArgumentException: function with no return values: 24(1003, 756, 1004, 1005, 1006, 1007, 1008)
	at wy2boogie.translate.Wyil2Boogie.writeFunction(Wyil2Boogie.java:594)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:445)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Error opening file "ListAccess_Valid_3.bpl": Could not find file "/Users/utting/git/whiley/WhileyCompiler/tests/valid/ListAccess_Valid_3.bpl".
===== ListAccess_Valid_5.whiley =====

GOT: ./ListAccess_Valid_5.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListAccess_Valid_6.whiley =====

GOT: ./ListAccess_Valid_6.wyil
assuming lhs of ==> ! (isNull(r))
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ListAccess_Valid_6.bpl(40,13): Error BP5001: This assertion might not hold.
Execution trace:
    ListAccess_Valid_6.bpl(33,7): anon0
    ListAccess_Valid_6.bpl(36,5): anon5_LoopHead
    ListAccess_Valid_6.bpl(39,9): anon5_LoopBody
    ListAccess_Valid_6.bpl(40,13): anon6_Then

Boogie program verifier finished with 1 verified, 1 error

java.lang.NullPointerException
	at wy2boogie.core.BoogieExampleFile$BoogieModel.getValue(BoogieExampleFile.java:73)
	at wy2boogie.core.BoogieExampleFile$BoogieModel.concretise(BoogieExampleFile.java:105)
	at wy2boogie.core.BoogieExampleFile$BoogieModel.toString(BoogieExampleFile.java:129)
	at wy2boogie.core.BoogieExampleFile.toString(BoogieExampleFile.java:272)
	at wy2boogie.commands.BoogieCommand.translateCounterexample(BoogieCommand.java:251)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:126)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== ListAccess_Valid_8.whiley =====

GOT: ./ListAccess_Valid_8.wyil
MUTATED INPUT b : byte
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== ListAccess_Valid_9.whiley =====

GOT: ./ListAccess_Valid_9.wyil
DEBUG: recording type Rec := {} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ListAssign_Valid_1.whiley =====

GOT: ./ListAssign_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ListAssign_Valid_11.whiley =====

GOT: ./ListAssign_Valid_11.wyil
MUTATED INPUT a : int[]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListAssign_Valid_12.whiley =====

GOT: ./ListAssign_Valid_12.wyil
MUTATED INPUT xs : int[][]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListAssign_Valid_2.whiley =====

GOT: ./ListAssign_Valid_2.wyil
DEBUG: recording type intlist := int|int[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListAssign_Valid_3.whiley =====

GOT: ./ListAssign_Valid_3.wyil
MUTATED INPUT ls : int[][]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
ListAssign_Valid_3.bpl(69,5): Error BP5003: A postcondition might not hold on this return path.
ListAssign_Valid_3.bpl(62,5): Related location: This is the postcondition that might not hold.
Execution trace:
    ListAssign_Valid_3.bpl(66,5): anon0

Boogie program verifier finished with 2 verified, 1 error

===== ListAssign_Valid_4.whiley =====

GOT: ./ListAssign_Valid_4.wyil
DEBUG: recording type PieceKind := int where ( && )
DEBUG: recording type Piece := {,} where ()
DEBUG: recording type Board := {,} where ()
MUTATED INPUT board : Board
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListAssign_Valid_5.whiley =====

GOT: ./ListAssign_Valid_5.wyil
DEBUG: recording type nint := null|int where ()
MUTATED INPUT list : nint[][]
MUTATED INPUT list : nint[][]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListAssign_Valid_6.whiley =====

GOT: ./ListAssign_Valid_6.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ListAssign_Valid_7.whiley =====

GOT: ./ListAssign_Valid_7.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListAssign_Valid_8.whiley =====

GOT: ./ListAssign_Valid_8.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ListAssign_Valid_9.whiley =====

GOT: ./ListAssign_Valid_9.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListEmpty_Valid_1.whiley =====

GOT: ./ListEmpty_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListGenerator_Valid_1.whiley =====

GOT: ./ListGenerator_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListGenerator_Valid_10.whiley =====

GOT: ./ListGenerator_Valid_10.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListGenerator_Valid_11.whiley =====

GOT: ./ListGenerator_Valid_11.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ListGenerator_Valid_12.whiley =====

GOT: ./ListGenerator_Valid_12.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ListGenerator_Valid_2.whiley =====

GOT: ./ListGenerator_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListGenerator_Valid_3.whiley =====

GOT: ./ListGenerator_Valid_3.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListGenerator_Valid_5.whiley =====

GOT: ./ListGenerator_Valid_5.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListGenerator_Valid_6.whiley =====

GOT: ./ListGenerator_Valid_6.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListGenerator_Valid_7.whiley =====

GOT: ./ListGenerator_Valid_7.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListGenerator_Valid_8.whiley =====

GOT: ./ListGenerator_Valid_8.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListGenerator_Valid_9.whiley =====

GOT: ./ListGenerator_Valid_9.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListLength_Valid_1.whiley =====

GOT: ./ListLength_Valid_1.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ListLength_Valid_2.whiley =====

GOT: ./ListLength_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ListLength_Valid_3.whiley =====

GOT: ./ListLength_Valid_3.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== MessageRef_Valid_1.whiley =====

GOT: ./MessageRef_Valid_1.wyil
DEBUG: recording type MyProc := &{} where ()
DEBUG: recording type MyMeth := method(MyProc,int)->(int) where ()
wy2boogie.translate.NotImplementedYet: indirect invoke with 2 args at (199..207)
	at wy2boogie.translate.Wyil2Boogie.boogieIndirectInvokeExpr(Wyil2Boogie.java:1773)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1508)
	at wy2boogie.translate.Wyil2Boogie.writeAllocations(Wyil2Boogie.java:1022)
	at wy2boogie.translate.Wyil2Boogie.writeReturn(Wyil2Boogie.java:1348)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:846)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:485)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== MessageRef_Valid_2.whiley =====

GOT: ./MessageRef_Valid_2.wyil
DEBUG: recording type FileReader := &{} where ()
DEBUG: recording type Reader := {,} where ()
DEBUG: Expr.LambdaAccess:
  name     : read
  paraTypes: ()
  signature: method(FileReader,int)->(int)
  type     : method(FileReader,int)->(int)
  types    : null
  data    : [0]
  string  : 219(932, 937, 1168):[B@66f57048
wy2boogie.translate.NotImplementedYet: indirect invoke with 2 args at (452..466)
	at wy2boogie.translate.Wyil2Boogie.boogieIndirectInvokeExpr(Wyil2Boogie.java:1773)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1508)
	at wy2boogie.translate.Wyil2Boogie.writeAllocations(Wyil2Boogie.java:1022)
	at wy2boogie.translate.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:1456)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:866)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:485)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== MessageSend_Valid_1.whiley =====

GOT: ./MessageSend_Valid_1.wyil
DEBUG: recording type MyObject := &{} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== MessageSend_Valid_2.whiley =====

GOT: ./MessageSend_Valid_2.wyil
DEBUG: recording type Proc := &{} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
MessageSend_Valid_2.bpl(28,5): Error BP5003: A postcondition might not hold on this return path.
MessageSend_Valid_2.bpl(24,5): Related location: This is the postcondition that might not hold.
Execution trace:
    MessageSend_Valid_2.bpl(27,7): anon0

Boogie program verifier finished with 2 verified, 1 error

===== MessageSend_Valid_3.whiley =====

GOT: ./MessageSend_Valid_3.wyil
DEBUG: recording type Proc := &{} where ()
wy2boogie.translate.NotImplementedYet: call to method (get) from inside an expression at (131..136)
	at wy2boogie.translate.Wyil2Boogie.boogieInvoke(Wyil2Boogie.java:1752)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1511)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1490)
	at wy2boogie.translate.Wyil2Boogie.writeAllocations(Wyil2Boogie.java:1022)
	at wy2boogie.translate.Wyil2Boogie.writeReturn(Wyil2Boogie.java:1348)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:846)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:485)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== MessageSend_Valid_4.whiley =====

GOT: ./MessageSend_Valid_4.wyil
DEBUG: recording type Point := {,} where ()
DEBUG: recording type Proc := &{} where ()
wy2boogie.translate.NotImplementedYet: call to method (get) from inside an expression at (162..167)
	at wy2boogie.translate.Wyil2Boogie.boogieInvoke(Wyil2Boogie.java:1752)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1511)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at wy2boogie.translate.Wyil2Boogie.createRecordConstructor(Wyil2Boogie.java:2251)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1521)
	at wy2boogie.translate.Wyil2Boogie.writeAllocations(Wyil2Boogie.java:1022)
	at wy2boogie.translate.Wyil2Boogie.writeReturn(Wyil2Boogie.java:1348)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:846)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:485)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== MessageSend_Valid_5.whiley =====

GOT: ./MessageSend_Valid_5.wyil
DEBUG: recording type Sum := &{,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
MessageSend_Valid_5.bpl(61,5): Error BP5003: A postcondition might not hold on this return path.
MessageSend_Valid_5.bpl(57,5): Related location: This is the postcondition that might not hold.
Execution trace:
    MessageSend_Valid_5.bpl(60,7): anon0

Boogie program verifier finished with 3 verified, 1 error

===== MethodCall_Valid_1.whiley =====

GOT: ./MethodCall_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== MethodCall_Valid_2.whiley =====

GOT: ./MethodCall_Valid_2.wyil
wy2boogie.translate.NotImplementedYet: call to method (get) from inside an expression at (77..81)
	at wy2boogie.translate.Wyil2Boogie.boogieInvoke(Wyil2Boogie.java:1752)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1511)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1490)
	at wy2boogie.translate.Wyil2Boogie.writeAllocations(Wyil2Boogie.java:1022)
	at wy2boogie.translate.Wyil2Boogie.writeReturn(Wyil2Boogie.java:1348)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:846)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:485)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== MethodCall_Valid_3.whiley =====

GOT: ./MethodCall_Valid_3.wyil
DEBUG: recording type Point := {,} where ()
wy2boogie.translate.NotImplementedYet: call to method (get) from inside an expression at (106..110)
	at wy2boogie.translate.Wyil2Boogie.boogieInvoke(Wyil2Boogie.java:1752)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1511)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at wy2boogie.translate.Wyil2Boogie.createRecordConstructor(Wyil2Boogie.java:2251)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1521)
	at wy2boogie.translate.Wyil2Boogie.writeAllocations(Wyil2Boogie.java:1022)
	at wy2boogie.translate.Wyil2Boogie.writeReturn(Wyil2Boogie.java:1348)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:846)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:485)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== MethodCall_Valid_4.whiley =====

GOT: ./MethodCall_Valid_4.wyil
DEBUG: recording type Sum := &{,} where ()
DEBUG: recording type pst := method(int[])->(int) where ()
DEBUG: Expr.LambdaAccess:
  name     : parSum
  paraTypes: ()
  signature: method(int[])->(int)
  type     : method(int[])->(int)
  types    : null
  data    : [0]
  string  : 219(2637, 2642, 2797):[B@6aa61224
DEBUG: Expr.LambdaAccess:
  name     : parSum
  paraTypes: ()
  signature: method(int[])->(int)
  type     : method(int[])->(int)
  types    : null
  data    : [0]
  string  : 219(2637, 2642, 2797):[B@6aa61224
DEBUG: Expr.LambdaAccess:
  name     : seqSum
  paraTypes: ()
  signature: method(int[])->(int)
  type     : method(int[])->(int)
  types    : null
  data    : [0]
  string  : 219(2711, 2716, 2801):[B@41005828
DEBUG: Expr.LambdaAccess:
  name     : seqSum
  paraTypes: ()
  signature: method(int[])->(int)
  type     : method(int[])->(int)
  types    : null
  data    : [0]
  string  : 219(2711, 2716, 2801):[B@41005828
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
MethodCall_Valid_4.bpl(169,96): Error: use of undeclared function: parSum
MethodCall_Valid_4.bpl(173,96): Error: use of undeclared function: seqSum
2 name resolution errors detected in MethodCall_Valid_4.bpl
===== MethodRef_Valid_1.whiley =====

GOT: ./MethodRef_Valid_1.wyil
DEBUG: recording type MyMeth := method(int)->(int) where ()
DEBUG: Expr.LambdaAccess:
  name     : read
  paraTypes: ()
  signature: method(int)->(int)
  type     : method(int)->(int)
  types    : null
  data    : [0]
  string  : 219(485, 490, 552):[B@4c39bec8
DEBUG: Expr.LambdaAccess:
  name     : read
  paraTypes: ()
  signature: method(int)->(int)
  type     : method(int)->(int)
  types    : null
  data    : [0]
  string  : 219(485, 490, 552):[B@4c39bec8
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
MethodRef_Valid_1.bpl(35,11): error: ident expected
1 parse errors detected in MethodRef_Valid_1.bpl
===== MethodRef_Valid_2.whiley =====

GOT: ./MethodRef_Valid_2.wyil
DEBUG: recording type Reader := {} where ()
DEBUG: Expr.LambdaAccess:
  name     : f
  paraTypes: ()
  signature: method(int)->(int)
  type     : method(int)->(int)
  types    : null
  data    : [0]
  string  : 219(602, 607, 709):[B@865dd6
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
MethodRef_Valid_2.bpl(53,91): Error: use of undeclared function: f
1 name resolution errors detected in MethodRef_Valid_2.bpl
===== Method_Valid_1.whiley =====

GOT: ./Method_Valid_1.wyil
DEBUG: recording type Piece := int where ( || )
DEBUG: recording type Board := Piece[] where ( == )
MUTATED INPUT b : Board
MUTATED INPUT b : Board
MUTATED INPUT b : Board
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 4 verified, 0 errors
===== MultiLineComment_Valid_1.whiley =====

GOT: ./MultiLineComment_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== MultiLineComment_Valid_2.whiley =====

GOT: ./MultiLineComment_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== NegationType_Valid_1.whiley =====

GOT: ./NegationType_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== NegationType_Valid_2.whiley =====

GOT: ./NegationType_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== NegationType_Valid_3.whiley =====

GOT: ./NegationType_Valid_3.wyil
./NegationType_Valid_3.whiley:3: expecting "Identifier" here
function f(int[] x) -> ((int[]|bool) & (int[]|int) r):
                                     ^
===== NegationType_Valid_4.whiley =====

GOT: ./NegationType_Valid_4.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== NegationType_Valid_5.whiley =====

GOT: ./NegationType_Valid_5.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== OpenRecord_Valid_1.whiley =====

GOT: ./OpenRecord_Valid_1.wyil
DEBUG: recording type OpenRecord := {} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== OpenRecord_Valid_10.whiley =====

GOT: ./OpenRecord_Valid_10.wyil
DEBUG: recording type string := int[] where ()
DEBUG: recording type Attribute := {} where ()
DEBUG: recording type CodeAttr := {,,,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== OpenRecord_Valid_11.whiley =====

GOT: ./OpenRecord_Valid_11.wyil
DEBUG: recording type SupertypeRecord := {} where ()
DEBUG: recording type SubtypeRecord := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== OpenRecord_Valid_2.whiley =====

GOT: ./OpenRecord_Valid_2.wyil
DEBUG: recording type string := int[] where ()
DEBUG: recording type char := int where ()
DEBUG: recording type Primitive := int where ( || )
DEBUG: recording type Class := {,} where ()
DEBUG: recording type Any := Primitive|Class where ()
DEBUG: recording type Unit := {,} where ()
DEBUG: recording type FieldIndex := {,,,,} where ()
DEBUG: recording type Bytecode := Unit|FieldIndex where ()
DEBUG: recording type Attribute := {} where ()
DEBUG: recording type CodeAttribute := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== OpenRecord_Valid_3.whiley =====

GOT: ./OpenRecord_Valid_3.wyil
DEBUG: recording type Object := {} where ()
DEBUG: Expr.LambdaAccess:
  name     : myFn
  paraTypes: ()
  signature: function(Object)->(int)
  type     : function(Object)->(int)
  types    : null
  data    : [0]
  string  : 219(597, 602, 678):[B@61d6015a
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== OpenRecord_Valid_4.whiley =====

GOT: ./OpenRecord_Valid_4.wyil
DEBUG: recording type OpenRecord := {} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== OpenRecord_Valid_5.whiley =====

GOT: ./OpenRecord_Valid_5.wyil
DEBUG: recording type Point := {,} where ()
DEBUG: recording type VecPoint := Point[]|Point where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== OpenRecord_Valid_6.whiley =====

GOT: ./OpenRecord_Valid_6.wyil
DEBUG: recording type Point := {,} where ()
DEBUG: recording type VecPoint := Point[]|Point where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== OpenRecord_Valid_9.whiley =====

GOT: ./OpenRecord_Valid_9.wyil
DEBUG: recording type PointAny := {,} where ()
DEBUG: recording type Point2D := {,} where ()
DEBUG: recording type Point3D := {,,} where ()
DEBUG: recording type Point := PointAny|Point2D|Point3D where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ProcessAccess_Valid_1.whiley =====

GOT: ./ProcessAccess_Valid_1.wyil
DEBUG: recording type etype := {,} where ()
DEBUG: recording type Ptype := &etype where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ProcessAccess_Valid_2.whiley =====

GOT: ./ProcessAccess_Valid_2.wyil
DEBUG: recording type state := {,} where ()
DEBUG: recording type pState := &state where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Process_Valid_1.whiley =====

GOT: ./Process_Valid_1.wyil
DEBUG: recording type state := {,} where ()
DEBUG: recording type pState := &state where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Process_Valid_10.whiley =====

GOT: ./Process_Valid_10.wyil
DEBUG: recording type Queue := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Process_Valid_10.bpl(29,5): Error BP5001: This assertion might not hold.
Execution trace:
    Process_Valid_10.bpl(28,13): anon0
Process_Valid_10.bpl(31,5): Error BP5003: A postcondition might not hold on this return path.
Process_Valid_10.bpl(25,5): Related location: This is the postcondition that might not hold.
Execution trace:
    Process_Valid_10.bpl(28,13): anon0
Process_Valid_10.bpl(49,5): Error BP5001: This assertion might not hold.
Execution trace:
    Process_Valid_10.bpl(49,5): anon0

Boogie program verifier finished with 2 verified, 3 errors

===== Process_Valid_11.whiley =====

GOT: ./Process_Valid_11.wyil
DEBUG: recording type state := {,} where ( < )
DEBUG: recording type pState := &state where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Process_Valid_12.whiley =====

GOT: ./Process_Valid_12.wyil
DEBUG: recording type state := {,} where ()
DEBUG: recording type pState := &state where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Process_Valid_2.whiley =====

GOT: ./Process_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Process_Valid_3.whiley =====

GOT: ./Process_Valid_3.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Process_Valid_4.whiley =====

GOT: ./Process_Valid_4.wyil
DEBUG: recording type MyProc := &{} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Process_Valid_5.whiley =====

GOT: ./Process_Valid_5.wyil
DEBUG: recording type MyProc := &{} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Process_Valid_6.whiley =====

GOT: ./Process_Valid_6.wyil
DEBUG: recording type Actor := {} where ()
wy2boogie.translate.NotImplementedYet: call to method (createActor) from inside an expression at (230..243)
	at wy2boogie.translate.Wyil2Boogie.boogieInvoke(Wyil2Boogie.java:1752)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1511)
	at wy2boogie.translate.Wyil2Boogie.boogieArrayGenerator(Wyil2Boogie.java:1721)
	at wy2boogie.translate.Wyil2Boogie.boogieExpr(Wyil2Boogie.java:1494)
	at wy2boogie.translate.Wyil2Boogie.writeAllocations(Wyil2Boogie.java:1022)
	at wy2boogie.translate.Wyil2Boogie.writeVariableInit(Wyil2Boogie.java:1456)
	at wy2boogie.translate.Wyil2Boogie.writeStatement(Wyil2Boogie.java:866)
	at wy2boogie.translate.Wyil2Boogie.writeBlock(Wyil2Boogie.java:768)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:485)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== Process_Valid_7.whiley =====

GOT: ./Process_Valid_7.wyil
DEBUG: recording type MyProc2 := &{} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Process_Valid_7.bpl(46,5): Error BP5003: A postcondition might not hold on this return path.
Process_Valid_7.bpl(42,5): Related location: This is the postcondition that might not hold.
Execution trace:
    Process_Valid_7.bpl(45,7): anon0

Boogie program verifier finished with 3 verified, 1 error

===== Process_Valid_8.whiley =====

GOT: ./Process_Valid_8.wyil
DEBUG: recording type MyProc2 := {} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Process_Valid_8.bpl(46,5): Error BP5003: A postcondition might not hold on this return path.
Process_Valid_8.bpl(42,5): Related location: This is the postcondition that might not hold.
Execution trace:
    Process_Valid_8.bpl(45,7): anon0

Boogie program verifier finished with 3 verified, 1 error

===== Process_Valid_9.whiley =====

GOT: ./Process_Valid_9.wyil
DEBUG: recording type Queue := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Process_Valid_9.bpl(29,5): Error BP5001: This assertion might not hold.
Execution trace:
    Process_Valid_9.bpl(28,13): anon0
Process_Valid_9.bpl(31,5): Error BP5003: A postcondition might not hold on this return path.
Process_Valid_9.bpl(25,5): Related location: This is the postcondition that might not hold.
Execution trace:
    Process_Valid_9.bpl(28,13): anon0
Process_Valid_9.bpl(49,5): Error BP5001: This assertion might not hold.
Execution trace:
    Process_Valid_9.bpl(49,5): anon0

Boogie program verifier finished with 3 verified, 3 errors

===== Property_Valid_1.whiley =====

GOT: ./Property_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Property_Valid_13.whiley =====

GOT: ./Property_Valid_13.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Property_Valid_2.whiley =====

GOT: ./Property_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Property_Valid_3.whiley =====

GOT: ./Property_Valid_3.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Property_Valid_4.whiley =====

GOT: ./Property_Valid_4.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Property_Valid_5.whiley =====

GOT: ./Property_Valid_5.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Property_Valid_6.whiley =====

GOT: ./Property_Valid_6.wyil
DEBUG: recording type nat := int where ( >= )
mangle absent : property(int[],int)->(bool) to absent$2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Property_Valid_7.whiley =====

GOT: ./Property_Valid_7.wyil
DEBUG: recording type nat := int where ( >= )
mangle max : function(int[])->(int) to max$2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Property_Valid_7.bpl(48,9): Error BP5004: This loop invariant might not hold on entry.
Execution trace:
    Property_Valid_7.bpl(42,7): anon0

Boogie program verifier finished with 1 verified, 1 error

===== Property_Valid_8.whiley =====

GOT: ./Property_Valid_8.wyil
DEBUG: recording type nat := int where (nat(x))
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Property_Valid_9.whiley =====

GOT: ./Property_Valid_9.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Quantifiers_Valid_1.whiley =====

GOT: ./Quantifiers_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Quantifiers_Valid_2.whiley =====

GOT: ./Quantifiers_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== RecordAccess_Valid_1.whiley =====

GOT: ./RecordAccess_Valid_1.wyil
DEBUG: recording type etype := {} where ()
DEBUG: recording type Ptype := &etype where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAssign_Valid_1.whiley =====

GOT: ./RecordAssign_Valid_1.wyil
DEBUG: recording type tac1tup := {,} where ( < )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAssign_Valid_10.whiley =====

GOT: ./RecordAssign_Valid_10.wyil
DEBUG: recording type bytes := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAssign_Valid_11.whiley =====

GOT: ./RecordAssign_Valid_11.wyil
./RecordAssign_Valid_11.whiley:17: expected type bool|bool, found int
        x.f = n
              ^
===== RecordAssign_Valid_12.whiley =====

GOT: ./RecordAssign_Valid_12.wyil
DEBUG: recording type tac1tup := {,} where ( < )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAssign_Valid_13.whiley =====

GOT: ./RecordAssign_Valid_13.wyil
DEBUG: recording type tac2ta := {,} where ( < )
DEBUG: recording type tac2tb := {,} where ( < )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAssign_Valid_14.whiley =====

GOT: ./RecordAssign_Valid_14.wyil
DEBUG: recording type Buffer := {,} where ()
MUTATED INPUT b : Buffer
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAssign_Valid_2.whiley =====

GOT: ./RecordAssign_Valid_2.wyil
DEBUG: recording type rec1 := {} where ()
DEBUG: recording type rec2 := {} where ()
MUTATED INPUT r : rec2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAssign_Valid_3.whiley =====

GOT: ./RecordAssign_Valid_3.wyil
DEBUG: recording type tac1tup := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAssign_Valid_4.whiley =====

GOT: ./RecordAssign_Valid_4.wyil
DEBUG: recording type tac2ta := {,} where ( < )
DEBUG: recording type tac2tb := {,} where ( < )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAssign_Valid_5.whiley =====

GOT: ./RecordAssign_Valid_5.wyil
DEBUG: recording type tac2ta := {,} where ()
DEBUG: recording type tac2tb := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAssign_Valid_6.whiley =====

GOT: ./RecordAssign_Valid_6.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
RecordAssign_Valid_6.bpl(27,5): Error BP5001: This assertion might not hold.
Execution trace:
    RecordAssign_Valid_6.bpl(25,7): anon0

Boogie program verifier finished with 0 verified, 1 error

===== RecordAssign_Valid_7.whiley =====

GOT: ./RecordAssign_Valid_7.wyil
DEBUG: recording type i8 := int where ( && )
DEBUG: recording type bytes := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAssign_Valid_8.whiley =====

GOT: ./RecordAssign_Valid_8.wyil
DEBUG: recording type bytes := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordAssign_Valid_9.whiley =====

GOT: ./RecordAssign_Valid_9.wyil
DEBUG: recording type i8 := int where ( && )
DEBUG: recording type bytes := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordCoercion_Valid_1.whiley =====

GOT: ./RecordCoercion_Valid_1.wyil
DEBUG: recording type Rec1 := {,} where ()
DEBUG: recording type Rec2 := {} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordDefine_Valid_1.whiley =====

GOT: ./RecordDefine_Valid_1.wyil
DEBUG: recording type Point := {,} where ( && )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordDefine_Valid_2.whiley =====

GOT: ./RecordDefine_Valid_2.wyil
DEBUG: recording type Point := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordDefine_Valid_3.whiley =====

GOT: ./RecordDefine_Valid_3.wyil
DEBUG: recording type Point := {,} where ( && )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecordSubtype_Valid_1.whiley =====

GOT: ./RecordSubtype_Valid_1.wyil
./RecordSubtype_Valid_1.whiley:12: expected type R4, found R1
    return x
           ^
===== RecordSubtype_Valid_2.whiley =====

GOT: ./RecordSubtype_Valid_2.wyil
./RecordSubtype_Valid_2.whiley:12: expected type List4, found List1
    return r
           ^
===== Record_Valid_1.whiley =====

GOT: ./Record_Valid_1.wyil
DEBUG: recording type Point := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Record_Valid_2.whiley =====

GOT: ./Record_Valid_2.wyil
DEBUG: recording type Point := {,} where ()
DEBUG: recording type Position := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Record_Valid_3.whiley =====

GOT: ./Record_Valid_3.wyil
DEBUG: recording type Point := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Record_Valid_4.whiley =====

GOT: ./Record_Valid_4.wyil
DEBUG: recording type neg := int where ( < )
DEBUG: recording type structA := {} where ()
DEBUG: recording type structB := {} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Record_Valid_5.whiley =====

GOT: ./Record_Valid_5.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type Card := {,} where ( && , && )
DEBUG: recording type Hand := {} where (sorted($.cards))
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Record_Valid_5.bpl(344,16): Verification of 'test' timed out after 10 seconds

Boogie program verifier finished with 1 verified, 0 errors, 1 time out
===== RecursiveType_Valid_1.whiley =====

GOT: ./RecursiveType_Valid_1.wyil
DEBUG: recording type Expr := int|{,,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== RecursiveType_Valid_10.whiley =====

GOT: ./RecursiveType_Valid_10.wyil
DEBUG: recording type binary := {,,} where ()
DEBUG: recording type expr := int|binary where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== RecursiveType_Valid_11.whiley =====

GOT: ./RecursiveType_Valid_11.wyil
DEBUG: recording type binop := {,,} where ( || )
DEBUG: recording type expr := int|binop where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== RecursiveType_Valid_12.whiley =====

GOT: ./RecursiveType_Valid_12.wyil
DEBUG: recording type Tree := null|Node where ()
DEBUG: recording type Node := {,,} where ( && )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
RecursiveType_Valid_12.bpl(71,5): Error BP5001: This assertion might not hold.
Execution trace:
    RecursiveType_Valid_12.bpl(65,5): anon0
RecursiveType_Valid_12.bpl(74,5): Error BP5001: This assertion might not hold.
Execution trace:
    RecursiveType_Valid_12.bpl(65,5): anon0

Boogie program verifier finished with 1 verified, 2 errors

java.lang.NullPointerException
	at wy2boogie.core.BoogieExampleFile$BoogieModel.getValue(BoogieExampleFile.java:73)
	at wy2boogie.core.BoogieExampleFile$BoogieModel.concretise(BoogieExampleFile.java:105)
	at wy2boogie.core.BoogieExampleFile$BoogieModel.toString(BoogieExampleFile.java:129)
	at wy2boogie.core.BoogieExampleFile.toString(BoogieExampleFile.java:272)
	at wy2boogie.commands.BoogieCommand.translateCounterexample(BoogieCommand.java:251)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:126)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== RecursiveType_Valid_13.whiley =====

GOT: ./RecursiveType_Valid_13.wyil
DEBUG: recording type binop := {,,} where ()
DEBUG: recording type expr := int|binop where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== RecursiveType_Valid_14.whiley =====

GOT: ./RecursiveType_Valid_14.wyil
DEBUG: recording type binop := {,,} where ( || )
DEBUG: recording type asbinop := {,,} where ( || )
DEBUG: recording type Expr := int|binop where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== RecursiveType_Valid_15.whiley =====

GOT: ./RecursiveType_Valid_15.wyil
DEBUG: recording type binop := {,,} where ()
DEBUG: recording type asbinop := {,,} where ()
DEBUG: recording type Expr := int|binop where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== RecursiveType_Valid_16.whiley =====

GOT: ./RecursiveType_Valid_16.wyil
DEBUG: recording type Expr := {}|{,,}|{} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== RecursiveType_Valid_17.whiley =====

GOT: ./RecursiveType_Valid_17.wyil
DEBUG: recording type State := {,} where ( && )
DEBUG: recording type Expr := {}|{,,}|{} where ()
wy2boogie.translate.NotImplementedYet: multiple return values:parseAddSubExpr
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:439)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== RecursiveType_Valid_18.whiley =====

GOT: ./RecursiveType_Valid_18.wyil
DEBUG: recording type State := {,} where ()
DEBUG: recording type Expr := {}|{,,}|{} where ()
wy2boogie.translate.NotImplementedYet: multiple return values:parseAddSubExpr
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:439)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== RecursiveType_Valid_19.whiley =====

GOT: ./RecursiveType_Valid_19.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type pos := int where ( > )
DEBUG: recording type expr := nat|{,} where ()
DEBUG: recording type posExpr := pos|{,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
RecursiveType_Valid_19.bpl(50,5): Error BP5003: A postcondition might not hold on this return path.
RecursiveType_Valid_19.bpl(44,5): Related location: This is the postcondition that might not hold.
Execution trace:
    RecursiveType_Valid_19.bpl(48,8): anon0

Boogie program verifier finished with 1 verified, 1 error

===== RecursiveType_Valid_2.whiley =====

GOT: ./RecursiveType_Valid_2.wyil
DEBUG: recording type Expr := int|Var|BinOp where ()
DEBUG: recording type BinOp := {,} where ()
DEBUG: recording type Var := {} where ()
DEBUG: recording type SyntaxError := {} where ()
DEBUG: recording type SExpr := SyntaxError|Expr where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== RecursiveType_Valid_20.whiley =====

GOT: ./RecursiveType_Valid_20.wyil
DEBUG: recording type nat := int where ()
DEBUG: recording type pos := int where ()
DEBUG: recording type expr := nat|{,} where ()
DEBUG: recording type posExpr := pos|{,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
RecursiveType_Valid_20.bpl(48,5): Error BP5003: A postcondition might not hold on this return path.
RecursiveType_Valid_20.bpl(42,5): Related location: This is the postcondition that might not hold.
Execution trace:
    RecursiveType_Valid_20.bpl(46,8): anon0

Boogie program verifier finished with 1 verified, 1 error

===== RecursiveType_Valid_21.whiley =====

GOT: ./RecursiveType_Valid_21.wyil
DEBUG: recording type Link := {,} where ()
DEBUG: recording type LinkedList := null|Link where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecursiveType_Valid_22.whiley =====

GOT: ./RecursiveType_Valid_22.wyil
DEBUG: recording type SortedList := null|SortedListNode where ()
DEBUG: recording type SortedListNode := {,} where ( || )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
RecursiveType_Valid_22.bpl(105,5): Error BP5001: This assertion might not hold.
Execution trace:
    RecursiveType_Valid_22.bpl(103,5): anon0
RecursiveType_Valid_22.bpl(107,5): Error BP5001: This assertion might not hold.
Execution trace:
    RecursiveType_Valid_22.bpl(103,5): anon0
RecursiveType_Valid_22.bpl(109,5): Error BP5001: This assertion might not hold.
Execution trace:
    RecursiveType_Valid_22.bpl(103,5): anon0
RecursiveType_Valid_22.bpl(111,5): Error BP5001: This assertion might not hold.
Execution trace:
    RecursiveType_Valid_22.bpl(103,5): anon0

Boogie program verifier finished with 2 verified, 4 errors

java.lang.NullPointerException
	at wy2boogie.core.BoogieExampleFile$BoogieModel.getValue(BoogieExampleFile.java:73)
	at wy2boogie.core.BoogieExampleFile$BoogieModel.concretise(BoogieExampleFile.java:105)
	at wy2boogie.core.BoogieExampleFile$BoogieModel.toString(BoogieExampleFile.java:129)
	at wy2boogie.core.BoogieExampleFile.toString(BoogieExampleFile.java:272)
	at wy2boogie.commands.BoogieCommand.translateCounterexample(BoogieCommand.java:251)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:126)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== RecursiveType_Valid_23.whiley =====

GOT: ./RecursiveType_Valid_23.wyil
DEBUG: recording type BinOp := {,} where ()
DEBUG: recording type Expr := BinOp|bool|Expr[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecursiveType_Valid_24.whiley =====

GOT: ./RecursiveType_Valid_24.wyil
DEBUG: recording type Link := null|Link[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecursiveType_Valid_25.whiley =====

GOT: ./RecursiveType_Valid_25.wyil
DEBUG: recording type Expr := bool|Expr[] where ()
DEBUG: recording type Value := bool|Value[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecursiveType_Valid_26.whiley =====

GOT: ./RecursiveType_Valid_26.wyil
DEBUG: recording type Expr := bool|{,}|Expr[] where ()
DEBUG: recording type SubExpr := bool|{,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecursiveType_Valid_27.whiley =====

GOT: ./RecursiveType_Valid_27.wyil
DEBUG: recording type Expr := int|Var|BinOp where ()
DEBUG: recording type BinOp := {,} where ()
DEBUG: recording type Var := {} where ()
DEBUG: recording type SyntaxError := {} where ()
DEBUG: recording type SExpr := SyntaxError|Expr where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== RecursiveType_Valid_28.whiley =====

GOT: ./RecursiveType_Valid_28.wyil
DEBUG: recording type Link := {,} where ()
DEBUG: recording type LinkedList := null|Link where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
RecursiveType_Valid_28.bpl(80,9): Error BP5001: This assertion might not hold.
Execution trace:
    RecursiveType_Valid_28.bpl(76,5): anon0
    RecursiveType_Valid_28.bpl(80,9): anon3_Else
RecursiveType_Valid_28.bpl(81,9): Error BP5001: This assertion might not hold.
Execution trace:
    RecursiveType_Valid_28.bpl(76,5): anon0
    RecursiveType_Valid_28.bpl(80,9): anon3_Else

Boogie program verifier finished with 2 verified, 2 errors

java.lang.NullPointerException
	at wy2boogie.core.BoogieExampleFile$BoogieModel.getValue(BoogieExampleFile.java:73)
	at wy2boogie.core.BoogieExampleFile$BoogieModel.concretise(BoogieExampleFile.java:105)
	at wy2boogie.core.BoogieExampleFile$BoogieModel.toString(BoogieExampleFile.java:129)
	at wy2boogie.core.BoogieExampleFile.toString(BoogieExampleFile.java:272)
	at wy2boogie.commands.BoogieCommand.translateCounterexample(BoogieCommand.java:251)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:126)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== RecursiveType_Valid_29.whiley =====

GOT: ./RecursiveType_Valid_29.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type Link := {,} where ()
DEBUG: recording type LinkedList := null|Link where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecursiveType_Valid_3.whiley =====

GOT: ./RecursiveType_Valid_3.wyil
DEBUG: recording type Expr := int|Expr[]|ListAccess where ()
DEBUG: recording type ListAccess := {,} where ()
DEBUG: recording type Value := int|Value[]|null where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecursiveType_Valid_4.whiley =====

GOT: ./RecursiveType_Valid_4.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type Expr := int|Expr[]|ListAccess where ()
DEBUG: recording type ListAccess := {,} where ()
DEBUG: recording type Value := int|Value[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecursiveType_Valid_5.whiley =====

GOT: ./RecursiveType_Valid_5.wyil
DEBUG: recording type Link := null|{,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== RecursiveType_Valid_6.whiley =====

GOT: ./RecursiveType_Valid_6.wyil
DEBUG: recording type binop := {,,} where ()
DEBUG: recording type expr := int|binop where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== RecursiveType_Valid_7.whiley =====

GOT: ./RecursiveType_Valid_7.wyil
DEBUG: recording type i16 := int where ( && )
DEBUG: recording type string := int[] where ()
DEBUG: recording type primitive_t := int where ( && )
DEBUG: recording type array_t := {} where ()
DEBUG: recording type class_t := {,} where ()
DEBUG: recording type ref_t := array_t|class_t where ()
DEBUG: recording type fun_t := {,} where ()
DEBUG: recording type jvm_t := primitive_t|ref_t where ()
DEBUG: recording type Unit := {,} where ()
DEBUG: recording type Branch := {,,} where ()
DEBUG: recording type VarIndex := {,,} where ()
DEBUG: recording type MethodIndex := {,,,,} where ()
DEBUG: recording type FieldIndex := {,,,,} where ()
DEBUG: recording type ConstIndex := {,,} where ()
DEBUG: recording type Bytecode := Unit|VarIndex|Branch|MethodIndex|FieldIndex|ConstIndex where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
RecursiveType_Valid_7.bpl(160,72): error: invalid Type
(0,0): error: the type of the last parameter is unspecified
2 parse errors detected in RecursiveType_Valid_7.bpl
===== RecursiveType_Valid_8.whiley =====

GOT: ./RecursiveType_Valid_8.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type expr := nat|{,,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== RecursiveType_Valid_9.whiley =====

GOT: ./RecursiveType_Valid_9.wyil
DEBUG: recording type nat := int where ()
DEBUG: recording type expr := nat|{,,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== ReferenceType_Valid_1.whiley =====

GOT: ./ReferenceType_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Reference_Valid_1.whiley =====

GOT: ./Reference_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Reference_Valid_2.whiley =====

GOT: ./Reference_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Reference_Valid_3.whiley =====

GOT: ./Reference_Valid_3.wyil
DEBUG: recording type Rec := &{} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Reference_Valid_4.whiley =====

GOT: ./Reference_Valid_4.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Reference_Valid_5.whiley =====

GOT: ./Reference_Valid_5.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Reference_Valid_6.whiley =====

GOT: ./Reference_Valid_6.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Reference_Valid_6.bpl(56,5): Error BP5001: This assertion might not hold.
Execution trace:
    Reference_Valid_6.bpl(44,12): anon0
Reference_Valid_6.bpl(57,5): Error BP5001: This assertion might not hold.
Execution trace:
    Reference_Valid_6.bpl(44,12): anon0

Boogie program verifier finished with 1 verified, 2 errors

===== Reference_Valid_7.whiley =====

GOT: ./Reference_Valid_7.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Reference_Valid_8.whiley =====

GOT: ./Reference_Valid_8.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Remainder_Valid_1.whiley =====

GOT: ./Remainder_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Requires_Valid_1.whiley =====

GOT: ./Requires_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Requires_Valid_2.whiley =====

GOT: ./Requires_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== Resolution_Valid_1.whiley =====

GOT: ./Resolution_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Return_Valid_1.whiley =====

GOT: ./Return_Valid_1.wyil
wy2boogie.translate.NotImplementedYet: multiple return values:f
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:439)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== SingleLineComment_Valid_1.whiley =====

GOT: ./SingleLineComment_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Skip_Valid_1.whiley =====

GOT: ./Skip_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== StaticVar_Valid_1.whiley =====

GOT: ./StaticVar_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== StaticVar_Valid_2.whiley =====

GOT: ./StaticVar_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== StaticVar_Valid_3.whiley =====

GOT: ./StaticVar_Valid_3.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== StaticVar_Valid_4.whiley =====

GOT: ./StaticVar_Valid_4.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== StaticVar_Valid_5.whiley =====

GOT: ./StaticVar_Valid_5.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== StaticVar_Valid_6.whiley =====

GOT: ./StaticVar_Valid_6.wyil
DEBUG: recording type Point := {,} where ( && )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== StaticVar_Valid_7.whiley =====

GOT: ./StaticVar_Valid_7.wyil
DEBUG: recording type Color := int where ( || )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== StaticVar_Valid_8.whiley =====

GOT: ./StaticVar_Valid_8.wyil
DEBUG: recording type Color := int where ( || )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== String_Valid_1.whiley =====

GOT: ./String_Valid_1.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== String_Valid_2.whiley =====

GOT: ./String_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== String_Valid_3.whiley =====

GOT: ./String_Valid_3.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== String_Valid_4.whiley =====

GOT: ./String_Valid_4.wyil
MUTATED INPUT str : int[]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
String_Valid_4.bpl(8,20): error: ")" expected
1 parse errors detected in String_Valid_4.bpl
===== String_Valid_5.whiley =====

GOT: ./String_Valid_5.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== String_Valid_6.whiley =====

GOT: ./String_Valid_6.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Subtype_Valid_1.whiley =====

GOT: ./Subtype_Valid_1.wyil
DEBUG: recording type sr3nat := int where ( > )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_10.whiley =====

GOT: ./Subtype_Valid_10.wyil
DEBUG: recording type sr5nat := int where ( > )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_11.whiley =====

GOT: ./Subtype_Valid_11.wyil
DEBUG: recording type sr5nat := int where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_12.whiley =====

GOT: ./Subtype_Valid_12.wyil
DEBUG: recording type sr6nat := int where ( > )
DEBUG: recording type sr6tup := {,} where ( > )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_13.whiley =====

GOT: ./Subtype_Valid_13.wyil
DEBUG: recording type sr6nat := int where ()
DEBUG: recording type sr6tup := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_14.whiley =====

GOT: ./Subtype_Valid_14.wyil
DEBUG: recording type sr7nat := int where ( > )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_2.whiley =====

GOT: ./Subtype_Valid_2.wyil
DEBUG: recording type sr7nat := int where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_3.whiley =====

GOT: ./Subtype_Valid_3.wyil
DEBUG: recording type sr8nat := int where ( > )
DEBUG: recording type sr8tup := {,} where ( > )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_4.whiley =====

GOT: ./Subtype_Valid_4.wyil
DEBUG: recording type sr8nat := int where ()
DEBUG: recording type sr8tup := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_5.whiley =====

GOT: ./Subtype_Valid_5.wyil
DEBUG: recording type sr9nat := int where ( > )
DEBUG: recording type sr9tup := {,} where ( > )
DEBUG: recording type sr9arr := sr9tup[] where (exists(int i = 238(1243, 826, 841)). == )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_6.whiley =====

GOT: ./Subtype_Valid_6.wyil
DEBUG: recording type sr9nat := int where ()
DEBUG: recording type sr9tup := {,} where ()
DEBUG: recording type sr9arr := {,}[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_7.whiley =====

GOT: ./Subtype_Valid_7.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_8.whiley =====

GOT: ./Subtype_Valid_8.wyil
DEBUG: recording type sr4list := int[] where ( > )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Subtype_Valid_9.whiley =====

GOT: ./Subtype_Valid_9.wyil
DEBUG: recording type sr4list := int[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Switch_Valid_1.whiley =====

GOT: ./Switch_Valid_1.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Switch_Valid_10.whiley =====

GOT: ./Switch_Valid_10.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Switch_Valid_11.whiley =====

GOT: ./Switch_Valid_11.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Switch_Valid_12.whiley =====

GOT: ./Switch_Valid_12.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Switch_Valid_13.whiley =====

GOT: ./Switch_Valid_13.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Switch_Valid_2.whiley =====

GOT: ./Switch_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Switch_Valid_3.whiley =====

GOT: ./Switch_Valid_3.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Switch_Valid_4.whiley =====

GOT: ./Switch_Valid_4.wyil
DEBUG: recording type RGB := int where ( || )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Switch_Valid_5.whiley =====

GOT: ./Switch_Valid_5.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
Switch_Valid_5.bpl(32,17): error: ")" expected
1 parse errors detected in Switch_Valid_5.bpl
===== Switch_Valid_6.whiley =====

GOT: ./Switch_Valid_6.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Switch_Valid_7.whiley =====

GOT: ./Switch_Valid_7.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Switch_Valid_8.whiley =====

GOT: ./Switch_Valid_8.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== Switch_Valid_9.whiley =====

GOT: ./Switch_Valid_9.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Syntax_Valid_1.whiley =====

GOT: ./Syntax_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== TypeEquals_Valid_1.whiley =====

GOT: ./TypeEquals_Valid_1.wyil
DEBUG: recording type bop := {,} where ( > )
DEBUG: recording type expr := int|bop where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_10.whiley =====

GOT: ./TypeEquals_Valid_10.wyil
DEBUG: recording type Rtypes := {,}|{,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_11.whiley =====

GOT: ./TypeEquals_Valid_11.wyil
DEBUG: recording type Rtypes := {,}|{,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_12.whiley =====

GOT: ./TypeEquals_Valid_12.wyil
DEBUG: recording type bop := {,} where ()
DEBUG: recording type expr := int|bop where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_14.whiley =====

GOT: ./TypeEquals_Valid_14.wyil
DEBUG: recording type test := {}|{} where ()
DEBUG: recording type src := test|int where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_15.whiley =====

GOT: ./TypeEquals_Valid_15.wyil
DEBUG: recording type src := int|int[]|int[][] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_16.whiley =====

GOT: ./TypeEquals_Valid_16.wyil
DEBUG: recording type src := int|src[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_17.whiley =====

GOT: ./TypeEquals_Valid_17.wyil
DEBUG: recording type rlist := bool|int[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_18.whiley =====

GOT: ./TypeEquals_Valid_18.wyil
DEBUG: recording type intr := int|bool where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_19.whiley =====

GOT: ./TypeEquals_Valid_19.wyil
DEBUG: recording type intr := bool|int where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_2.whiley =====

GOT: ./TypeEquals_Valid_2.wyil
DEBUG: recording type expr := {,}|{} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_21.whiley =====

GOT: ./TypeEquals_Valid_21.wyil
DEBUG: recording type expr := int[]|bool where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_23.whiley =====

GOT: ./TypeEquals_Valid_23.wyil
./TypeEquals_Valid_23.whiley:14: unable to resolve name (x)
    x = f(1)
    ^
===== TypeEquals_Valid_24.whiley =====

GOT: ./TypeEquals_Valid_24.wyil
DEBUG: recording type T := int[]|int where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_25.whiley =====

GOT: ./TypeEquals_Valid_25.wyil
./TypeEquals_Valid_25.whiley:28: invalid field access
                Value src = evaluate(e.src)
                                       ^^^
===== TypeEquals_Valid_27.whiley =====

GOT: ./TypeEquals_Valid_27.wyil
DEBUG: recording type Point := {,} where ()
DEBUG: recording type Point3D := {,,} where ()
DEBUG: recording type Points := Point|Point3D where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_28.whiley =====

GOT: ./TypeEquals_Valid_28.wyil
DEBUG: recording type Point := {,} where ()
DEBUG: recording type Point3D := {,,} where ()
DEBUG: recording type Points := Point|Point3D where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_29.whiley =====

GOT: ./TypeEquals_Valid_29.wyil
DEBUG: recording type RowCol := int where ()
DEBUG: recording type Pos := {,} where ()
DEBUG: recording type RankPos := {} where ()
DEBUG: recording type FilePos := {} where ()
DEBUG: recording type ShortPos := Pos|RankPos|FilePos|null where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== TypeEquals_Valid_3.whiley =====

GOT: ./TypeEquals_Valid_3.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_30.whiley =====

GOT: ./TypeEquals_Valid_30.wyil
./TypeEquals_Valid_30.whiley:24: invalid field access
                int src = evaluate(e.src)
                                     ^^^
===== TypeEquals_Valid_31.whiley =====

GOT: ./TypeEquals_Valid_31.wyil
DEBUG: recording type pos := int where ( > )
DEBUG: recording type rec1 := {,} where ()
DEBUG: recording type rec2 := {,} where ()
DEBUG: recording type rec12 := rec1|rec2 where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_32.whiley =====

GOT: ./TypeEquals_Valid_32.wyil
DEBUG: recording type expr := int[]|bool where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
TypeEquals_Valid_32.bpl(84,9): Error BP5003: A postcondition might not hold on this return path.
TypeEquals_Valid_32.bpl(76,5): Related location: This is the postcondition that might not hold.
Execution trace:
    TypeEquals_Valid_32.bpl(80,5): anon0
    TypeEquals_Valid_32.bpl(81,9): anon3_Then

Boogie program verifier finished with 2 verified, 1 error

===== TypeEquals_Valid_33.whiley =====

GOT: ./TypeEquals_Valid_33.wyil
./TypeEquals_Valid_33.whiley:16: ambiguous coercion required (int to expr)
    assume f(-1) == false
             ^^
===== TypeEquals_Valid_34.whiley =====

GOT: ./TypeEquals_Valid_34.wyil
DEBUG: recording type bop := {,} where ()
DEBUG: recording type expr := int|bop where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_35.whiley =====

GOT: ./TypeEquals_Valid_35.wyil
./TypeEquals_Valid_35.whiley:11: ambiguous coercion required (int to expr)
        e = e + 1
            ^^^^^
===== TypeEquals_Valid_36.whiley =====

GOT: ./TypeEquals_Valid_36.wyil
DEBUG: recording type plist := int[] where ( && )
DEBUG: recording type expr := int[]|int where ()
DEBUG: recording type tup := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_37.whiley =====

GOT: ./TypeEquals_Valid_37.wyil
DEBUG: recording type plist := int[] where ()
DEBUG: recording type expr := int[]|int where ()
DEBUG: recording type tup := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_38.whiley =====

GOT: ./TypeEquals_Valid_38.wyil
DEBUG: recording type expr := int[]|int where ()
DEBUG: recording type tup := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_39.whiley =====

GOT: ./TypeEquals_Valid_39.wyil
DEBUG: recording type pos := bool where ()
DEBUG: recording type neg := int where ( < )
DEBUG: recording type expr := pos|neg where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_40.whiley =====

GOT: ./TypeEquals_Valid_40.wyil
DEBUG: recording type pos := bool where ()
DEBUG: recording type neg := int where ()
DEBUG: recording type expr := pos|neg|int[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_41.whiley =====

GOT: ./TypeEquals_Valid_41.wyil
./TypeEquals_Valid_41.whiley:14: unable to resolve name (x)
    x = f(1)
    ^
===== TypeEquals_Valid_42.whiley =====

GOT: ./TypeEquals_Valid_42.wyil
DEBUG: recording type bop := {,} where ()
DEBUG: recording type expr := int|bop where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_43.whiley =====

GOT: ./TypeEquals_Valid_43.wyil
DEBUG: recording type imsg := int|{} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_44.whiley =====

GOT: ./TypeEquals_Valid_44.wyil
DEBUG: recording type imsg := int|{}|{} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_45.whiley =====

GOT: ./TypeEquals_Valid_45.wyil
DEBUG: recording type pos := int where ( > )
DEBUG: recording type neg := int where ( < )
DEBUG: recording type intlist := pos|neg|int[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_46.whiley =====

GOT: ./TypeEquals_Valid_46.wyil
DEBUG: recording type pos := int where ()
DEBUG: recording type neg := int where ()
DEBUG: recording type intlist := pos|neg|int[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_47.whiley =====

GOT: ./TypeEquals_Valid_47.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type T := int|int[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_48.whiley =====

GOT: ./TypeEquals_Valid_48.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_49.whiley =====

GOT: ./TypeEquals_Valid_49.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_5.whiley =====

GOT: ./TypeEquals_Valid_5.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_50.whiley =====

GOT: ./TypeEquals_Valid_50.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_51.whiley =====

GOT: ./TypeEquals_Valid_51.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_52.whiley =====

GOT: ./TypeEquals_Valid_52.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_53.whiley =====

GOT: ./TypeEquals_Valid_53.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_54.whiley =====

GOT: ./TypeEquals_Valid_54.wyil
MUTATED INPUT x : int|null
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_55.whiley =====

GOT: ./TypeEquals_Valid_55.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_56.whiley =====

GOT: ./TypeEquals_Valid_56.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_57.whiley =====

GOT: ./TypeEquals_Valid_57.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_58.whiley =====

GOT: ./TypeEquals_Valid_58.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
TypeEquals_Valid_58.bpl(68,5): Error BP5001: This assertion might not hold.
Execution trace:
    TypeEquals_Valid_58.bpl(62,8): anon0
TypeEquals_Valid_58.bpl(72,5): Error BP5001: This assertion might not hold.
Execution trace:
    TypeEquals_Valid_58.bpl(62,8): anon0

Boogie program verifier finished with 1 verified, 2 errors

java.lang.NullPointerException
	at wy2boogie.core.BoogieExampleFile$BoogieModel.getValue(BoogieExampleFile.java:73)
	at wy2boogie.core.BoogieExampleFile$BoogieModel.concretise(BoogieExampleFile.java:105)
	at wy2boogie.core.BoogieExampleFile$BoogieModel.stringifyRecord(BoogieExampleFile.java:170)
	at wy2boogie.core.BoogieExampleFile$BoogieModel.toString(BoogieExampleFile.java:127)
	at wy2boogie.core.BoogieExampleFile.toString(BoogieExampleFile.java:272)
	at wy2boogie.commands.BoogieCommand.translateCounterexample(BoogieCommand.java:251)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:126)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== TypeEquals_Valid_59.whiley =====

GOT: ./TypeEquals_Valid_59.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
TypeEquals_Valid_59.bpl(68,5): Error BP5001: This assertion might not hold.
Execution trace:
    TypeEquals_Valid_59.bpl(62,8): anon0
TypeEquals_Valid_59.bpl(72,5): Error BP5001: This assertion might not hold.
Execution trace:
    TypeEquals_Valid_59.bpl(62,8): anon0

Boogie program verifier finished with 1 verified, 2 errors

java.lang.NullPointerException
	at wy2boogie.core.BoogieExampleFile$BoogieModel.getValue(BoogieExampleFile.java:73)
	at wy2boogie.core.BoogieExampleFile$BoogieModel.concretise(BoogieExampleFile.java:105)
	at wy2boogie.core.BoogieExampleFile$BoogieModel.toString(BoogieExampleFile.java:129)
	at wy2boogie.core.BoogieExampleFile.toString(BoogieExampleFile.java:272)
	at wy2boogie.commands.BoogieCommand.translateCounterexample(BoogieCommand.java:251)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:126)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== TypeEquals_Valid_6.whiley =====

GOT: ./TypeEquals_Valid_6.wyil
DEBUG: recording type SyntaxError := {} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== TypeEquals_Valid_7.whiley =====

GOT: ./TypeEquals_Valid_7.wyil
DEBUG: recording type intbool := bool|int where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== TypeEquals_Valid_9.whiley =====

GOT: ./TypeEquals_Valid_9.wyil
DEBUG: recording type expr := int[]|int where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_1.whiley =====

GOT: ./UnionType_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== UnionType_Valid_10.whiley =====

GOT: ./UnionType_Valid_10.wyil
DEBUG: recording type tenup := int where ()
DEBUG: recording type msg1 := {,} where ()
DEBUG: recording type msg2 := {} where ()
DEBUG: recording type msgType := msg1|msg2 where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_11.whiley =====

GOT: ./UnionType_Valid_11.wyil
DEBUG: recording type tenup := int where ( > )
DEBUG: recording type msg1 := {,} where ()
DEBUG: recording type msg2 := {} where ()
DEBUG: recording type msgType := msg1|msg2 where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_12.whiley =====

GOT: ./UnionType_Valid_12.wyil
DEBUG: recording type MsgMode := {,} where ()
DEBUG: recording type IntList := {,}|MsgMode where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== UnionType_Valid_13.whiley =====

GOT: ./UnionType_Valid_13.wyil
DEBUG: recording type tenup := int where ()
DEBUG: recording type msg1 := {,} where ()
DEBUG: recording type msg2 := {} where ()
DEBUG: recording type msgType := msg1|msg2 where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_14.whiley =====

GOT: ./UnionType_Valid_14.wyil
DEBUG: recording type BOp := int where ( || )
DEBUG: recording type BinOp := {,,} where ()
DEBUG: recording type ListAccess := {,} where ()
DEBUG: recording type Expr := int|BinOp|Expr[]|ListAccess where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_15.whiley =====

GOT: ./UnionType_Valid_15.wyil
DEBUG: recording type msg1 := {,} where ()
DEBUG: recording type msg2 := {,} where ()
DEBUG: recording type msgType := msg1|msg2 where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_16.whiley =====

GOT: ./UnionType_Valid_16.wyil
DEBUG: recording type IntList := {} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== UnionType_Valid_17.whiley =====

GOT: ./UnionType_Valid_17.wyil
DEBUG: recording type IntList := int|int[] where ()
wy2boogie.translate.NotImplementedYet: local var result has multiple types at (276..295)
	at wy2boogie.translate.Wyil2Boogie$2.visitVariable(Wyil2Boogie.java:719)
	at wyil.util.AbstractVisitor.visitStatement(Unknown Source)
	at wyil.util.AbstractVisitor.visitBlock(Unknown Source)
	at wyil.util.AbstractVisitor.visitStatement(Unknown Source)
	at wyil.util.AbstractVisitor.visitIfElse(Unknown Source)
	at wyil.util.AbstractVisitor.visitStatement(Unknown Source)
	at wyil.util.AbstractVisitor.visitBlock(Unknown Source)
	at wy2boogie.translate.Wyil2Boogie.writeLocalVarDecls(Wyil2Boogie.java:742)
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:472)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== UnionType_Valid_18.whiley =====

GOT: ./UnionType_Valid_18.wyil
DEBUG: recording type utr12nat := int where ( >= )
DEBUG: recording type intList := utr12nat|int[] where ()
DEBUG: recording type tupper := {,} where ( && )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_19.whiley =====

GOT: ./UnionType_Valid_19.wyil
DEBUG: recording type utr12nat := int where ()
DEBUG: recording type intList := utr12nat|int[] where ()
DEBUG: recording type tupper := {,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_2.whiley =====

GOT: ./UnionType_Valid_2.wyil
DEBUG: recording type char := int where ( && )
DEBUG: recording type State := {,} where ( >= )
DEBUG: recording type Expr := int|{} where ()
DEBUG: recording type SyntaxError := {} where ()
DEBUG: recording type SExpr := SyntaxError|Expr where ()
wy2boogie.translate.NotImplementedYet: multiple return values:parseTerm
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:439)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== UnionType_Valid_20.whiley =====

GOT: ./UnionType_Valid_20.wyil
DEBUG: recording type i16 := int where ( && )
DEBUG: recording type immStoreCode := int where ( && )
DEBUG: recording type storeCode := int where ( && )
DEBUG: recording type STORE := {,} where ()
DEBUG: recording type branchCode := int where ( && )
DEBUG: recording type BRANCH := {,} where ()
DEBUG: recording type byteCode := STORE|BRANCH where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_21.whiley =====

GOT: ./UnionType_Valid_21.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type nlist := nat|int[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_22.whiley =====

GOT: ./UnionType_Valid_22.wyil
DEBUG: recording type nat := int where ( >= )
DEBUG: recording type nlist := int|nat[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_23.whiley =====

GOT: ./UnionType_Valid_23.wyil
DEBUG: recording type IntList := {,}|{,} where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_24.whiley =====

GOT: ./UnionType_Valid_24.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== UnionType_Valid_25.whiley =====

GOT: ./UnionType_Valid_25.wyil
DEBUG: recording type nintarr := bool[]|int[] where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== UnionType_Valid_26.whiley =====

GOT: ./UnionType_Valid_26.wyil
./UnionType_Valid_26.whiley:10: internal failure, extracted empty type (int&(bool-int)=>void)
    assume *ptr == 123
           ^^^^
===== UnionType_Valid_3.whiley =====

GOT: ./UnionType_Valid_3.wyil
DEBUG: recording type TYPE := null|int where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_4.whiley =====

GOT: ./UnionType_Valid_4.wyil
DEBUG: recording type IntBool := int|bool where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_5.whiley =====

GOT: ./UnionType_Valid_5.wyil
DEBUG: recording type ur4nat := int where ( > )
DEBUG: recording type tur4nat := int where ( > )
DEBUG: recording type wur4nat := ur4nat|tur4nat where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_6.whiley =====

GOT: ./UnionType_Valid_6.wyil
DEBUG: recording type ur4nat := int where ()
DEBUG: recording type tur4nat := int where ()
DEBUG: recording type wur4nat := ur4nat|tur4nat where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_7.whiley =====

GOT: ./UnionType_Valid_7.wyil
DEBUG: recording type msgType1 := {,} where ( == )
DEBUG: recording type msgType2 := {,,} where ( == )
DEBUG: recording type msgType := msgType1|msgType2 where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_8.whiley =====

GOT: ./UnionType_Valid_8.wyil
DEBUG: recording type msgType1 := {,} where ()
DEBUG: recording type msgType2 := {,,} where ()
DEBUG: recording type msgType := msgType1|msgType2 where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== UnionType_Valid_9.whiley =====

GOT: ./UnionType_Valid_9.wyil
DEBUG: recording type tenup := int where ( > )
DEBUG: recording type msg1 := {,} where ()
DEBUG: recording type msg2 := {} where ()
DEBUG: recording type msgType := msg1|msg2 where ()
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== Update_Valid_2.whiley =====

GOT: ./Update_Valid_2.wyil
DEBUG: recording type list := int[] where ()
MUTATED INPUT l : list
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== VarDecl_Valid_1.whiley =====

GOT: ./VarDecl_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== VarDecl_Valid_2.whiley =====

GOT: ./VarDecl_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== VarDecl_Valid_3.whiley =====

GOT: ./VarDecl_Valid_3.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== VarDecl_Valid_4.whiley =====

GOT: ./VarDecl_Valid_4.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_1.whiley =====

GOT: ./While_Valid_1.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_10.whiley =====

GOT: ./While_Valid_10.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_11.whiley =====

GOT: ./While_Valid_11.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_11.bpl(62,5): Error BP5003: A postcondition might not hold on this return path.
While_Valid_11.bpl(32,5): Related location: This is the postcondition that might not hold.
Execution trace:
    While_Valid_11.bpl(37,7): anon0
    While_Valid_11.bpl(44,5): anon5_LoopHead
    While_Valid_11.bpl(44,5): anon5_LoopDone

Boogie program verifier finished with 1 verified, 1 error

===== While_Valid_12.whiley =====

GOT: ./While_Valid_12.wyil
MUTATED INPUT v1 : int[]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_14.whiley =====

GOT: ./While_Valid_14.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_15.whiley =====

GOT: ./While_Valid_15.wyil
DEBUG: recording type Leaf := int where ()
DEBUG: recording type Link := {} where ()
DEBUG: recording type LinkedList := Leaf|Link where ()
MUTATED INPUT list : LinkedList
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_16.whiley =====

GOT: ./While_Valid_16.wyil
DEBUG: recording type nat := int where ( >= )
MUTATED INPUT src : nat[]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_17.whiley =====

GOT: ./While_Valid_17.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== While_Valid_18.whiley =====

GOT: ./While_Valid_18.wyil
DEBUG: recording type nat := int where ( >= )
MUTATED INPUT offset : nat
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_19.whiley =====

GOT: ./While_Valid_19.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== While_Valid_2.whiley =====

GOT: ./While_Valid_2.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_2.bpl(51,9): Error BP5005: This loop invariant might not be maintained by the loop.
Execution trace:
    While_Valid_2.bpl(38,8): anon0
    While_Valid_2.bpl(49,5): anon6_LoopHead
    While_Valid_2.bpl(54,9): anon6_LoopBody
    While_Valid_2.bpl(58,16): anon7_Then
While_Valid_2.bpl(52,9): Error BP5005: This loop invariant might not be maintained by the loop.
Execution trace:
    While_Valid_2.bpl(38,8): anon0
    While_Valid_2.bpl(49,5): anon6_LoopHead
    While_Valid_2.bpl(54,9): anon6_LoopBody
    While_Valid_2.bpl(60,13): anon7_Else
    While_Valid_2.bpl(62,20): anon8_Then

Boogie program verifier finished with 1 verified, 2 errors

===== While_Valid_20.whiley =====

GOT: ./While_Valid_20.wyil
DEBUG: recording type LinkedList := null|{,} where ()
MUTATED INPUT l : LinkedList
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_21.whiley =====

GOT: ./While_Valid_21.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_22.whiley =====

GOT: ./While_Valid_22.wyil
mangle max : function(int[])->(int) to max$2
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== While_Valid_23.whiley =====

GOT: ./While_Valid_23.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_23.bpl(40,9): Error BP5004: This loop invariant might not hold on entry.
Execution trace:
    While_Valid_23.bpl(34,5): anon0

Boogie program verifier finished with 1 verified, 1 error

===== While_Valid_24.whiley =====

GOT: ./While_Valid_24.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_25.whiley =====

GOT: ./While_Valid_25.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_26.whiley =====

GOT: ./While_Valid_26.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_27.whiley =====

GOT: ./While_Valid_27.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_28.whiley =====

GOT: ./While_Valid_28.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_29.whiley =====

GOT: ./While_Valid_29.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_3.whiley =====

GOT: ./While_Valid_3.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_30.whiley =====

GOT: ./While_Valid_30.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_31.whiley =====

GOT: ./While_Valid_31.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_32.whiley =====

GOT: ./While_Valid_32.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_33.whiley =====

GOT: ./While_Valid_33.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_34.whiley =====

GOT: ./While_Valid_34.wyil
assuming lhs of ==> isInt(last)
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_35.whiley =====

GOT: ./While_Valid_35.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_36.whiley =====

GOT: ./While_Valid_36.wyil
assuming lhs of ==> toInt(last) >= 0
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_37.whiley =====

GOT: ./While_Valid_37.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_38.whiley =====

GOT: ./While_Valid_38.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_39.whiley =====

GOT: ./While_Valid_39.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_40.whiley =====

GOT: ./While_Valid_40.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_41.whiley =====

GOT: ./While_Valid_41.wyil
MUTATED INPUT items : int[]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_42.whiley =====

GOT: ./While_Valid_42.wyil
MUTATED INPUT xs : int[]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_42.bpl(41,19): Error: more than one declaration of variable name: j
While_Valid_42.bpl(45,19): Error: more than one declaration of variable name: j
While_Valid_42.bpl(52,26): Error: more than one declaration of variable name: j
3 name resolution errors detected in While_Valid_42.bpl
===== While_Valid_43.whiley =====

GOT: ./While_Valid_43.wyil
MUTATED INPUT items : int[]
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_44.whiley =====

GOT: ./While_Valid_44.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_45.whiley =====

GOT: ./While_Valid_45.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_46.whiley =====

GOT: ./While_Valid_46.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_47.whiley =====

GOT: ./While_Valid_47.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_48.whiley =====

GOT: ./While_Valid_48.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
===== While_Valid_49.whiley =====

GOT: ./While_Valid_49.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_5.whiley =====

GOT: ./While_Valid_5.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_5.bpl(59,5): Error BP5003: A postcondition might not hold on this return path.
While_Valid_5.bpl(32,5): Related location: This is the postcondition that might not hold.
Execution trace:
    While_Valid_5.bpl(37,7): anon0
    While_Valid_5.bpl(44,5): anon4_LoopHead
    While_Valid_5.bpl(44,5): anon4_LoopDone

Boogie program verifier finished with 1 verified, 1 error

===== While_Valid_50.whiley =====

GOT: ./While_Valid_50.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_51.whiley =====

GOT: ./While_Valid_51.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_52.whiley =====

GOT: ./While_Valid_52.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_53.whiley =====

GOT: ./While_Valid_53.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_54.whiley =====

GOT: ./While_Valid_54.wyil
wy2boogie.translate.NotImplementedYet: multiple return values:permute
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:439)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== While_Valid_55.whiley =====

GOT: ./While_Valid_55.wyil
DEBUG: recording type nat := int where ( >= )
MUTATED INPUT n : int
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== While_Valid_56.whiley =====

GOT: ./While_Valid_56.wyil
DEBUG: recording type nat := int where ( >= )
MUTATED INPUT n : int
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 3 verified, 0 errors
===== While_Valid_57.whiley =====

GOT: ./While_Valid_57.wyil
DEBUG: recording type nat := int where ( >= )
wy2boogie.translate.NotImplementedYet: multiple return values:count_helper
	at wy2boogie.translate.Wyil2Boogie.writeProcedure(Wyil2Boogie.java:439)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:352)
	at wy2boogie.translate.Wyil2Boogie.apply(Wyil2Boogie.java:327)
	at wy2boogie.tasks.BoogieCompileTask.build(BoogieCompileTask.java:91)
	at wy2boogie.commands.BoogieCommand.translateWyilFile(BoogieCommand.java:207)
	at wy2boogie.commands.BoogieCommand.execute(BoogieCommand.java:129)
	at wycc.WyProject.execute(Unknown Source)
	at wycc.WyMain.execute(Unknown Source)
	at wycc.WyMain.main(Unknown Source)
===== While_Valid_58.whiley =====

GOT: ./While_Valid_58.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_59.whiley =====

GOT: ./While_Valid_59.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_59.bpl(57,5): Error BP5003: A postcondition might not hold on this return path.
While_Valid_59.bpl(36,5): Related location: This is the postcondition that might not hold.
Execution trace:
    While_Valid_59.bpl(42,7): anon0
    While_Valid_59.bpl(45,5): anon2_LoopHead
    While_Valid_59.bpl(45,5): anon2_LoopDone
While_Valid_59.bpl(78,5): Error BP5001: This assertion might not hold.
Execution trace:
    While_Valid_59.bpl(75,8): anon0
While_Valid_59.bpl(80,5): Error BP5001: This assertion might not hold.
Execution trace:
    While_Valid_59.bpl(75,8): anon0
While_Valid_59.bpl(82,5): Error BP5001: This assertion might not hold.
Execution trace:
    While_Valid_59.bpl(75,8): anon0
While_Valid_59.bpl(84,5): Error BP5001: This assertion might not hold.
Execution trace:
    While_Valid_59.bpl(75,8): anon0

Boogie program verifier finished with 0 verified, 5 errors

===== While_Valid_60.whiley =====

GOT: ./While_Valid_60.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_60.bpl(58,5): Error BP5003: A postcondition might not hold on this return path.
While_Valid_60.bpl(37,5): Related location: This is the postcondition that might not hold.
Execution trace:
    While_Valid_60.bpl(43,7): anon0
    While_Valid_60.bpl(46,5): anon2_LoopHead
    While_Valid_60.bpl(46,5): anon2_LoopDone
While_Valid_60.bpl(79,5): Error BP5001: This assertion might not hold.
Execution trace:
    While_Valid_60.bpl(76,8): anon0
While_Valid_60.bpl(81,5): Error BP5001: This assertion might not hold.
Execution trace:
    While_Valid_60.bpl(76,8): anon0
While_Valid_60.bpl(83,5): Error BP5001: This assertion might not hold.
Execution trace:
    While_Valid_60.bpl(76,8): anon0
While_Valid_60.bpl(85,5): Error BP5001: This assertion might not hold.
Execution trace:
    While_Valid_60.bpl(76,8): anon0

Boogie program verifier finished with 0 verified, 5 errors

===== While_Valid_61.whiley =====

GOT: ./While_Valid_61.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_61.bpl(71,5): Error BP5003: A postcondition might not hold on this return path.
While_Valid_61.bpl(30,5): Related location: This is the postcondition that might not hold.
Execution trace:
    While_Valid_61.bpl(36,7): anon0
    While_Valid_61.bpl(60,5): anon2_LoopHead
    While_Valid_61.bpl(60,5): anon2_LoopDone
While_Valid_61.bpl(92,5): Error BP5001: This assertion might not hold.
Execution trace:
    While_Valid_61.bpl(89,8): anon0
While_Valid_61.bpl(94,5): Error BP5001: This assertion might not hold.
Execution trace:
    While_Valid_61.bpl(89,8): anon0
While_Valid_61.bpl(96,5): Error BP5001: This assertion might not hold.
Execution trace:
    While_Valid_61.bpl(89,8): anon0
While_Valid_61.bpl(98,5): Error BP5001: This assertion might not hold.
Execution trace:
    While_Valid_61.bpl(89,8): anon0

Boogie program verifier finished with 0 verified, 5 errors

===== While_Valid_62.whiley =====

GOT: ./While_Valid_62.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_62.bpl(58,5): Error BP5003: A postcondition might not hold on this return path.
While_Valid_62.bpl(37,5): Related location: This is the postcondition that might not hold.
Execution trace:
    While_Valid_62.bpl(43,7): anon0
    While_Valid_62.bpl(46,5): anon2_LoopHead
    While_Valid_62.bpl(46,5): anon2_LoopDone
While_Valid_62.bpl(79,5): Error BP5001: This assertion might not hold.
Execution trace:
    While_Valid_62.bpl(76,8): anon0
While_Valid_62.bpl(81,5): Error BP5001: This assertion might not hold.
Execution trace:
    While_Valid_62.bpl(76,8): anon0
While_Valid_62.bpl(83,5): Error BP5001: This assertion might not hold.
Execution trace:
    While_Valid_62.bpl(76,8): anon0
While_Valid_62.bpl(85,5): Error BP5001: This assertion might not hold.
Execution trace:
    While_Valid_62.bpl(76,8): anon0

Boogie program verifier finished with 0 verified, 5 errors

===== While_Valid_63.whiley =====

GOT: ./While_Valid_63.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_64.whiley =====

GOT: ./While_Valid_64.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_65.whiley =====

GOT: ./While_Valid_65.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_66.whiley =====

GOT: ./While_Valid_66.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_67.whiley =====

GOT: ./While_Valid_67.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_68.whiley =====

GOT: ./While_Valid_68.wyil
DEBUG: recording type nat := int where ( >= )
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_69.whiley =====

GOT: ./While_Valid_69.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_69.bpl(61,5): Error BP5003: A postcondition might not hold on this return path.
While_Valid_69.bpl(29,5): Related location: This is the postcondition that might not hold.
Execution trace:
    While_Valid_69.bpl(34,8): anon0
    While_Valid_69.bpl(49,5): anon2_LoopHead
    While_Valid_69.bpl(49,5): anon2_LoopDone

Boogie program verifier finished with 1 verified, 1 error

===== While_Valid_7.whiley =====

GOT: ./While_Valid_7.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== While_Valid_70.whiley =====

GOT: ./While_Valid_70.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.
While_Valid_70.bpl(62,5): Error BP5001: This assertion might not hold.
Execution trace:
    While_Valid_70.bpl(62,5): anon0

Boogie program verifier finished with 1 verified, 1 error

===== While_Valid_9.whiley =====

GOT: ./While_Valid_9.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
===== ensures_invalid.whiley =====

GOT: ./ensures_invalid.wyil
Boogie program verifier version 2.3.0.61016, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 2 verified, 0 errors
